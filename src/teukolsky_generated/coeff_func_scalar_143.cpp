
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_715(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[715] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0006510416666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666667"))*((HighPrecisionScalar("0.7587869106393281462690342781122674276441125639702901794971577937282469954573703412035671243024329437"))*((pow(a,-13))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,4)))+(((-1)*((pow(a,2))*((r)*(((6)*(M))+((79)*(r))))))+((2)*((pow(r,2))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2)))))))))*(((a)*((r)*(((-765765)*((((2)*(M))+((-1)*(r)))*(pow(r,24))))+(((45687)*((pow(a,24))*(((2)*(M))+(r))))+(((30030)*((pow(a,2))*((pow(r,21))*(((-250)*(pow(M,2)))+(((-362)*((M)*(r)))+((269)*(pow(r,2))))))))+(((2)*((pow(a,22))*((r)*(((604798)*(pow(M,2)))+(((1153042)*((M)*(r)))+((448165)*(pow(r,2))))))))+(((-12012)*((pow(a,4))*((pow(r,18))*(((1012)*(pow(M,3)))+(((4732)*((pow(M,2))*(r)))+(((2299)*((M)*(pow(r,2))))+((-3224)*(pow(r,3)))))))))+(((4)*((pow(a,20))*((pow(r,2))*(((6148)*(pow(M,3)))+(((3033212)*((pow(M,2))*(r)))+(((4838671)*((M)*(pow(r,2))))+((1798862)*(pow(r,3)))))))))+(((-66)*((pow(a,6))*((pow(r,15))*(((102848)*(pow(M,4)))+(((1267776)*((pow(M,3))*(r)))+(((2786538)*((pow(M,2))*(pow(r,2))))+(((178806)*((M)*(pow(r,3))))+((-1688265)*(pow(r,4))))))))))+(((2)*((pow(a,18))*((pow(r,3))*(((-2627264)*(pow(M,4)))+(((-5156160)*((pow(M,3))*(r)))+(((23441010)*((pow(M,2))*(pow(r,2))))+(((42093618)*((M)*(pow(r,3))))+((16365111)*(pow(r,4))))))))))+(((-11)*((pow(a,8))*((pow(r,12))*(((41984)*(pow(M,5)))+(((3597568)*((pow(M,4))*(r)))+(((22408640)*((pow(M,3))*(pow(r,2))))+(((29576960)*((pow(M,2))*(pow(r,3))))+(((-9160166)*((M)*(pow(r,4))))+((-19450447)*(pow(r,5)))))))))))+(((pow(a,16))*((pow(r,4))*(((-793600)*(pow(M,5)))+(((-33511168)*((pow(M,4))*(r)))+(((-74858816)*((pow(M,3))*(pow(r,2))))+(((82433152)*((pow(M,2))*(pow(r,3))))+(((221750074)*((M)*(pow(r,4))))+((96054175)*(pow(r,5))))))))))+(((4)*((pow(a,14))*((pow(r,5))*(((34816)*(pow(M,6)))+(((-689152)*((pow(M,5))*(r)))+(((-22053920)*((pow(M,4))*(pow(r,2))))+(((-57717216)*((pow(M,3))*(pow(r,3))))+(((7402534)*((pow(M,2))*(pow(r,4))))+(((94302194)*((M)*(pow(r,5))))+((48498625)*(pow(r,6))))))))))))+(((4)*((pow(a,10))*((pow(r,9))*(((20480)*(pow(M,6)))+(((-523264)*((pow(M,5))*(r)))+(((-23934880)*((pow(M,4))*(pow(r,2))))+(((-100695392)*((pow(M,3))*(pow(r,3))))+(((-81469438)*((pow(M,2))*(pow(r,4))))+(((72865946)*((M)*(pow(r,5))))+((72061727)*(pow(r,6))))))))))))+((-8)*((pow(a,12))*((pow(r,6))*(((2048)*(pow(M,7)))+(((-27648)*((pow(M,6))*(r)))+(((449280)*((pow(M,5))*(pow(r,2))))+(((15364160)*((pow(M,4))*(pow(r,3))))+(((49268820)*((pow(M,3))*(pow(r,4))))+(((18996708)*((pow(M,2))*(pow(r,5))))+(((-52460373)*((M)*(pow(r,6))))+((-34828605)*(pow(r,7)))))))))))))))))))))))))))+((-3465)*((pow((pow(a,2))+(pow(r,2)),6))*(((pow(a,12))+(((221)*(pow(r,12)))+(((6)*((pow(a,10))*((r)*(((12)*(M))+((7)*(r))))))+(((78)*((pow(a,2))*((pow(r,9))*(((12)*(M))+((11)*(r))))))+(((39)*((pow(a,4))*((pow(r,6))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((33)*(pow(r,2))))))))+(((3)*((pow(a,8))*((pow(r,2))*(((160)*(pow(M,2)))+(((256)*((M)*(r)))+((105)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((432)*((pow(M,2))*(r)))+(((564)*((M)*(pow(r,2))))+((231)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_716(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[716] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0001627604166666666666666666666666666666666666666666666666666666666666666666666666666666666666666666667"))*((HighPrecisionScalar("2.516611478423583232412228268982039019407398234874460046099542301903573984639270398527484024715841324"))*((pow(a,-15))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,8)))+(((pow(a,6))*((((26)*(M))+((-59)*(r)))*(r)))+(((18)*((pow(r,6))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2)))))))+(((-2)*((pow(a,4))*((pow(r,2))*(((46)*(pow(M,2)))+(((573)*((M)*(r)))+((431)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((64)*(pow(M,3)))+(((2888)*((pow(M,2))*(r)))+(((286)*((M)*(pow(r,2))))+((-1611)*(pow(r,3))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((45687)*(pow(a,20)))+(((765765)*(pow(r,20)))+(((60060)*((pow(a,2))*((pow(r,17))*(((37)*(M))+((109)*(r))))))+(((4)*((pow(a,18))*((r)*(((174043)*(M))+((201239)*(r))))))+(((3003)*((pow(a,4))*((pow(r,14))*(((544)*(pow(M,2)))+(((5376)*((M)*(r)))+((8281)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((1404640)*(pow(M,2)))+(((6974016)*((M)*(r)))+((5539849)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((240)*(pow(M,3)))+(((18204)*((pow(M,2))*(r)))+(((96367)*((M)*(pow(r,2))))+((104438)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((11376)*(pow(M,3)))+(((543804)*((pow(M,2))*(r)))+(((1841363)*((M)*(pow(r,2))))+((1302848)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((-1024)*(pow(M,4)))+(((25088)*((pow(M,3))*(r)))+(((1069104)*((pow(M,2))*(pow(r,2))))+(((4123616)*((M)*(pow(r,3))))+((3581843)*(pow(r,4))))))))))+(((8)*((pow(a,10))*((pow(r,5))*(((512)*(pow(M,5)))+(((-6912)*((pow(M,4))*(r)))+(((113216)*((pow(M,3))*(pow(r,2))))+(((3828944)*((pow(M,2))*(pow(r,3))))+(((12482685)*((M)*(pow(r,4))))+((9437819)*(pow(r,5)))))))))))+((pow(a,12))*(((-32768)*((pow(M,4))*(pow(r,4))))+(((662528)*((pow(M,3))*(pow(r,5))))+(((22385568)*((pow(M,2))*(pow(r,6))))+(((69285760)*((M)*(pow(r,7))))+((48823190)*(pow(r,8))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((pow((pow(a,2))+(pow(r,2)),6))*(((pow(a,12))+(((221)*(pow(r,12)))+(((6)*((pow(a,10))*((r)*(((12)*(M))+((7)*(r))))))+(((78)*((pow(a,2))*((pow(r,9))*(((12)*(M))+((11)*(r))))))+(((39)*((pow(a,4))*((pow(r,6))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((33)*(pow(r,2))))))))+(((3)*((pow(a,8))*((pow(r,2))*(((160)*(pow(M,2)))+(((256)*((M)*(r)))+((105)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((432)*((pow(M,2))*(r)))+(((564)*((M)*(pow(r,2))))+((231)*(pow(r,3)))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_717(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[717] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0002441406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.5365433699886597972385253662533529413278456698692422902428797398617031095109201870891931699837441445"))*((pow(a,-17))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((6)*(pow(a,12)))+(((3)*((pow(a,10))*((((74)*(M))+((-31)*(r)))*(r))))+(((286)*((pow(r,10))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2)))))))+(((-2)*((pow(a,8))*((pow(r,2))*(((34)*(pow(M,2)))+(((4129)*((M)*(r)))+((2701)*(pow(r,2))))))))+(((11)*((pow(a,2))*((pow(r,7))*(((160)*(pow(M,3)))+(((7248)*((pow(M,2))*(r)))+(((2018)*((M)*(pow(r,2))))+((-3907)*(pow(r,3)))))))))+(((-2)*((pow(a,6))*((pow(r,3))*(((720)*(pow(M,3)))+(((3496)*((pow(M,2))*(r)))+(((21506)*((M)*(pow(r,2))))+((13869)*(pow(r,3)))))))))+((2)*((pow(a,4))*((pow(r,4))*(((640)*(pow(M,4)))+(((29600)*((pow(M,3))*(r)))+(((34676)*((pow(M,2))*(pow(r,2))))+(((-18894)*((M)*(pow(r,3))))+((-26271)*(pow(r,4))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((45687)*(pow(a,20)))+(((765765)*(pow(r,20)))+(((60060)*((pow(a,2))*((pow(r,17))*(((37)*(M))+((109)*(r))))))+(((4)*((pow(a,18))*((r)*(((174043)*(M))+((201239)*(r))))))+(((3003)*((pow(a,4))*((pow(r,14))*(((544)*(pow(M,2)))+(((5376)*((M)*(r)))+((8281)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((1404640)*(pow(M,2)))+(((6974016)*((M)*(r)))+((5539849)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((240)*(pow(M,3)))+(((18204)*((pow(M,2))*(r)))+(((96367)*((M)*(pow(r,2))))+((104438)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((11376)*(pow(M,3)))+(((543804)*((pow(M,2))*(r)))+(((1841363)*((M)*(pow(r,2))))+((1302848)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((-1024)*(pow(M,4)))+(((25088)*((pow(M,3))*(r)))+(((1069104)*((pow(M,2))*(pow(r,2))))+(((4123616)*((M)*(pow(r,3))))+((3581843)*(pow(r,4))))))))))+(((8)*((pow(a,10))*((pow(r,5))*(((512)*(pow(M,5)))+(((-6912)*((pow(M,4))*(r)))+(((113216)*((pow(M,3))*(pow(r,2))))+(((3828944)*((pow(M,2))*(pow(r,3))))+(((12482685)*((M)*(pow(r,4))))+((9437819)*(pow(r,5)))))))))))+((pow(a,12))*(((-32768)*((pow(M,4))*(pow(r,4))))+(((662528)*((pow(M,3))*(pow(r,5))))+(((22385568)*((pow(M,2))*(pow(r,6))))+(((69285760)*((M)*(pow(r,7))))+((48823190)*(pow(r,8))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((pow((pow(a,2))+(pow(r,2)),6))*(((pow(a,12))+(((221)*(pow(r,12)))+(((6)*((pow(a,10))*((r)*(((12)*(M))+((7)*(r))))))+(((78)*((pow(a,2))*((pow(r,9))*(((12)*(M))+((11)*(r))))))+(((39)*((pow(a,4))*((pow(r,6))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((33)*(pow(r,2))))))))+(((3)*((pow(a,8))*((pow(r,2))*(((160)*(pow(M,2)))+(((256)*((M)*(r)))+((105)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((432)*((pow(M,2))*(r)))+(((564)*((M)*(pow(r,2))))+((231)*(pow(r,3)))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_718(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[718] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0003865559895833333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((pow(a,-19))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,16)))+(((pow(a,14))*((r)*(((138)*(M))+((5)*(r)))))+(((442)*((pow(r,14))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2)))))))+(((-2)*((pow(a,12))*((pow(r,2))*(((-266)*(pow(M,2)))+(((2113)*((M)*(r)))+((1389)*(pow(r,2))))))))+(((13)*((pow(a,2))*((pow(r,11))*(((288)*(pow(M,3)))+(((13080)*((pow(M,2))*(r)))+(((5166)*((M)*(pow(r,2))))+((-7283)*(pow(r,3)))))))))+(((-1)*((pow(a,10))*((pow(r,3))*(((1568)*(pow(M,3)))+(((26088)*((pow(M,2))*(r)))+(((57054)*((M)*(pow(r,2))))+((26817)*(pow(r,3)))))))))+(((26)*((pow(a,4))*((pow(r,8))*(((192)*(pow(M,4)))+(((8928)*((pow(M,3))*(r)))+(((12750)*((pow(M,2))*(pow(r,2))))+(((-2871)*((M)*(pow(r,3))))+((-7045)*(pow(r,4))))))))))+(((-2)*((pow(a,8))*((pow(r,4))*(((576)*(pow(M,4)))+(((-18848)*((pow(M,3))*(r)))+(((26394)*((pow(M,2))*(pow(r,2))))+(((95913)*((M)*(pow(r,3))))+((49386)*(pow(r,4))))))))))+((pow(a,6))*((pow(r,5))*(((2048)*(pow(M,5)))+(((98048)*((pow(M,4))*(r)))+(((263040)*((pow(M,3))*(pow(r,2))))+(((136176)*((pow(M,2))*(pow(r,3))))+(((-241602)*((M)*(pow(r,4))))+((-183117)*(pow(r,5))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((45687)*(pow(a,20)))+(((765765)*(pow(r,20)))+(((60060)*((pow(a,2))*((pow(r,17))*(((37)*(M))+((109)*(r))))))+(((4)*((pow(a,18))*((r)*(((174043)*(M))+((201239)*(r))))))+(((3003)*((pow(a,4))*((pow(r,14))*(((544)*(pow(M,2)))+(((5376)*((M)*(r)))+((8281)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((1404640)*(pow(M,2)))+(((6974016)*((M)*(r)))+((5539849)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((240)*(pow(M,3)))+(((18204)*((pow(M,2))*(r)))+(((96367)*((M)*(pow(r,2))))+((104438)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((11376)*(pow(M,3)))+(((543804)*((pow(M,2))*(r)))+(((1841363)*((M)*(pow(r,2))))+((1302848)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((-1024)*(pow(M,4)))+(((25088)*((pow(M,3))*(r)))+(((1069104)*((pow(M,2))*(pow(r,2))))+(((4123616)*((M)*(pow(r,3))))+((3581843)*(pow(r,4))))))))))+(((8)*((pow(a,10))*((pow(r,5))*(((512)*(pow(M,5)))+(((-6912)*((pow(M,4))*(r)))+(((113216)*((pow(M,3))*(pow(r,2))))+(((3828944)*((pow(M,2))*(pow(r,3))))+(((12482685)*((M)*(pow(r,4))))+((9437819)*(pow(r,5)))))))))))+((pow(a,12))*(((-32768)*((pow(M,4))*(pow(r,4))))+(((662528)*((pow(M,3))*(pow(r,5))))+(((22385568)*((pow(M,2))*(pow(r,6))))+(((69285760)*((M)*(pow(r,7))))+((48823190)*(pow(r,8))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((pow((pow(a,2))+(pow(r,2)),6))*(((pow(a,12))+(((221)*(pow(r,12)))+(((6)*((pow(a,10))*((r)*(((12)*(M))+((7)*(r))))))+(((78)*((pow(a,2))*((pow(r,9))*(((12)*(M))+((11)*(r))))))+(((39)*((pow(a,4))*((pow(r,6))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((33)*(pow(r,2))))))))+(((3)*((pow(a,8))*((pow(r,2))*(((160)*(pow(M,2)))+(((256)*((M)*(r)))+((105)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((432)*((pow(M,2))*(r)))+(((564)*((M)*(pow(r,2))))+((231)*(pow(r,3)))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_719(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[719] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0007731119791666666666666666666666666666666666666666666666666666666666666666666666666666666666666666667"))*((pow(a,-17))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,12))+(((221)*(pow(r,12)))+(((6)*((pow(a,10))*((r)*(((12)*(M))+((7)*(r))))))+(((78)*((pow(a,2))*((pow(r,9))*(((12)*(M))+((11)*(r))))))+(((39)*((pow(a,4))*((pow(r,6))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((33)*(pow(r,2))))))))+(((3)*((pow(a,8))*((pow(r,2))*(((160)*(pow(M,2)))+(((256)*((M)*(r)))+((105)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((432)*((pow(M,2))*(r)))+(((564)*((M)*(pow(r,2))))+((231)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((45687)*(pow(a,20)))+(((765765)*(pow(r,20)))+(((60060)*((pow(a,2))*((pow(r,17))*(((37)*(M))+((109)*(r))))))+(((4)*((pow(a,18))*((r)*(((174043)*(M))+((201239)*(r))))))+(((3003)*((pow(a,4))*((pow(r,14))*(((544)*(pow(M,2)))+(((5376)*((M)*(r)))+((8281)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((1404640)*(pow(M,2)))+(((6974016)*((M)*(r)))+((5539849)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((240)*(pow(M,3)))+(((18204)*((pow(M,2))*(r)))+(((96367)*((M)*(pow(r,2))))+((104438)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((11376)*(pow(M,3)))+(((543804)*((pow(M,2))*(r)))+(((1841363)*((M)*(pow(r,2))))+((1302848)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((-1024)*(pow(M,4)))+(((25088)*((pow(M,3))*(r)))+(((1069104)*((pow(M,2))*(pow(r,2))))+(((4123616)*((M)*(pow(r,3))))+((3581843)*(pow(r,4))))))))))+(((8)*((pow(a,10))*((pow(r,5))*(((512)*(pow(M,5)))+(((-6912)*((pow(M,4))*(r)))+(((113216)*((pow(M,3))*(pow(r,2))))+(((3828944)*((pow(M,2))*(pow(r,3))))+(((12482685)*((M)*(pow(r,4))))+((9437819)*(pow(r,5)))))))))))+((pow(a,12))*(((-32768)*((pow(M,4))*(pow(r,4))))+(((662528)*((pow(M,3))*(pow(r,5))))+(((22385568)*((pow(M,2))*(pow(r,6))))+(((69285760)*((M)*(pow(r,7))))+((48823190)*(pow(r,8))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((pow((pow(a,2))+(pow(r,2)),6))*(((pow(a,12))+(((221)*(pow(r,12)))+(((6)*((pow(a,10))*((r)*(((12)*(M))+((7)*(r))))))+(((78)*((pow(a,2))*((pow(r,9))*(((12)*(M))+((11)*(r))))))+(((39)*((pow(a,4))*((pow(r,6))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((33)*(pow(r,2))))))))+(((3)*((pow(a,8))*((pow(r,2))*(((160)*(pow(M,2)))+(((256)*((M)*(r)))+((105)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((432)*((pow(M,2))*(r)))+(((564)*((M)*(pow(r,2))))+((231)*(pow(r,3)))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

}
