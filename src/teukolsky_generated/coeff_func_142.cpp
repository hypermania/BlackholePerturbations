
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_710(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[710] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0009765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.208941049653977767709106691471386719226321555561140362467667806564523743572026443872869899567603956"))*((pow(a,-17))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((3)*(pow(a,8)))+(((pow(a,6))*((((11)*(M))+((-92)*(r)))*(r)))+(((13)*((pow(r,6))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2)))))))+(((-1)*((pow(a,4))*((pow(r,2))*(((54)*(pow(M,2)))+(((501)*((M)*(r)))+((698)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((40)*(pow(M,3)))+(((1812)*((pow(M,2))*(r)))+(((485)*((M)*(pow(r,2))))+((-1188)*(pow(r,3))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((8192)*(pow(a,24)))+(((765765)*(pow(r,24)))+(((15015)*((pow(a,2))*((pow(r,21))*(((178)*(M))+((523)*(r))))))+(((3)*((pow(a,22))*((r)*(((150194)*(M))+((107865)*(r))))))+(((3003)*((pow(a,4))*((pow(r,18))*(((824)*(pow(M,2)))+(((8076)*((M)*(r)))+((12141)*(pow(r,2))))))))+(((pow(a,20))*((pow(r,2))*(((1911848)*(pow(M,2)))+(((6417668)*((M)*(r)))+((3496835)*(pow(r,2)))))))+(((429)*((pow(a,6))*((pow(r,15))*(((640)*(pow(M,3)))+(((45184)*((pow(M,2))*(r)))+(((228918)*((M)*(pow(r,2))))+((235715)*(pow(r,3)))))))))+(((pow(a,18))*((pow(r,3))*(((508032)*(pow(M,3)))+(((16056832)*((pow(M,2))*(r)))+(((37863846)*((M)*(pow(r,2))))+((19036369)*(pow(r,3))))))))+(((286)*((pow(a,8))*((pow(r,12))*(((-256)*(pow(M,4)))+(((6272)*((pow(M,3))*(r)))+(((231792)*((pow(M,2))*(pow(r,2))))+(((815816)*((M)*(pow(r,3))))+((650639)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((-170496)*(pow(M,4)))+(((2707200)*((pow(M,3))*(r)))+(((58610336)*((pow(M,2))*(pow(r,2))))+(((125859312)*((M)*(pow(r,3))))+((63297225)*(pow(r,4)))))))))+(((26)*((pow(a,10))*((pow(r,9))*(((1024)*(pow(M,5)))+(((-13824)*((pow(M,4))*(r)))+(((189120)*((pow(M,3))*(pow(r,2))))+(((4970368)*((pow(M,2))*(pow(r,3))))+(((13824438)*((M)*(pow(r,4))))+((9171405)*(pow(r,5)))))))))))+(((2)*((pow(a,14))*((pow(r,5))*(((25600)*(pow(M,5)))+(((-276992)*((pow(M,4))*(r)))+(((3021760)*((pow(M,3))*(pow(r,2))))+(((60798016)*((pow(M,2))*(pow(r,3))))+(((132652694)*((M)*(pow(r,4))))+((70196015)*(pow(r,5)))))))))))+((2)*((pow(a,12))*((pow(r,6))*(((-4096)*(pow(M,6)))+(((38912)*((pow(M,5))*(r)))+(((-334848)*((pow(M,4))*(pow(r,2))))+(((3621120)*((pow(M,3))*(pow(r,3))))+(((78488600)*((pow(M,2))*(pow(r,4))))+(((187040556)*((M)*(pow(r,5))))+((108536455)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),8))*((((17)*(pow(r,11)))+(((pow(a,10))*(((2)*(M))+(r)))+(((pow(a,2))*((pow(r,8))*(((82)*(M))+((61)*(r)))))+(((pow(a,8))*((r)*(((32)*(pow(M,2)))+(((40)*((M)*(r)))+((13)*(pow(r,2)))))))+(((2)*((pow(a,4))*((pow(r,5))*(((64)*(pow(M,2)))+(((100)*((M)*(r)))+((41)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((32)*(pow(M,3)))+(((80)*((pow(M,2))*(r)))+(((78)*((M)*(pow(r,2))))+((25)*(pow(r,3))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_711(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[711] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.004638671875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-19))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*(((pow(a,12))+(((pow(a,10))*((((13)*(M))+((-24)*(r)))*(r)))+(((17)*((pow(r,10))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2)))))))+(((-1)*((pow(a,8))*((pow(r,2))*(((14)*(pow(M,2)))+(((459)*((M)*(r)))+((439)*(pow(r,2))))))))+(((pow(a,2))*((pow(r,7))*(((96)*(pow(M,3)))+(((4360)*((pow(M,2))*(r)))+(((1705)*((M)*(pow(r,2))))+((-2592)*(pow(r,3))))))))+(((-2)*((pow(a,6))*((pow(r,3))*(((32)*(pow(M,3)))+(((-52)*((pow(M,2))*(r)))+(((1011)*((M)*(pow(r,2))))+((932)*(pow(r,3)))))))))+((pow(a,4))*((pow(r,4))*(((64)*(pow(M,4)))+(((2976)*((pow(M,3))*(r)))+(((4188)*((pow(M,2))*(pow(r,2))))+(((-1358)*((M)*(pow(r,3))))+((-3277)*(pow(r,4)))))))))))))))*((expr[0])*(((((8192)*(pow(a,25)))+(((765765)*((a)*(pow(r,24))))+(((15015)*((pow(a,3))*((pow(r,21))*(((178)*(M))+((523)*(r))))))+(((3)*((pow(a,23))*((r)*(((150194)*(M))+((107865)*(r))))))+(((3003)*((pow(a,5))*((pow(r,18))*(((824)*(pow(M,2)))+(((8076)*((M)*(r)))+((12141)*(pow(r,2))))))))+(((pow(a,21))*((pow(r,2))*(((1911848)*(pow(M,2)))+(((6417668)*((M)*(r)))+((3496835)*(pow(r,2)))))))+(((429)*((pow(a,7))*((pow(r,15))*(((640)*(pow(M,3)))+(((45184)*((pow(M,2))*(r)))+(((228918)*((M)*(pow(r,2))))+((235715)*(pow(r,3)))))))))+(((pow(a,19))*((pow(r,3))*(((508032)*(pow(M,3)))+(((16056832)*((pow(M,2))*(r)))+(((37863846)*((M)*(pow(r,2))))+((19036369)*(pow(r,3))))))))+(((286)*((pow(a,9))*((pow(r,12))*(((-256)*(pow(M,4)))+(((6272)*((pow(M,3))*(r)))+(((231792)*((pow(M,2))*(pow(r,2))))+(((815816)*((M)*(pow(r,3))))+((650639)*(pow(r,4))))))))))+(((pow(a,17))*((pow(r,4))*(((-170496)*(pow(M,4)))+(((2707200)*((pow(M,3))*(r)))+(((58610336)*((pow(M,2))*(pow(r,2))))+(((125859312)*((M)*(pow(r,3))))+((63297225)*(pow(r,4)))))))))+(((26)*((pow(a,11))*((pow(r,9))*(((1024)*(pow(M,5)))+(((-13824)*((pow(M,4))*(r)))+(((189120)*((pow(M,3))*(pow(r,2))))+(((4970368)*((pow(M,2))*(pow(r,3))))+(((13824438)*((M)*(pow(r,4))))+((9171405)*(pow(r,5)))))))))))+(((2)*((pow(a,15))*((pow(r,5))*(((25600)*(pow(M,5)))+(((-276992)*((pow(M,4))*(r)))+(((3021760)*((pow(M,3))*(pow(r,2))))+(((60798016)*((pow(M,2))*(pow(r,3))))+(((132652694)*((M)*(pow(r,4))))+((70196015)*(pow(r,5)))))))))))+((2)*((pow(a,13))*((pow(r,6))*(((-4096)*(pow(M,6)))+(((38912)*((pow(M,5))*(r)))+(((-334848)*((pow(M,4))*(pow(r,2))))+(((3621120)*((pow(M,3))*(pow(r,3))))+(((78488600)*((pow(M,2))*(pow(r,4))))+(((187040556)*((M)*(pow(r,5))))+((108536455)*(pow(r,6))))))))))))))))))))))))*(expr[0]))+((-45045)*((pow((pow(a,2))+(pow(r,2)),8))*(((pow(a,8))+(((17)*(pow(r,8)))+(((4)*((pow(a,6))*((r)*(((4)*(M))+((3)*(r))))))+(((4)*((pow(a,2))*((pow(r,5))*(((12)*(M))+((11)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((16)*(pow(M,2)))+(((32)*((M)*(r)))+((19)*(pow(r,2))))))))))))*((expr[1])*((expr[2])*(expr[3]))))))))))))).cast<double>());
}

void compute_coeffs_712(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[712] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.004638671875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-17))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,8))+(((17)*(pow(r,8)))+(((4)*((pow(a,6))*((r)*(((4)*(M))+((3)*(r))))))+(((4)*((pow(a,2))*((pow(r,5))*(((12)*(M))+((11)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((16)*(pow(M,2)))+(((32)*((M)*(r)))+((19)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((8192)*(pow(a,24)))+(((765765)*(pow(r,24)))+(((15015)*((pow(a,2))*((pow(r,21))*(((178)*(M))+((523)*(r))))))+(((3)*((pow(a,22))*((r)*(((150194)*(M))+((107865)*(r))))))+(((3003)*((pow(a,4))*((pow(r,18))*(((824)*(pow(M,2)))+(((8076)*((M)*(r)))+((12141)*(pow(r,2))))))))+(((pow(a,20))*((pow(r,2))*(((1911848)*(pow(M,2)))+(((6417668)*((M)*(r)))+((3496835)*(pow(r,2)))))))+(((429)*((pow(a,6))*((pow(r,15))*(((640)*(pow(M,3)))+(((45184)*((pow(M,2))*(r)))+(((228918)*((M)*(pow(r,2))))+((235715)*(pow(r,3)))))))))+(((pow(a,18))*((pow(r,3))*(((508032)*(pow(M,3)))+(((16056832)*((pow(M,2))*(r)))+(((37863846)*((M)*(pow(r,2))))+((19036369)*(pow(r,3))))))))+(((286)*((pow(a,8))*((pow(r,12))*(((-256)*(pow(M,4)))+(((6272)*((pow(M,3))*(r)))+(((231792)*((pow(M,2))*(pow(r,2))))+(((815816)*((M)*(pow(r,3))))+((650639)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((-170496)*(pow(M,4)))+(((2707200)*((pow(M,3))*(r)))+(((58610336)*((pow(M,2))*(pow(r,2))))+(((125859312)*((M)*(pow(r,3))))+((63297225)*(pow(r,4)))))))))+(((26)*((pow(a,10))*((pow(r,9))*(((1024)*(pow(M,5)))+(((-13824)*((pow(M,4))*(r)))+(((189120)*((pow(M,3))*(pow(r,2))))+(((4970368)*((pow(M,2))*(pow(r,3))))+(((13824438)*((M)*(pow(r,4))))+((9171405)*(pow(r,5)))))))))))+(((2)*((pow(a,14))*((pow(r,5))*(((25600)*(pow(M,5)))+(((-276992)*((pow(M,4))*(r)))+(((3021760)*((pow(M,3))*(pow(r,2))))+(((60798016)*((pow(M,2))*(pow(r,3))))+(((132652694)*((M)*(pow(r,4))))+((70196015)*(pow(r,5)))))))))))+((2)*((pow(a,12))*((pow(r,6))*(((-4096)*(pow(M,6)))+(((38912)*((pow(M,5))*(r)))+(((-334848)*((pow(M,4))*(pow(r,2))))+(((3621120)*((pow(M,3))*(pow(r,3))))+(((78488600)*((pow(M,2))*(pow(r,4))))+(((187040556)*((M)*(pow(r,5))))+((108536455)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),8))*((((17)*(pow(r,11)))+(((pow(a,10))*(((2)*(M))+(r)))+(((pow(a,2))*((pow(r,8))*(((82)*(M))+((61)*(r)))))+(((pow(a,8))*((r)*(((32)*(pow(M,2)))+(((40)*((M)*(r)))+((13)*(pow(r,2)))))))+(((2)*((pow(a,4))*((pow(r,5))*(((64)*(pow(M,2)))+(((100)*((M)*(r)))+((41)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((32)*(pow(M,3)))+(((80)*((pow(M,2))*(r)))+(((78)*((M)*(pow(r,2))))+((25)*(pow(r,3))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_713(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[713] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.002319335937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-19))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((pow(a,8))+(((17)*(pow(r,8)))+(((4)*((pow(a,6))*((r)*(((4)*(M))+((3)*(r))))))+(((4)*((pow(a,2))*((pow(r,5))*(((12)*(M))+((11)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((16)*(pow(M,2)))+(((32)*((M)*(r)))+((19)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((8192)*(pow(a,24)))+(((765765)*(pow(r,24)))+(((15015)*((pow(a,2))*((pow(r,21))*(((178)*(M))+((523)*(r))))))+(((3)*((pow(a,22))*((r)*(((150194)*(M))+((107865)*(r))))))+(((3003)*((pow(a,4))*((pow(r,18))*(((824)*(pow(M,2)))+(((8076)*((M)*(r)))+((12141)*(pow(r,2))))))))+(((pow(a,20))*((pow(r,2))*(((1911848)*(pow(M,2)))+(((6417668)*((M)*(r)))+((3496835)*(pow(r,2)))))))+(((429)*((pow(a,6))*((pow(r,15))*(((640)*(pow(M,3)))+(((45184)*((pow(M,2))*(r)))+(((228918)*((M)*(pow(r,2))))+((235715)*(pow(r,3)))))))))+(((pow(a,18))*((pow(r,3))*(((508032)*(pow(M,3)))+(((16056832)*((pow(M,2))*(r)))+(((37863846)*((M)*(pow(r,2))))+((19036369)*(pow(r,3))))))))+(((286)*((pow(a,8))*((pow(r,12))*(((-256)*(pow(M,4)))+(((6272)*((pow(M,3))*(r)))+(((231792)*((pow(M,2))*(pow(r,2))))+(((815816)*((M)*(pow(r,3))))+((650639)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((-170496)*(pow(M,4)))+(((2707200)*((pow(M,3))*(r)))+(((58610336)*((pow(M,2))*(pow(r,2))))+(((125859312)*((M)*(pow(r,3))))+((63297225)*(pow(r,4)))))))))+(((26)*((pow(a,10))*((pow(r,9))*(((1024)*(pow(M,5)))+(((-13824)*((pow(M,4))*(r)))+(((189120)*((pow(M,3))*(pow(r,2))))+(((4970368)*((pow(M,2))*(pow(r,3))))+(((13824438)*((M)*(pow(r,4))))+((9171405)*(pow(r,5)))))))))))+(((2)*((pow(a,14))*((pow(r,5))*(((25600)*(pow(M,5)))+(((-276992)*((pow(M,4))*(r)))+(((3021760)*((pow(M,3))*(pow(r,2))))+(((60798016)*((pow(M,2))*(pow(r,3))))+(((132652694)*((M)*(pow(r,4))))+((70196015)*(pow(r,5)))))))))))+((2)*((pow(a,12))*((pow(r,6))*(((-4096)*(pow(M,6)))+(((38912)*((pow(M,5))*(r)))+(((-334848)*((pow(M,4))*(pow(r,2))))+(((3621120)*((pow(M,3))*(pow(r,3))))+(((78488600)*((pow(M,2))*(pow(r,4))))+(((187040556)*((M)*(pow(r,5))))+((108536455)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),8))*((((17)*(pow(r,11)))+(((pow(a,10))*(((2)*(M))+(r)))+(((pow(a,2))*((pow(r,8))*(((82)*(M))+((61)*(r)))))+(((pow(a,8))*((r)*(((32)*(pow(M,2)))+(((40)*((M)*(r)))+((13)*(pow(r,2)))))))+(((2)*((pow(a,4))*((pow(r,5))*(((64)*(pow(M,2)))+(((100)*((M)*(r)))+((41)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((32)*(pow(M,3)))+(((80)*((pow(M,2))*(r)))+(((78)*((M)*(pow(r,2))))+((25)*(pow(r,3))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_714(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[714] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.03710937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-18))*((M)*((r)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*(((pow(a,8))+(((17)*(pow(r,8)))+(((4)*((pow(a,6))*((r)*(((4)*(M))+((3)*(r))))))+(((4)*((pow(a,2))*((pow(r,5))*(((12)*(M))+((11)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((16)*(pow(M,2)))+(((32)*((M)*(r)))+((19)*(pow(r,2))))))))))))*((expr[0])*(((((8192)*(pow(a,25)))+(((765765)*((a)*(pow(r,24))))+(((15015)*((pow(a,3))*((pow(r,21))*(((178)*(M))+((523)*(r))))))+(((3)*((pow(a,23))*((r)*(((150194)*(M))+((107865)*(r))))))+(((3003)*((pow(a,5))*((pow(r,18))*(((824)*(pow(M,2)))+(((8076)*((M)*(r)))+((12141)*(pow(r,2))))))))+(((pow(a,21))*((pow(r,2))*(((1911848)*(pow(M,2)))+(((6417668)*((M)*(r)))+((3496835)*(pow(r,2)))))))+(((429)*((pow(a,7))*((pow(r,15))*(((640)*(pow(M,3)))+(((45184)*((pow(M,2))*(r)))+(((228918)*((M)*(pow(r,2))))+((235715)*(pow(r,3)))))))))+(((pow(a,19))*((pow(r,3))*(((508032)*(pow(M,3)))+(((16056832)*((pow(M,2))*(r)))+(((37863846)*((M)*(pow(r,2))))+((19036369)*(pow(r,3))))))))+(((286)*((pow(a,9))*((pow(r,12))*(((-256)*(pow(M,4)))+(((6272)*((pow(M,3))*(r)))+(((231792)*((pow(M,2))*(pow(r,2))))+(((815816)*((M)*(pow(r,3))))+((650639)*(pow(r,4))))))))))+(((pow(a,17))*((pow(r,4))*(((-170496)*(pow(M,4)))+(((2707200)*((pow(M,3))*(r)))+(((58610336)*((pow(M,2))*(pow(r,2))))+(((125859312)*((M)*(pow(r,3))))+((63297225)*(pow(r,4)))))))))+(((26)*((pow(a,11))*((pow(r,9))*(((1024)*(pow(M,5)))+(((-13824)*((pow(M,4))*(r)))+(((189120)*((pow(M,3))*(pow(r,2))))+(((4970368)*((pow(M,2))*(pow(r,3))))+(((13824438)*((M)*(pow(r,4))))+((9171405)*(pow(r,5)))))))))))+(((2)*((pow(a,15))*((pow(r,5))*(((25600)*(pow(M,5)))+(((-276992)*((pow(M,4))*(r)))+(((3021760)*((pow(M,3))*(pow(r,2))))+(((60798016)*((pow(M,2))*(pow(r,3))))+(((132652694)*((M)*(pow(r,4))))+((70196015)*(pow(r,5)))))))))))+((2)*((pow(a,13))*((pow(r,6))*(((-4096)*(pow(M,6)))+(((38912)*((pow(M,5))*(r)))+(((-334848)*((pow(M,4))*(pow(r,2))))+(((3621120)*((pow(M,3))*(pow(r,3))))+(((78488600)*((pow(M,2))*(pow(r,4))))+(((187040556)*((M)*(pow(r,5))))+((108536455)*(pow(r,6))))))))))))))))))))))))*(expr[0]))+((-45045)*((pow((pow(a,2))+(pow(r,2)),8))*(((pow(a,8))+(((17)*(pow(r,8)))+(((4)*((pow(a,6))*((r)*(((4)*(M))+((3)*(r))))))+(((4)*((pow(a,2))*((pow(r,5))*(((12)*(M))+((11)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((16)*(pow(M,2)))+(((32)*((M)*(r)))+((19)*(pow(r,2))))))))))))*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}
