
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_585(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[585] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.002371651785714285714285714285714285714285714285714285714285714285714285714285714285714285714285714286"))*((pow(a,-16))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*(((-1)*((a)*((r)*((((184331)*(pow(a,28)))+(((-28)*((pow(a,26))*((((34913)*(M))+((-74709)*(r)))*(r))))+(((-60060)*((pow(a,2))*(((M)+((-11)*(r)))*(pow(r,25)))))+(((45045)*(pow(r,28)))+(((3003)*((pow(a,4))*((pow(r,22))*(((32)*(pow(M,2)))+(((-272)*((M)*(r)))+((1503)*(pow(r,2))))))))+(((7)*((pow(a,24))*((pow(r,2))*(((510560)*(pow(M,2)))+(((-1165264)*((M)*(r)))+((1616205)*(pow(r,2))))))))+(((3432)*((pow(a,6))*((pow(r,19))*(((-48)*(pow(M,3)))+(((352)*((pow(M,2))*(r)))+(((-1499)*((M)*(pow(r,2))))+((5550)*(pow(r,3)))))))))+(((8)*((pow(a,22))*((pow(r,3))*(((-1069168)*(pow(M,3)))+(((2863648)*((pow(M,2))*(r)))+(((-3952639)*((M)*(pow(r,2))))+((4828010)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((2048)*(pow(M,4)))+(((-13312)*((pow(M,3))*(r)))+(((48864)*((pow(M,2))*(pow(r,2))))+(((-139024)*((M)*(pow(r,3))))+((388175)*(pow(r,4))))))))))+(((pow(a,20))*((pow(r,4))*(((13338624)*(pow(M,4)))+(((-41749504)*((pow(M,3))*(r)))+(((65364192)*((pow(M,2))*(pow(r,2))))+(((-75979248)*((M)*(pow(r,3))))+((92766175)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,13))*(((-10240)*(pow(M,5)))+(((59392)*((pow(M,4))*(r)))+(((-193152)*((pow(M,3))*(pow(r,2))))+(((473216)*((pow(M,2))*(pow(r,3))))+(((-1012109)*((M)*(pow(r,4))))+((2274405)*(pow(r,5)))))))))))+(((4)*((pow(a,18))*((pow(r,5))*(((-3278848)*(pow(M,5)))+(((11810816)*((pow(M,4))*(r)))+(((-21385344)*((pow(M,3))*(pow(r,2))))+(((27664768)*((pow(M,2))*(pow(r,3))))+(((-31736873)*((M)*(pow(r,4))))+((41309919)*(pow(r,5)))))))))))+(((pow(a,12))*((pow(r,10))*(((983040)*(pow(M,6)))+(((-5079040)*((pow(M,5))*(r)))+(((14735360)*((pow(M,4))*(pow(r,2))))+(((-31970304)*((pow(M,3))*(pow(r,3))))+(((58817984)*((pow(M,2))*(pow(r,4))))+(((-100892512)*((M)*(pow(r,5))))+((190197105)*(pow(r,6)))))))))))+(((pow(a,16))*((pow(r,6))*(((7405568)*(pow(M,6)))+(((-30244864)*((pow(M,5))*(r)))+(((63907840)*((pow(M,4))*(pow(r,2))))+(((-96982016)*((pow(M,3))*(pow(r,3))))+(((125207104)*((pow(M,2))*(pow(r,4))))+(((-155942752)*((M)*(pow(r,5))))+((224285327)*(pow(r,6)))))))))))+((16)*((pow(a,14))*((pow(r,7))*(((-114688)*(pow(M,7)))+(((524288)*((pow(M,6))*(r)))+(((-1354752)*((pow(M,5))*(pow(r,2))))+(((2621440)*((pow(M,4))*(pow(r,3))))+(((-4268880)*((pow(M,3))*(pow(r,4))))+(((6291456)*((pow(M,2))*(pow(r,5))))+(((-9018009)*((M)*(pow(r,6))))+((14680064)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*(expr[1]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),16))*((expr[2])*(expr[3])))))))))))).cast<double>());
}

void compute_coeffs_586(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[586] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00003051757812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.2182178902359923812660974854156194518564026941318081858384401011384223059784652803144934075949259539"))*((pow(a,-19))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((-3)*((pow(a,2))*((r)*((M)+(r)))))+((pow(r,2))*(((2)*(pow(M,2)))+(((71)*((M)*(r)))+((-36)*(pow(r,2))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((7491771)*(pow(a,32)))+(((14549535)*(pow(r,32)))+(((8168160)*((pow(a,2))*((pow(r,29))*((M)+((28)*(r))))))+(((168)*((pow(a,30))*((r)*(((157510)*(M))+((792257)*(r))))))+(((204204)*((pow(a,4))*((pow(r,26))*(((-28)*(pow(M,2)))+(((588)*((M)*(r)))+((8243)*(pow(r,2))))))))+(((420)*((pow(a,28))*((pow(r,2))*(((-117620)*(pow(M,2)))+(((764436)*((M)*(r)))+((2583631)*(pow(r,2))))))))+(((58344)*((pow(a,6))*((pow(r,23))*(((96)*(pow(M,3)))+(((-1320)*((pow(M,2))*(r)))+(((14086)*((M)*(pow(r,2))))+((131945)*(pow(r,3)))))))))+(((240)*((pow(a,26))*((pow(r,3))*(((372432)*(pow(M,3)))+(((-1911372)*((pow(M,2))*(r)))+(((7636856)*((M)*(pow(r,2))))+((22595423)*(pow(r,3)))))))))+(((19448)*((pow(a,8))*((pow(r,20))*(((-320)*(pow(M,4)))+(((3520)*((pow(M,3))*(r)))+(((-24636)*((pow(M,2))*(pow(r,2))))+(((178564)*((M)*(pow(r,3))))+((1258861)*(pow(r,4))))))))))+(((160)*((pow(a,24))*((pow(r,4))*(((-792304)*(pow(M,4)))+(((4001872)*((pow(M,3))*(r)))+(((-12348429)*((pow(M,2))*(pow(r,2))))+(((40749307)*((M)*(pow(r,3))))+((116678261)*(pow(r,4))))))))))+(((3536)*((pow(a,10))*((pow(r,17))*(((2048)*(pow(M,5)))+(((-19200)*((pow(M,4))*(r)))+(((108080)*((pow(M,3))*(pow(r,2))))+(((-515380)*((pow(M,2))*(pow(r,3))))+(((2863500)*((M)*(pow(r,4))))+((16232405)*(pow(r,5)))))))))))+(((8)*((pow(a,22))*((pow(r,5))*(((16310272)*(pow(M,5)))+(((-85992960)*((pow(M,4))*(r)))+(((258329440)*((pow(M,3))*(pow(r,2))))+(((-654045160)*((pow(M,2))*(pow(r,3))))+(((2015958450)*((M)*(pow(r,4))))+((5883650987)*(pow(r,5)))))))))))+(((68)*((pow(a,12))*((pow(r,14))*(((-122880)*(pow(M,6)))+(((1007616)*((pow(M,5))*(r)))+(((-4887040)*((pow(M,4))*(pow(r,2))))+(((18910720)*((pow(M,3))*(pow(r,3))))+(((-69498540)*((pow(M,2))*(pow(r,4))))+(((317063660)*((M)*(pow(r,5))))+((1508658805)*(pow(r,6))))))))))))+(((4)*((pow(a,20))*((pow(r,6))*(((-22732800)*(pow(M,6)))+(((127524864)*((pow(M,5))*(r)))+(((-401768960)*((pow(M,4))*(pow(r,2))))+(((995253760)*((pow(M,3))*(pow(r,3))))+(((-2376235980)*((pow(M,2))*(pow(r,4))))+(((7326968540)*((M)*(pow(r,5))))+((22519960739)*(pow(r,6))))))))))))+(((136)*((pow(a,14))*((pow(r,11))*(((65536)*(pow(M,7)))+(((-475136)*((pow(M,6))*(r)))+(((2064384)*((pow(M,5))*(pow(r,2))))+(((-7027200)*((pow(M,4))*(pow(r,3))))+(((21282240)*((pow(M,3))*(pow(r,4))))+(((-64820112)*((pow(M,2))*(pow(r,5))))+(((254392642)*((M)*(pow(r,6))))+((1048118827)*(pow(r,7)))))))))))))+(((32)*((pow(a,18))*((pow(r,7))*(((1196032)*(pow(M,7)))+(((-7180288)*((pow(M,6))*(r)))+(((24818688)*((pow(M,5))*(pow(r,2))))+(((-66476160)*((pow(M,4))*(pow(r,3))))+(((159363120)*((pow(M,3))*(pow(r,4))))+(((-390116244)*((pow(M,2))*(pow(r,5))))+(((1259282311)*((M)*(pow(r,6))))+((4176789659)*(pow(r,7)))))))))))))+((2)*((pow(a,16))*((pow(r,8))*(((-3670016)*(pow(M,8)))+(((23592960)*((pow(M,7))*(r)))+(((-97550336)*((pow(M,6))*(pow(r,2))))+(((317030400)*((pow(M,5))*(pow(r,3))))+(((-883192320)*((pow(M,4))*(pow(r,4))))+(((2281047552)*((pow(M,3))*(pow(r,5))))+(((-6074455520)*((pow(M,2))*(pow(r,6))))+(((21267402912)*((M)*(pow(r,7))))+((77770708855)*(pow(r,8))))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((765765)*((pow((pow(a,2))+(pow(r,2)),16))*(((pow(a,4))+(((19)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((9)*(M))+((5)*(r))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_587(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[587] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00003051757812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.2182178902359923812660974854156194518564026941318081858384401011384223059784652803144934075949259539"))*((pow(a,-17))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((a)*((((7491771)*(pow(a,32)))+(((14549535)*(pow(r,32)))+(((8168160)*((pow(a,2))*((pow(r,29))*((M)+((28)*(r))))))+(((168)*((pow(a,30))*((r)*(((157510)*(M))+((792257)*(r))))))+(((204204)*((pow(a,4))*((pow(r,26))*(((-28)*(pow(M,2)))+(((588)*((M)*(r)))+((8243)*(pow(r,2))))))))+(((420)*((pow(a,28))*((pow(r,2))*(((-117620)*(pow(M,2)))+(((764436)*((M)*(r)))+((2583631)*(pow(r,2))))))))+(((58344)*((pow(a,6))*((pow(r,23))*(((96)*(pow(M,3)))+(((-1320)*((pow(M,2))*(r)))+(((14086)*((M)*(pow(r,2))))+((131945)*(pow(r,3)))))))))+(((240)*((pow(a,26))*((pow(r,3))*(((372432)*(pow(M,3)))+(((-1911372)*((pow(M,2))*(r)))+(((7636856)*((M)*(pow(r,2))))+((22595423)*(pow(r,3)))))))))+(((19448)*((pow(a,8))*((pow(r,20))*(((-320)*(pow(M,4)))+(((3520)*((pow(M,3))*(r)))+(((-24636)*((pow(M,2))*(pow(r,2))))+(((178564)*((M)*(pow(r,3))))+((1258861)*(pow(r,4))))))))))+(((160)*((pow(a,24))*((pow(r,4))*(((-792304)*(pow(M,4)))+(((4001872)*((pow(M,3))*(r)))+(((-12348429)*((pow(M,2))*(pow(r,2))))+(((40749307)*((M)*(pow(r,3))))+((116678261)*(pow(r,4))))))))))+(((3536)*((pow(a,10))*((pow(r,17))*(((2048)*(pow(M,5)))+(((-19200)*((pow(M,4))*(r)))+(((108080)*((pow(M,3))*(pow(r,2))))+(((-515380)*((pow(M,2))*(pow(r,3))))+(((2863500)*((M)*(pow(r,4))))+((16232405)*(pow(r,5)))))))))))+(((8)*((pow(a,22))*((pow(r,5))*(((16310272)*(pow(M,5)))+(((-85992960)*((pow(M,4))*(r)))+(((258329440)*((pow(M,3))*(pow(r,2))))+(((-654045160)*((pow(M,2))*(pow(r,3))))+(((2015958450)*((M)*(pow(r,4))))+((5883650987)*(pow(r,5)))))))))))+(((68)*((pow(a,12))*((pow(r,14))*(((-122880)*(pow(M,6)))+(((1007616)*((pow(M,5))*(r)))+(((-4887040)*((pow(M,4))*(pow(r,2))))+(((18910720)*((pow(M,3))*(pow(r,3))))+(((-69498540)*((pow(M,2))*(pow(r,4))))+(((317063660)*((M)*(pow(r,5))))+((1508658805)*(pow(r,6))))))))))))+(((4)*((pow(a,20))*((pow(r,6))*(((-22732800)*(pow(M,6)))+(((127524864)*((pow(M,5))*(r)))+(((-401768960)*((pow(M,4))*(pow(r,2))))+(((995253760)*((pow(M,3))*(pow(r,3))))+(((-2376235980)*((pow(M,2))*(pow(r,4))))+(((7326968540)*((M)*(pow(r,5))))+((22519960739)*(pow(r,6))))))))))))+(((136)*((pow(a,14))*((pow(r,11))*(((65536)*(pow(M,7)))+(((-475136)*((pow(M,6))*(r)))+(((2064384)*((pow(M,5))*(pow(r,2))))+(((-7027200)*((pow(M,4))*(pow(r,3))))+(((21282240)*((pow(M,3))*(pow(r,4))))+(((-64820112)*((pow(M,2))*(pow(r,5))))+(((254392642)*((M)*(pow(r,6))))+((1048118827)*(pow(r,7)))))))))))))+(((32)*((pow(a,18))*((pow(r,7))*(((1196032)*(pow(M,7)))+(((-7180288)*((pow(M,6))*(r)))+(((24818688)*((pow(M,5))*(pow(r,2))))+(((-66476160)*((pow(M,4))*(pow(r,3))))+(((159363120)*((pow(M,3))*(pow(r,4))))+(((-390116244)*((pow(M,2))*(pow(r,5))))+(((1259282311)*((M)*(pow(r,6))))+((4176789659)*(pow(r,7)))))))))))))+((2)*((pow(a,16))*((pow(r,8))*(((-3670016)*(pow(M,8)))+(((23592960)*((pow(M,7))*(r)))+(((-97550336)*((pow(M,6))*(pow(r,2))))+(((317030400)*((pow(M,5))*(pow(r,3))))+(((-883192320)*((pow(M,4))*(pow(r,4))))+(((2281047552)*((pow(M,3))*(pow(r,5))))+(((-6074455520)*((pow(M,2))*(pow(r,6))))+(((21267402912)*((M)*(pow(r,7))))+((77770708855)*(pow(r,8))))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2])))))+((-765765)*((pow((pow(a,2))+(pow(r,2)),16))*(((pow(a,4))+(((19)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((9)*(M))+((5)*(r))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_588(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[588] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00001525878906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.2182178902359923812660974854156194518564026941318081858384401011384223059784652803144934075949259539"))*((pow(a,-19))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((7491771)*(pow(a,32)))+(((14549535)*(pow(r,32)))+(((8168160)*((pow(a,2))*((pow(r,29))*((M)+((28)*(r))))))+(((168)*((pow(a,30))*((r)*(((157510)*(M))+((792257)*(r))))))+(((204204)*((pow(a,4))*((pow(r,26))*(((-28)*(pow(M,2)))+(((588)*((M)*(r)))+((8243)*(pow(r,2))))))))+(((420)*((pow(a,28))*((pow(r,2))*(((-117620)*(pow(M,2)))+(((764436)*((M)*(r)))+((2583631)*(pow(r,2))))))))+(((58344)*((pow(a,6))*((pow(r,23))*(((96)*(pow(M,3)))+(((-1320)*((pow(M,2))*(r)))+(((14086)*((M)*(pow(r,2))))+((131945)*(pow(r,3)))))))))+(((240)*((pow(a,26))*((pow(r,3))*(((372432)*(pow(M,3)))+(((-1911372)*((pow(M,2))*(r)))+(((7636856)*((M)*(pow(r,2))))+((22595423)*(pow(r,3)))))))))+(((19448)*((pow(a,8))*((pow(r,20))*(((-320)*(pow(M,4)))+(((3520)*((pow(M,3))*(r)))+(((-24636)*((pow(M,2))*(pow(r,2))))+(((178564)*((M)*(pow(r,3))))+((1258861)*(pow(r,4))))))))))+(((160)*((pow(a,24))*((pow(r,4))*(((-792304)*(pow(M,4)))+(((4001872)*((pow(M,3))*(r)))+(((-12348429)*((pow(M,2))*(pow(r,2))))+(((40749307)*((M)*(pow(r,3))))+((116678261)*(pow(r,4))))))))))+(((3536)*((pow(a,10))*((pow(r,17))*(((2048)*(pow(M,5)))+(((-19200)*((pow(M,4))*(r)))+(((108080)*((pow(M,3))*(pow(r,2))))+(((-515380)*((pow(M,2))*(pow(r,3))))+(((2863500)*((M)*(pow(r,4))))+((16232405)*(pow(r,5)))))))))))+(((8)*((pow(a,22))*((pow(r,5))*(((16310272)*(pow(M,5)))+(((-85992960)*((pow(M,4))*(r)))+(((258329440)*((pow(M,3))*(pow(r,2))))+(((-654045160)*((pow(M,2))*(pow(r,3))))+(((2015958450)*((M)*(pow(r,4))))+((5883650987)*(pow(r,5)))))))))))+(((68)*((pow(a,12))*((pow(r,14))*(((-122880)*(pow(M,6)))+(((1007616)*((pow(M,5))*(r)))+(((-4887040)*((pow(M,4))*(pow(r,2))))+(((18910720)*((pow(M,3))*(pow(r,3))))+(((-69498540)*((pow(M,2))*(pow(r,4))))+(((317063660)*((M)*(pow(r,5))))+((1508658805)*(pow(r,6))))))))))))+(((4)*((pow(a,20))*((pow(r,6))*(((-22732800)*(pow(M,6)))+(((127524864)*((pow(M,5))*(r)))+(((-401768960)*((pow(M,4))*(pow(r,2))))+(((995253760)*((pow(M,3))*(pow(r,3))))+(((-2376235980)*((pow(M,2))*(pow(r,4))))+(((7326968540)*((M)*(pow(r,5))))+((22519960739)*(pow(r,6))))))))))))+(((136)*((pow(a,14))*((pow(r,11))*(((65536)*(pow(M,7)))+(((-475136)*((pow(M,6))*(r)))+(((2064384)*((pow(M,5))*(pow(r,2))))+(((-7027200)*((pow(M,4))*(pow(r,3))))+(((21282240)*((pow(M,3))*(pow(r,4))))+(((-64820112)*((pow(M,2))*(pow(r,5))))+(((254392642)*((M)*(pow(r,6))))+((1048118827)*(pow(r,7)))))))))))))+(((32)*((pow(a,18))*((pow(r,7))*(((1196032)*(pow(M,7)))+(((-7180288)*((pow(M,6))*(r)))+(((24818688)*((pow(M,5))*(pow(r,2))))+(((-66476160)*((pow(M,4))*(pow(r,3))))+(((159363120)*((pow(M,3))*(pow(r,4))))+(((-390116244)*((pow(M,2))*(pow(r,5))))+(((1259282311)*((M)*(pow(r,6))))+((4176789659)*(pow(r,7)))))))))))))+((2)*((pow(a,16))*((pow(r,8))*(((-3670016)*(pow(M,8)))+(((23592960)*((pow(M,7))*(r)))+(((-97550336)*((pow(M,6))*(pow(r,2))))+(((317030400)*((pow(M,5))*(pow(r,3))))+(((-883192320)*((pow(M,4))*(pow(r,4))))+(((2281047552)*((pow(M,3))*(pow(r,5))))+(((-6074455520)*((pow(M,2))*(pow(r,6))))+(((21267402912)*((M)*(pow(r,7))))+((77770708855)*(pow(r,8))))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((765765)*((pow((pow(a,2))+(pow(r,2)),16))*(((pow(a,4))+(((19)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((9)*(M))+((5)*(r))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_589(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[589] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.0004882812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.2182178902359923812660974854156194518564026941318081858384401011384223059784652803144934075949259539"))*((pow(a,-18))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*(((-1)*((a)*((r)*((((7491771)*(pow(a,32)))+(((14549535)*(pow(r,32)))+(((8168160)*((pow(a,2))*((pow(r,29))*((M)+((28)*(r))))))+(((168)*((pow(a,30))*((r)*(((157510)*(M))+((792257)*(r))))))+(((204204)*((pow(a,4))*((pow(r,26))*(((-28)*(pow(M,2)))+(((588)*((M)*(r)))+((8243)*(pow(r,2))))))))+(((420)*((pow(a,28))*((pow(r,2))*(((-117620)*(pow(M,2)))+(((764436)*((M)*(r)))+((2583631)*(pow(r,2))))))))+(((58344)*((pow(a,6))*((pow(r,23))*(((96)*(pow(M,3)))+(((-1320)*((pow(M,2))*(r)))+(((14086)*((M)*(pow(r,2))))+((131945)*(pow(r,3)))))))))+(((240)*((pow(a,26))*((pow(r,3))*(((372432)*(pow(M,3)))+(((-1911372)*((pow(M,2))*(r)))+(((7636856)*((M)*(pow(r,2))))+((22595423)*(pow(r,3)))))))))+(((19448)*((pow(a,8))*((pow(r,20))*(((-320)*(pow(M,4)))+(((3520)*((pow(M,3))*(r)))+(((-24636)*((pow(M,2))*(pow(r,2))))+(((178564)*((M)*(pow(r,3))))+((1258861)*(pow(r,4))))))))))+(((160)*((pow(a,24))*((pow(r,4))*(((-792304)*(pow(M,4)))+(((4001872)*((pow(M,3))*(r)))+(((-12348429)*((pow(M,2))*(pow(r,2))))+(((40749307)*((M)*(pow(r,3))))+((116678261)*(pow(r,4))))))))))+(((3536)*((pow(a,10))*((pow(r,17))*(((2048)*(pow(M,5)))+(((-19200)*((pow(M,4))*(r)))+(((108080)*((pow(M,3))*(pow(r,2))))+(((-515380)*((pow(M,2))*(pow(r,3))))+(((2863500)*((M)*(pow(r,4))))+((16232405)*(pow(r,5)))))))))))+(((8)*((pow(a,22))*((pow(r,5))*(((16310272)*(pow(M,5)))+(((-85992960)*((pow(M,4))*(r)))+(((258329440)*((pow(M,3))*(pow(r,2))))+(((-654045160)*((pow(M,2))*(pow(r,3))))+(((2015958450)*((M)*(pow(r,4))))+((5883650987)*(pow(r,5)))))))))))+(((68)*((pow(a,12))*((pow(r,14))*(((-122880)*(pow(M,6)))+(((1007616)*((pow(M,5))*(r)))+(((-4887040)*((pow(M,4))*(pow(r,2))))+(((18910720)*((pow(M,3))*(pow(r,3))))+(((-69498540)*((pow(M,2))*(pow(r,4))))+(((317063660)*((M)*(pow(r,5))))+((1508658805)*(pow(r,6))))))))))))+(((4)*((pow(a,20))*((pow(r,6))*(((-22732800)*(pow(M,6)))+(((127524864)*((pow(M,5))*(r)))+(((-401768960)*((pow(M,4))*(pow(r,2))))+(((995253760)*((pow(M,3))*(pow(r,3))))+(((-2376235980)*((pow(M,2))*(pow(r,4))))+(((7326968540)*((M)*(pow(r,5))))+((22519960739)*(pow(r,6))))))))))))+(((136)*((pow(a,14))*((pow(r,11))*(((65536)*(pow(M,7)))+(((-475136)*((pow(M,6))*(r)))+(((2064384)*((pow(M,5))*(pow(r,2))))+(((-7027200)*((pow(M,4))*(pow(r,3))))+(((21282240)*((pow(M,3))*(pow(r,4))))+(((-64820112)*((pow(M,2))*(pow(r,5))))+(((254392642)*((M)*(pow(r,6))))+((1048118827)*(pow(r,7)))))))))))))+(((32)*((pow(a,18))*((pow(r,7))*(((1196032)*(pow(M,7)))+(((-7180288)*((pow(M,6))*(r)))+(((24818688)*((pow(M,5))*(pow(r,2))))+(((-66476160)*((pow(M,4))*(pow(r,3))))+(((159363120)*((pow(M,3))*(pow(r,4))))+(((-390116244)*((pow(M,2))*(pow(r,5))))+(((1259282311)*((M)*(pow(r,6))))+((4176789659)*(pow(r,7)))))))))))))+((2)*((pow(a,16))*((pow(r,8))*(((-3670016)*(pow(M,8)))+(((23592960)*((pow(M,7))*(r)))+(((-97550336)*((pow(M,6))*(pow(r,2))))+(((317030400)*((pow(M,5))*(pow(r,3))))+(((-883192320)*((pow(M,4))*(pow(r,4))))+(((2281047552)*((pow(M,3))*(pow(r,5))))+(((-6074455520)*((pow(M,2))*(pow(r,6))))+(((21267402912)*((M)*(pow(r,7))))+((77770708855)*(pow(r,8))))))))))))))))))))))))))))))*((expr[0])*(expr[1]))))))+((765765)*((pow((pow(a,2))+(pow(r,2)),16))*(((pow(a,4))+(((19)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((9)*(M))+((5)*(r))))))))*((expr[2])*(expr[3])))))))))))))).cast<double>());
}
