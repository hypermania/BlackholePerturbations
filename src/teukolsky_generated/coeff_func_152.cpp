
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_760(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[760] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00001017252604166666666666666666666666666666666666666666666666666666666666666666666666666666666666666667"))*((pow(a,-19))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((a)*((((4128768)*(pow(a,36)))+(((14549535)*(pow(r,36)))+(((4849845)*((pow(a,2))*((pow(r,33))*(((2)*(M))+((53)*(r))))))+(((63)*((pow(a,34))*((r)*(((848830)*(M))+((1604063)*(r))))))+(((7759752)*((pow(a,4))*((pow(r,30))*(((-1)*(pow(M,2)))+(((21)*((M)*(r)))+((276)*(pow(r,2))))))))+(((21)*((pow(a,32))*((pow(r,2))*(((-8401160)*(pow(M,2)))+(((32342680)*((M)*(r)))+((49625899)*(pow(r,2))))))))+(((1108536)*((pow(a,6))*((pow(r,27))*(((8)*(pow(M,3)))+(((-110)*((pow(M,2))*(r)))+(((1161)*((M)*(pow(r,2))))+((10086)*(pow(r,3)))))))))+(((168)*((pow(a,30))*((pow(r,3))*(((3038360)*(pow(M,3)))+(((-10144490)*((pow(M,2))*(r)))+(((24723945)*((M)*(pow(r,2))))+((37878396)*(pow(r,3)))))))))+(((184756)*((pow(a,8))*((pow(r,24))*(((-64)*(pow(M,4)))+(((704)*((pow(M,3))*(r)))+(((-4854)*((pow(M,2))*(pow(r,2))))+(((34346)*((M)*(pow(r,3))))+((221771)*(pow(r,4))))))))))+(((120)*((pow(a,28))*((pow(r,4))*(((-9223008)*(pow(M,4)))+(((32598432)*((pow(M,3))*(r)))+(((-64675757)*((pow(M,2))*(pow(r,2))))+(((135237093)*((M)*(pow(r,3))))+((220092906)*(pow(r,4))))))))))+(((16796)*((pow(a,10))*((pow(r,21))*(((1024)*(pow(M,5)))+(((-9600)*((pow(M,4))*(r)))+(((52896)*((pow(M,3))*(pow(r,2))))+(((-243896)*((pow(M,2))*(pow(r,3))))+(((1302192)*((M)*(pow(r,4))))+((6662547)*(pow(r,5)))))))))))+(((4)*((pow(a,26))*((pow(r,5))*(((432950272)*(pow(M,5)))+(((-1684526720)*((pow(M,4))*(r)))+(((3417524320)*((pow(M,3))*(pow(r,2))))+(((-5563352200)*((pow(M,2))*(pow(r,3))))+(((11309710340)*((M)*(pow(r,4))))+((20024486417)*(pow(r,5)))))))))))+(((2584)*((pow(a,12))*((pow(r,18))*(((-10240)*(pow(M,6)))+(((83968)*((pow(M,5))*(r)))+(((-394080)*((pow(M,4))*(pow(r,2))))+(((1450400)*((pow(M,3))*(pow(r,3))))+(((-5032475)*((pow(M,2))*(pow(r,4))))+(((21637755)*((M)*(pow(r,5))))+((91322370)*(pow(r,6))))))))))))+(((4)*((pow(a,24))*((pow(r,6))*(((-473968640)*(pow(M,6)))+(((2041696256)*((pow(M,5))*(r)))+(((-4487062080)*((pow(M,4))*(pow(r,2))))+(((7277355200)*((pow(M,3))*(pow(r,3))))+(((-11288638730)*((pow(M,2))*(pow(r,4))))+(((23772906630)*((M)*(pow(r,5))))+((46309938651)*(pow(r,6))))))))))))+(((2584)*((pow(a,14))*((pow(r,15))*(((16384)*(pow(M,7)))+(((-118784)*((pow(M,6))*(r)))+(((487424)*((pow(M,5))*(pow(r,2))))+(((-1527040)*((pow(M,4))*(pow(r,3))))+(((4223960)*((pow(M,3))*(pow(r,4))))+(((-11767258)*((pow(M,2))*(pow(r,5))))+(((42469173)*((M)*(pow(r,6))))+((151973568)*(pow(r,7)))))))))))))+(((8)*((pow(a,22))*((pow(r,7))*(((172277760)*(pow(M,7)))+(((-818933760)*((pow(M,6))*(r)))+(((1989091328)*((pow(M,5))*(pow(r,2))))+(((-3474466560)*((pow(M,4))*(pow(r,3))))+(((5328025800)*((pow(M,3))*(pow(r,4))))+(((-8598627710)*((pow(M,2))*(pow(r,5))))+(((19418006565)*((M)*(pow(r,6))))+((41930265978)*(pow(r,7)))))))))))))+(((38)*((pow(a,16))*((pow(r,12))*(((-1835008)*(pow(M,8)))+(((11796480)*((pow(M,7))*(r)))+(((-42786816)*((pow(M,6))*(pow(r,2))))+(((117153792)*((pow(M,5))*(pow(r,3))))+(((-275654400)*((pow(M,4))*(pow(r,4))))+(((611364096)*((pow(M,3))*(pow(r,5))))+(((-1424908660)*((pow(M,2))*(pow(r,6))))+(((4443445692)*((M)*(pow(r,7))))+((13751319267)*(pow(r,8))))))))))))))+(((8)*((pow(a,20))*((pow(r,8))*(((-74776576)*(pow(M,8)))+(((390004736)*((pow(M,7))*(r)))+(((-1063340032)*((pow(M,6))*(pow(r,2))))+(((2095908864)*((pow(M,5))*(pow(r,3))))+(((-3527191360)*((pow(M,4))*(pow(r,4))))+(((5724178112)*((pow(M,3))*(pow(r,5))))+(((-10134890587)*((pow(M,2))*(pow(r,6))))+(((25063792479)*((M)*(pow(r,7))))+((60434228160)*(pow(r,8))))))))))))))+((2)*((pow(a,18))*((pow(r,9))*(((58720256)*(pow(M,9)))+(((-333971456)*((pow(M,8))*(r)))+(((1073872896)*((pow(M,7))*(pow(r,2))))+(((-2598273024)*((pow(M,6))*(pow(r,3))))+(((5340819456)*((pow(M,5))*(pow(r,4))))+(((-10068291072)*((pow(M,4))*(pow(r,5))))+(((18653812352)*((pow(M,3))*(pow(r,6))))+(((-37427244512)*((pow(M,2))*(pow(r,7))))+(((103041215298)*((M)*(pow(r,8))))+((279890813223)*(pow(r,9)))))))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2])))))+((-14549535)*((r)*((pow((pow(a,2))+(pow(r,2)),18))*(((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_761(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[761] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.000005086263020833333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((pow(a,-21))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-11))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((4128768)*(pow(a,36)))+(((14549535)*(pow(r,36)))+(((4849845)*((pow(a,2))*((pow(r,33))*(((2)*(M))+((53)*(r))))))+(((63)*((pow(a,34))*((r)*(((848830)*(M))+((1604063)*(r))))))+(((7759752)*((pow(a,4))*((pow(r,30))*(((-1)*(pow(M,2)))+(((21)*((M)*(r)))+((276)*(pow(r,2))))))))+(((21)*((pow(a,32))*((pow(r,2))*(((-8401160)*(pow(M,2)))+(((32342680)*((M)*(r)))+((49625899)*(pow(r,2))))))))+(((1108536)*((pow(a,6))*((pow(r,27))*(((8)*(pow(M,3)))+(((-110)*((pow(M,2))*(r)))+(((1161)*((M)*(pow(r,2))))+((10086)*(pow(r,3)))))))))+(((168)*((pow(a,30))*((pow(r,3))*(((3038360)*(pow(M,3)))+(((-10144490)*((pow(M,2))*(r)))+(((24723945)*((M)*(pow(r,2))))+((37878396)*(pow(r,3)))))))))+(((184756)*((pow(a,8))*((pow(r,24))*(((-64)*(pow(M,4)))+(((704)*((pow(M,3))*(r)))+(((-4854)*((pow(M,2))*(pow(r,2))))+(((34346)*((M)*(pow(r,3))))+((221771)*(pow(r,4))))))))))+(((120)*((pow(a,28))*((pow(r,4))*(((-9223008)*(pow(M,4)))+(((32598432)*((pow(M,3))*(r)))+(((-64675757)*((pow(M,2))*(pow(r,2))))+(((135237093)*((M)*(pow(r,3))))+((220092906)*(pow(r,4))))))))))+(((16796)*((pow(a,10))*((pow(r,21))*(((1024)*(pow(M,5)))+(((-9600)*((pow(M,4))*(r)))+(((52896)*((pow(M,3))*(pow(r,2))))+(((-243896)*((pow(M,2))*(pow(r,3))))+(((1302192)*((M)*(pow(r,4))))+((6662547)*(pow(r,5)))))))))))+(((4)*((pow(a,26))*((pow(r,5))*(((432950272)*(pow(M,5)))+(((-1684526720)*((pow(M,4))*(r)))+(((3417524320)*((pow(M,3))*(pow(r,2))))+(((-5563352200)*((pow(M,2))*(pow(r,3))))+(((11309710340)*((M)*(pow(r,4))))+((20024486417)*(pow(r,5)))))))))))+(((2584)*((pow(a,12))*((pow(r,18))*(((-10240)*(pow(M,6)))+(((83968)*((pow(M,5))*(r)))+(((-394080)*((pow(M,4))*(pow(r,2))))+(((1450400)*((pow(M,3))*(pow(r,3))))+(((-5032475)*((pow(M,2))*(pow(r,4))))+(((21637755)*((M)*(pow(r,5))))+((91322370)*(pow(r,6))))))))))))+(((4)*((pow(a,24))*((pow(r,6))*(((-473968640)*(pow(M,6)))+(((2041696256)*((pow(M,5))*(r)))+(((-4487062080)*((pow(M,4))*(pow(r,2))))+(((7277355200)*((pow(M,3))*(pow(r,3))))+(((-11288638730)*((pow(M,2))*(pow(r,4))))+(((23772906630)*((M)*(pow(r,5))))+((46309938651)*(pow(r,6))))))))))))+(((2584)*((pow(a,14))*((pow(r,15))*(((16384)*(pow(M,7)))+(((-118784)*((pow(M,6))*(r)))+(((487424)*((pow(M,5))*(pow(r,2))))+(((-1527040)*((pow(M,4))*(pow(r,3))))+(((4223960)*((pow(M,3))*(pow(r,4))))+(((-11767258)*((pow(M,2))*(pow(r,5))))+(((42469173)*((M)*(pow(r,6))))+((151973568)*(pow(r,7)))))))))))))+(((8)*((pow(a,22))*((pow(r,7))*(((172277760)*(pow(M,7)))+(((-818933760)*((pow(M,6))*(r)))+(((1989091328)*((pow(M,5))*(pow(r,2))))+(((-3474466560)*((pow(M,4))*(pow(r,3))))+(((5328025800)*((pow(M,3))*(pow(r,4))))+(((-8598627710)*((pow(M,2))*(pow(r,5))))+(((19418006565)*((M)*(pow(r,6))))+((41930265978)*(pow(r,7)))))))))))))+(((38)*((pow(a,16))*((pow(r,12))*(((-1835008)*(pow(M,8)))+(((11796480)*((pow(M,7))*(r)))+(((-42786816)*((pow(M,6))*(pow(r,2))))+(((117153792)*((pow(M,5))*(pow(r,3))))+(((-275654400)*((pow(M,4))*(pow(r,4))))+(((611364096)*((pow(M,3))*(pow(r,5))))+(((-1424908660)*((pow(M,2))*(pow(r,6))))+(((4443445692)*((M)*(pow(r,7))))+((13751319267)*(pow(r,8))))))))))))))+(((8)*((pow(a,20))*((pow(r,8))*(((-74776576)*(pow(M,8)))+(((390004736)*((pow(M,7))*(r)))+(((-1063340032)*((pow(M,6))*(pow(r,2))))+(((2095908864)*((pow(M,5))*(pow(r,3))))+(((-3527191360)*((pow(M,4))*(pow(r,4))))+(((5724178112)*((pow(M,3))*(pow(r,5))))+(((-10134890587)*((pow(M,2))*(pow(r,6))))+(((25063792479)*((M)*(pow(r,7))))+((60434228160)*(pow(r,8))))))))))))))+((2)*((pow(a,18))*((pow(r,9))*(((58720256)*(pow(M,9)))+(((-333971456)*((pow(M,8))*(r)))+(((1073872896)*((pow(M,7))*(pow(r,2))))+(((-2598273024)*((pow(M,6))*(pow(r,3))))+(((5340819456)*((pow(M,5))*(pow(r,4))))+(((-10068291072)*((pow(M,4))*(pow(r,5))))+(((18653812352)*((pow(M,3))*(pow(r,6))))+(((-37427244512)*((pow(M,2))*(pow(r,7))))+(((103041215298)*((M)*(pow(r,8))))+((279890813223)*(pow(r,9)))))))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((14549535)*((r)*((pow((pow(a,2))+(pow(r,2)),18))*(((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_762(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[762] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.0001831054687500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-20))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-11))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((4128768)*(pow(a,36)))+(((14549535)*(pow(r,36)))+(((4849845)*((pow(a,2))*((pow(r,33))*(((2)*(M))+((53)*(r))))))+(((63)*((pow(a,34))*((r)*(((848830)*(M))+((1604063)*(r))))))+(((7759752)*((pow(a,4))*((pow(r,30))*(((-1)*(pow(M,2)))+(((21)*((M)*(r)))+((276)*(pow(r,2))))))))+(((21)*((pow(a,32))*((pow(r,2))*(((-8401160)*(pow(M,2)))+(((32342680)*((M)*(r)))+((49625899)*(pow(r,2))))))))+(((1108536)*((pow(a,6))*((pow(r,27))*(((8)*(pow(M,3)))+(((-110)*((pow(M,2))*(r)))+(((1161)*((M)*(pow(r,2))))+((10086)*(pow(r,3)))))))))+(((168)*((pow(a,30))*((pow(r,3))*(((3038360)*(pow(M,3)))+(((-10144490)*((pow(M,2))*(r)))+(((24723945)*((M)*(pow(r,2))))+((37878396)*(pow(r,3)))))))))+(((184756)*((pow(a,8))*((pow(r,24))*(((-64)*(pow(M,4)))+(((704)*((pow(M,3))*(r)))+(((-4854)*((pow(M,2))*(pow(r,2))))+(((34346)*((M)*(pow(r,3))))+((221771)*(pow(r,4))))))))))+(((120)*((pow(a,28))*((pow(r,4))*(((-9223008)*(pow(M,4)))+(((32598432)*((pow(M,3))*(r)))+(((-64675757)*((pow(M,2))*(pow(r,2))))+(((135237093)*((M)*(pow(r,3))))+((220092906)*(pow(r,4))))))))))+(((16796)*((pow(a,10))*((pow(r,21))*(((1024)*(pow(M,5)))+(((-9600)*((pow(M,4))*(r)))+(((52896)*((pow(M,3))*(pow(r,2))))+(((-243896)*((pow(M,2))*(pow(r,3))))+(((1302192)*((M)*(pow(r,4))))+((6662547)*(pow(r,5)))))))))))+(((4)*((pow(a,26))*((pow(r,5))*(((432950272)*(pow(M,5)))+(((-1684526720)*((pow(M,4))*(r)))+(((3417524320)*((pow(M,3))*(pow(r,2))))+(((-5563352200)*((pow(M,2))*(pow(r,3))))+(((11309710340)*((M)*(pow(r,4))))+((20024486417)*(pow(r,5)))))))))))+(((2584)*((pow(a,12))*((pow(r,18))*(((-10240)*(pow(M,6)))+(((83968)*((pow(M,5))*(r)))+(((-394080)*((pow(M,4))*(pow(r,2))))+(((1450400)*((pow(M,3))*(pow(r,3))))+(((-5032475)*((pow(M,2))*(pow(r,4))))+(((21637755)*((M)*(pow(r,5))))+((91322370)*(pow(r,6))))))))))))+(((4)*((pow(a,24))*((pow(r,6))*(((-473968640)*(pow(M,6)))+(((2041696256)*((pow(M,5))*(r)))+(((-4487062080)*((pow(M,4))*(pow(r,2))))+(((7277355200)*((pow(M,3))*(pow(r,3))))+(((-11288638730)*((pow(M,2))*(pow(r,4))))+(((23772906630)*((M)*(pow(r,5))))+((46309938651)*(pow(r,6))))))))))))+(((2584)*((pow(a,14))*((pow(r,15))*(((16384)*(pow(M,7)))+(((-118784)*((pow(M,6))*(r)))+(((487424)*((pow(M,5))*(pow(r,2))))+(((-1527040)*((pow(M,4))*(pow(r,3))))+(((4223960)*((pow(M,3))*(pow(r,4))))+(((-11767258)*((pow(M,2))*(pow(r,5))))+(((42469173)*((M)*(pow(r,6))))+((151973568)*(pow(r,7)))))))))))))+(((8)*((pow(a,22))*((pow(r,7))*(((172277760)*(pow(M,7)))+(((-818933760)*((pow(M,6))*(r)))+(((1989091328)*((pow(M,5))*(pow(r,2))))+(((-3474466560)*((pow(M,4))*(pow(r,3))))+(((5328025800)*((pow(M,3))*(pow(r,4))))+(((-8598627710)*((pow(M,2))*(pow(r,5))))+(((19418006565)*((M)*(pow(r,6))))+((41930265978)*(pow(r,7)))))))))))))+(((38)*((pow(a,16))*((pow(r,12))*(((-1835008)*(pow(M,8)))+(((11796480)*((pow(M,7))*(r)))+(((-42786816)*((pow(M,6))*(pow(r,2))))+(((117153792)*((pow(M,5))*(pow(r,3))))+(((-275654400)*((pow(M,4))*(pow(r,4))))+(((611364096)*((pow(M,3))*(pow(r,5))))+(((-1424908660)*((pow(M,2))*(pow(r,6))))+(((4443445692)*((M)*(pow(r,7))))+((13751319267)*(pow(r,8))))))))))))))+(((8)*((pow(a,20))*((pow(r,8))*(((-74776576)*(pow(M,8)))+(((390004736)*((pow(M,7))*(r)))+(((-1063340032)*((pow(M,6))*(pow(r,2))))+(((2095908864)*((pow(M,5))*(pow(r,3))))+(((-3527191360)*((pow(M,4))*(pow(r,4))))+(((5724178112)*((pow(M,3))*(pow(r,5))))+(((-10134890587)*((pow(M,2))*(pow(r,6))))+(((25063792479)*((M)*(pow(r,7))))+((60434228160)*(pow(r,8))))))))))))))+((2)*((pow(a,18))*((pow(r,9))*(((58720256)*(pow(M,9)))+(((-333971456)*((pow(M,8))*(r)))+(((1073872896)*((pow(M,7))*(pow(r,2))))+(((-2598273024)*((pow(M,6))*(pow(r,3))))+(((5340819456)*((pow(M,5))*(pow(r,4))))+(((-10068291072)*((pow(M,4))*(pow(r,5))))+(((18653812352)*((pow(M,3))*(pow(r,6))))+(((-37427244512)*((pow(M,2))*(pow(r,7))))+(((103041215298)*((M)*(pow(r,8))))+((279890813223)*(pow(r,9)))))))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((14549535)*((r)*((pow((pow(a,2))+(pow(r,2)),18))*(((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_763(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[763] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00003051757812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.2182178902359923812660974854156194518564026941318081858384401011384223059784652803144934075949259539"))*((pow(a,-19))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((-1)*((pow(a,2))*((r)*(((3)*(M))+((22)*(r))))))+((pow(r,2))*(((2)*(pow(M,2)))+(((109)*((M)*(r)))+((-55)*(pow(r,2))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((7491771)*(pow(a,32)))+(((14549535)*(pow(r,32)))+(((8168160)*((pow(a,2))*((pow(r,29))*((M)+((28)*(r))))))+(((168)*((pow(a,30))*((r)*(((157510)*(M))+((792257)*(r))))))+(((204204)*((pow(a,4))*((pow(r,26))*(((-28)*(pow(M,2)))+(((588)*((M)*(r)))+((8243)*(pow(r,2))))))))+(((420)*((pow(a,28))*((pow(r,2))*(((-117620)*(pow(M,2)))+(((764436)*((M)*(r)))+((2583631)*(pow(r,2))))))))+(((58344)*((pow(a,6))*((pow(r,23))*(((96)*(pow(M,3)))+(((-1320)*((pow(M,2))*(r)))+(((14086)*((M)*(pow(r,2))))+((131945)*(pow(r,3)))))))))+(((240)*((pow(a,26))*((pow(r,3))*(((372432)*(pow(M,3)))+(((-1911372)*((pow(M,2))*(r)))+(((7636856)*((M)*(pow(r,2))))+((22595423)*(pow(r,3)))))))))+(((19448)*((pow(a,8))*((pow(r,20))*(((-320)*(pow(M,4)))+(((3520)*((pow(M,3))*(r)))+(((-24636)*((pow(M,2))*(pow(r,2))))+(((178564)*((M)*(pow(r,3))))+((1258861)*(pow(r,4))))))))))+(((160)*((pow(a,24))*((pow(r,4))*(((-792304)*(pow(M,4)))+(((4001872)*((pow(M,3))*(r)))+(((-12348429)*((pow(M,2))*(pow(r,2))))+(((40749307)*((M)*(pow(r,3))))+((116678261)*(pow(r,4))))))))))+(((3536)*((pow(a,10))*((pow(r,17))*(((2048)*(pow(M,5)))+(((-19200)*((pow(M,4))*(r)))+(((108080)*((pow(M,3))*(pow(r,2))))+(((-515380)*((pow(M,2))*(pow(r,3))))+(((2863500)*((M)*(pow(r,4))))+((16232405)*(pow(r,5)))))))))))+(((8)*((pow(a,22))*((pow(r,5))*(((16310272)*(pow(M,5)))+(((-85992960)*((pow(M,4))*(r)))+(((258329440)*((pow(M,3))*(pow(r,2))))+(((-654045160)*((pow(M,2))*(pow(r,3))))+(((2015958450)*((M)*(pow(r,4))))+((5883650987)*(pow(r,5)))))))))))+(((68)*((pow(a,12))*((pow(r,14))*(((-122880)*(pow(M,6)))+(((1007616)*((pow(M,5))*(r)))+(((-4887040)*((pow(M,4))*(pow(r,2))))+(((18910720)*((pow(M,3))*(pow(r,3))))+(((-69498540)*((pow(M,2))*(pow(r,4))))+(((317063660)*((M)*(pow(r,5))))+((1508658805)*(pow(r,6))))))))))))+(((4)*((pow(a,20))*((pow(r,6))*(((-22732800)*(pow(M,6)))+(((127524864)*((pow(M,5))*(r)))+(((-401768960)*((pow(M,4))*(pow(r,2))))+(((995253760)*((pow(M,3))*(pow(r,3))))+(((-2376235980)*((pow(M,2))*(pow(r,4))))+(((7326968540)*((M)*(pow(r,5))))+((22519960739)*(pow(r,6))))))))))))+(((136)*((pow(a,14))*((pow(r,11))*(((65536)*(pow(M,7)))+(((-475136)*((pow(M,6))*(r)))+(((2064384)*((pow(M,5))*(pow(r,2))))+(((-7027200)*((pow(M,4))*(pow(r,3))))+(((21282240)*((pow(M,3))*(pow(r,4))))+(((-64820112)*((pow(M,2))*(pow(r,5))))+(((254392642)*((M)*(pow(r,6))))+((1048118827)*(pow(r,7)))))))))))))+(((32)*((pow(a,18))*((pow(r,7))*(((1196032)*(pow(M,7)))+(((-7180288)*((pow(M,6))*(r)))+(((24818688)*((pow(M,5))*(pow(r,2))))+(((-66476160)*((pow(M,4))*(pow(r,3))))+(((159363120)*((pow(M,3))*(pow(r,4))))+(((-390116244)*((pow(M,2))*(pow(r,5))))+(((1259282311)*((M)*(pow(r,6))))+((4176789659)*(pow(r,7)))))))))))))+((2)*((pow(a,16))*((pow(r,8))*(((-3670016)*(pow(M,8)))+(((23592960)*((pow(M,7))*(r)))+(((-97550336)*((pow(M,6))*(pow(r,2))))+(((317030400)*((pow(M,5))*(pow(r,3))))+(((-883192320)*((pow(M,4))*(pow(r,4))))+(((2281047552)*((pow(M,3))*(pow(r,5))))+(((-6074455520)*((pow(M,2))*(pow(r,6))))+(((21267402912)*((M)*(pow(r,7))))+((77770708855)*(pow(r,8))))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((765765)*((pow((pow(a,2))+(pow(r,2)),16))*(((pow(a,4))+(((19)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((9)*(M))+((5)*(r))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_764(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[764] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.000005086263020833333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((pow(a,-21))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-11))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,8))+(((pow(a,6))*((((33)*(M))+((-2)*(r)))*(r)))+(((19)*((pow(r,6))*(((2)*(pow(M,2)))+(((109)*((M)*(r)))+((-55)*(pow(r,2)))))))+(((-1)*((pow(a,4))*((pow(r,2))*(((106)*(pow(M,2)))+(((743)*((M)*(r)))+((476)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((72)*(pow(M,3)))+(((3964)*((pow(M,2))*(r)))+(((143)*((M)*(pow(r,2))))+((-1518)*(pow(r,3))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((7491771)*(pow(a,32)))+(((14549535)*(pow(r,32)))+(((8168160)*((pow(a,2))*((pow(r,29))*((M)+((28)*(r))))))+(((168)*((pow(a,30))*((r)*(((157510)*(M))+((792257)*(r))))))+(((204204)*((pow(a,4))*((pow(r,26))*(((-28)*(pow(M,2)))+(((588)*((M)*(r)))+((8243)*(pow(r,2))))))))+(((420)*((pow(a,28))*((pow(r,2))*(((-117620)*(pow(M,2)))+(((764436)*((M)*(r)))+((2583631)*(pow(r,2))))))))+(((58344)*((pow(a,6))*((pow(r,23))*(((96)*(pow(M,3)))+(((-1320)*((pow(M,2))*(r)))+(((14086)*((M)*(pow(r,2))))+((131945)*(pow(r,3)))))))))+(((240)*((pow(a,26))*((pow(r,3))*(((372432)*(pow(M,3)))+(((-1911372)*((pow(M,2))*(r)))+(((7636856)*((M)*(pow(r,2))))+((22595423)*(pow(r,3)))))))))+(((19448)*((pow(a,8))*((pow(r,20))*(((-320)*(pow(M,4)))+(((3520)*((pow(M,3))*(r)))+(((-24636)*((pow(M,2))*(pow(r,2))))+(((178564)*((M)*(pow(r,3))))+((1258861)*(pow(r,4))))))))))+(((160)*((pow(a,24))*((pow(r,4))*(((-792304)*(pow(M,4)))+(((4001872)*((pow(M,3))*(r)))+(((-12348429)*((pow(M,2))*(pow(r,2))))+(((40749307)*((M)*(pow(r,3))))+((116678261)*(pow(r,4))))))))))+(((3536)*((pow(a,10))*((pow(r,17))*(((2048)*(pow(M,5)))+(((-19200)*((pow(M,4))*(r)))+(((108080)*((pow(M,3))*(pow(r,2))))+(((-515380)*((pow(M,2))*(pow(r,3))))+(((2863500)*((M)*(pow(r,4))))+((16232405)*(pow(r,5)))))))))))+(((8)*((pow(a,22))*((pow(r,5))*(((16310272)*(pow(M,5)))+(((-85992960)*((pow(M,4))*(r)))+(((258329440)*((pow(M,3))*(pow(r,2))))+(((-654045160)*((pow(M,2))*(pow(r,3))))+(((2015958450)*((M)*(pow(r,4))))+((5883650987)*(pow(r,5)))))))))))+(((68)*((pow(a,12))*((pow(r,14))*(((-122880)*(pow(M,6)))+(((1007616)*((pow(M,5))*(r)))+(((-4887040)*((pow(M,4))*(pow(r,2))))+(((18910720)*((pow(M,3))*(pow(r,3))))+(((-69498540)*((pow(M,2))*(pow(r,4))))+(((317063660)*((M)*(pow(r,5))))+((1508658805)*(pow(r,6))))))))))))+(((4)*((pow(a,20))*((pow(r,6))*(((-22732800)*(pow(M,6)))+(((127524864)*((pow(M,5))*(r)))+(((-401768960)*((pow(M,4))*(pow(r,2))))+(((995253760)*((pow(M,3))*(pow(r,3))))+(((-2376235980)*((pow(M,2))*(pow(r,4))))+(((7326968540)*((M)*(pow(r,5))))+((22519960739)*(pow(r,6))))))))))))+(((136)*((pow(a,14))*((pow(r,11))*(((65536)*(pow(M,7)))+(((-475136)*((pow(M,6))*(r)))+(((2064384)*((pow(M,5))*(pow(r,2))))+(((-7027200)*((pow(M,4))*(pow(r,3))))+(((21282240)*((pow(M,3))*(pow(r,4))))+(((-64820112)*((pow(M,2))*(pow(r,5))))+(((254392642)*((M)*(pow(r,6))))+((1048118827)*(pow(r,7)))))))))))))+(((32)*((pow(a,18))*((pow(r,7))*(((1196032)*(pow(M,7)))+(((-7180288)*((pow(M,6))*(r)))+(((24818688)*((pow(M,5))*(pow(r,2))))+(((-66476160)*((pow(M,4))*(pow(r,3))))+(((159363120)*((pow(M,3))*(pow(r,4))))+(((-390116244)*((pow(M,2))*(pow(r,5))))+(((1259282311)*((M)*(pow(r,6))))+((4176789659)*(pow(r,7)))))))))))))+((2)*((pow(a,16))*((pow(r,8))*(((-3670016)*(pow(M,8)))+(((23592960)*((pow(M,7))*(r)))+(((-97550336)*((pow(M,6))*(pow(r,2))))+(((317030400)*((pow(M,5))*(pow(r,3))))+(((-883192320)*((pow(M,4))*(pow(r,4))))+(((2281047552)*((pow(M,3))*(pow(r,5))))+(((-6074455520)*((pow(M,2))*(pow(r,6))))+(((21267402912)*((M)*(pow(r,7))))+((77770708855)*(pow(r,8))))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((765765)*((pow((pow(a,2))+(pow(r,2)),16))*(((pow(a,4))+(((19)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((9)*(M))+((5)*(r))))))))*(expr[3])))))))))))))).cast<double>());
}
