
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_255(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[255] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.1250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.7464200272921789327684895627734299784925191931283115959083948141392236061114902086988149554958611532"))*((pow(a,-10))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((((3)*(pow(a,4)))+(((7)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((5)*(r))))))))*((expr[2])*(((((-128)*(pow(a,15)))+(((3465)*((a)*((((2)*(M))+((-1)*(r)))*(pow(r,13)))))+(((-1)*((pow(a,13))*((r)*(((3302)*(M))+((2675)*(r))))))+(((420)*((pow(a,3))*((pow(r,10))*(((47)*(pow(M,2)))+(((52)*((M)*(r)))+((-46)*(pow(r,2))))))))+(((-12)*((pow(a,11))*((pow(r,2))*(((-87)*(pow(M,2)))+(((1564)*((M)*(r)))+((1240)*(pow(r,2))))))))+(((pow(a,9))*((pow(r,3))*(((11824)*(pow(M,3)))+(((21912)*((pow(M,2))*(r)))+(((-35442)*((M)*(pow(r,2))))+((-38795)*(pow(r,3))))))))+(((21)*((pow(a,5))*((pow(r,7))*(((624)*(pow(M,3)))+(((2824)*((pow(M,2))*(r)))+(((718)*((M)*(pow(r,2))))+((-2133)*(pow(r,3)))))))))+((8)*((pow(a,7))*((pow(r,4))*(((80)*(pow(M,4)))+(((3116)*((pow(M,3))*(r)))+(((7554)*((pow(M,2))*(pow(r,2))))+(((-2476)*((M)*(pow(r,3))))+((-6925)*(pow(r,4)))))))))))))))))*(expr[2]))+((105)*((r)*((pow((pow(a,2))+(pow(r,2)),2))*((((5)*(pow(a,8)))+(((33)*(pow(r,8)))+(((40)*((pow(a,6))*((r)*((M)+(r)))))+(((24)*((pow(a,2))*((pow(r,5))*(((3)*(M))+((4)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(pow(((4)*(M))+((7)*(r)),2)))))))))*((expr[0])*((expr[1])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_256(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[256] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.001116071428571428571428571428571428571428571428571428571428571428571428571428571428571428571428571429"))*((HighPrecisionScalar("1.303840481040529742916594311485836883305618755782013091790079369896765385576397896545183528886788498"))*((pow(a,-13))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((6)*(pow(a,8)))+(((-1)*((pow(a,6))*((r)*(((2)*(M))+((31)*(r))))))+(((14)*((pow(r,6))*(((2)*(pow(M,2)))+(((19)*((M)*(r)))+((-10)*(pow(r,2)))))))+(((-2)*((pow(a,4))*((pow(r,2))*(((18)*(pow(M,2)))+(((41)*((M)*(r)))+((108)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((32)*(pow(M,3)))+(((344)*((pow(M,2))*(r)))+(((178)*((M)*(pow(r,2))))+((-319)*(pow(r,3))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((2048)*(pow(a,16)))+(((225225)*(pow(r,16)))+(((15015)*((pow(a,2))*((pow(r,13))*(((58)*(M))+((91)*(r))))))+(((pow(a,14))*((r)*(((109022)*(M))+((70895)*(r)))))+(((1155)*((pow(a,4))*((pow(r,10))*(((888)*(pow(M,2)))+(((3636)*((M)*(r)))+((3043)*(pow(r,2))))))))+(((3)*((pow(a,12))*((pow(r,2))*(((167512)*(pow(M,2)))+(((385556)*((M)*(r)))+((188185)*(pow(r,2))))))))+(((9)*((pow(a,6))*((pow(r,7))*(((39744)*(pow(M,3)))+(((396224)*((pow(M,2))*(r)))+(((911458)*((M)*(pow(r,2))))+((551357)*(pow(r,3)))))))))+(((pow(a,10))*((pow(r,3))*(((339776)*(pow(M,3)))+(((2519808)*((pow(M,2))*(r)))+(((4402842)*((M)*(pow(r,2))))+((2055695)*(pow(r,3))))))))+((pow(a,8))*((pow(r,4))*(((8960)*(pow(M,4)))+(((697472)*((pow(M,3))*(r)))+(((4557648)*((pow(M,2))*(pow(r,2))))+(((8229608)*((M)*(pow(r,3))))+((4148675)*(pow(r,4)))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((r)*((pow((pow(a,2))+(pow(r,2)),2))*((((715)*(pow(r,15)))+(((35)*((pow(a,14))*(((2)*(M))+(r))))+(((143)*((pow(a,2))*((pow(r,12))*(((26)*(M))+((27)*(r))))))+(((35)*((pow(a,12))*((r)*(((32)*(pow(M,2)))+(((44)*((M)*(r)))+((15)*(pow(r,2))))))))+(((11)*((pow(a,4))*((pow(r,9))*(((608)*(pow(M,2)))+(((1420)*((M)*(r)))+((789)*(pow(r,2))))))))+(((7)*((pow(a,10))*((pow(r,2))*(((384)*(pow(M,3)))+(((1216)*((pow(M,2))*(r)))+(((1238)*((M)*(pow(r,2))))+((393)*(pow(r,3)))))))))+(((pow(a,6))*((pow(r,6))*(((4736)*(pow(M,3)))+(((19648)*((pow(M,2))*(r)))+(((25882)*((M)*(pow(r,2))))+((10441)*(pow(r,3))))))))+((pow(a,8))*((pow(r,3))*(((1024)*(pow(M,4)))+(((7424)*((pow(M,3))*(r)))+(((20352)*((pow(M,2))*(pow(r,2))))+(((21176)*((M)*(pow(r,3))))+((7169)*(pow(r,4))))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_257(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[257] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.002232142857142857142857142857142857142857142857142857142857142857142857142857142857142857142857142857"))*((HighPrecisionScalar("1.303840481040529742916594311485836883305618755782013091790079369896765385576397896545183528886788498"))*((pow(a,-11))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((3)*(pow(a,4)))+(((7)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((5)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((2048)*(pow(a,16)))+(((225225)*(pow(r,16)))+(((15015)*((pow(a,2))*((pow(r,13))*(((58)*(M))+((91)*(r))))))+(((pow(a,14))*((r)*(((109022)*(M))+((70895)*(r)))))+(((1155)*((pow(a,4))*((pow(r,10))*(((888)*(pow(M,2)))+(((3636)*((M)*(r)))+((3043)*(pow(r,2))))))))+(((3)*((pow(a,12))*((pow(r,2))*(((167512)*(pow(M,2)))+(((385556)*((M)*(r)))+((188185)*(pow(r,2))))))))+(((9)*((pow(a,6))*((pow(r,7))*(((39744)*(pow(M,3)))+(((396224)*((pow(M,2))*(r)))+(((911458)*((M)*(pow(r,2))))+((551357)*(pow(r,3)))))))))+(((pow(a,10))*((pow(r,3))*(((339776)*(pow(M,3)))+(((2519808)*((pow(M,2))*(r)))+(((4402842)*((M)*(pow(r,2))))+((2055695)*(pow(r,3))))))))+((pow(a,8))*((pow(r,4))*(((8960)*(pow(M,4)))+(((697472)*((pow(M,3))*(r)))+(((4557648)*((pow(M,2))*(pow(r,2))))+(((8229608)*((M)*(pow(r,3))))+((4148675)*(pow(r,4)))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((r)*((pow((pow(a,2))+(pow(r,2)),2))*((((715)*(pow(r,15)))+(((35)*((pow(a,14))*(((2)*(M))+(r))))+(((143)*((pow(a,2))*((pow(r,12))*(((26)*(M))+((27)*(r))))))+(((35)*((pow(a,12))*((r)*(((32)*(pow(M,2)))+(((44)*((M)*(r)))+((15)*(pow(r,2))))))))+(((11)*((pow(a,4))*((pow(r,9))*(((608)*(pow(M,2)))+(((1420)*((M)*(r)))+((789)*(pow(r,2))))))))+(((7)*((pow(a,10))*((pow(r,2))*(((384)*(pow(M,3)))+(((1216)*((pow(M,2))*(r)))+(((1238)*((M)*(pow(r,2))))+((393)*(pow(r,3)))))))))+(((pow(a,6))*((pow(r,6))*(((4736)*(pow(M,3)))+(((19648)*((pow(M,2))*(r)))+(((25882)*((M)*(pow(r,2))))+((10441)*(pow(r,3))))))))+((pow(a,8))*((pow(r,3))*(((1024)*(pow(M,4)))+(((7424)*((pow(M,3))*(r)))+(((20352)*((pow(M,2))*(pow(r,2))))+(((21176)*((M)*(pow(r,3))))+((7169)*(pow(r,4))))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_258(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[258] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.001116071428571428571428571428571428571428571428571428571428571428571428571428571428571428571428571429"))*((HighPrecisionScalar("1.303840481040529742916594311485836883305618755782013091790079369896765385576397896545183528886788498"))*((pow(a,-13))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((((3)*(pow(a,4)))+(((7)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((5)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((2048)*(pow(a,16)))+(((225225)*(pow(r,16)))+(((15015)*((pow(a,2))*((pow(r,13))*(((58)*(M))+((91)*(r))))))+(((pow(a,14))*((r)*(((109022)*(M))+((70895)*(r)))))+(((1155)*((pow(a,4))*((pow(r,10))*(((888)*(pow(M,2)))+(((3636)*((M)*(r)))+((3043)*(pow(r,2))))))))+(((3)*((pow(a,12))*((pow(r,2))*(((167512)*(pow(M,2)))+(((385556)*((M)*(r)))+((188185)*(pow(r,2))))))))+(((9)*((pow(a,6))*((pow(r,7))*(((39744)*(pow(M,3)))+(((396224)*((pow(M,2))*(r)))+(((911458)*((M)*(pow(r,2))))+((551357)*(pow(r,3)))))))))+(((pow(a,10))*((pow(r,3))*(((339776)*(pow(M,3)))+(((2519808)*((pow(M,2))*(r)))+(((4402842)*((M)*(pow(r,2))))+((2055695)*(pow(r,3))))))))+((pow(a,8))*((pow(r,4))*(((8960)*(pow(M,4)))+(((697472)*((pow(M,3))*(r)))+(((4557648)*((pow(M,2))*(pow(r,2))))+(((8229608)*((M)*(pow(r,3))))+((4148675)*(pow(r,4)))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((r)*((pow((pow(a,2))+(pow(r,2)),2))*((((715)*(pow(r,15)))+(((35)*((pow(a,14))*(((2)*(M))+(r))))+(((143)*((pow(a,2))*((pow(r,12))*(((26)*(M))+((27)*(r))))))+(((35)*((pow(a,12))*((r)*(((32)*(pow(M,2)))+(((44)*((M)*(r)))+((15)*(pow(r,2))))))))+(((11)*((pow(a,4))*((pow(r,9))*(((608)*(pow(M,2)))+(((1420)*((M)*(r)))+((789)*(pow(r,2))))))))+(((7)*((pow(a,10))*((pow(r,2))*(((384)*(pow(M,3)))+(((1216)*((pow(M,2))*(r)))+(((1238)*((M)*(pow(r,2))))+((393)*(pow(r,3)))))))))+(((pow(a,6))*((pow(r,6))*(((4736)*(pow(M,3)))+(((19648)*((pow(M,2))*(r)))+(((25882)*((M)*(pow(r,2))))+((10441)*(pow(r,3))))))))+((pow(a,8))*((pow(r,3))*(((1024)*(pow(M,4)))+(((7424)*((pow(M,3))*(r)))+(((20352)*((pow(M,2))*(pow(r,2))))+(((21176)*((M)*(pow(r,3))))+((7169)*(pow(r,4))))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_259(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[259] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.004464285714285714285714285714285714285714285714285714285714285714285714285714285714285714285714285714"))*((HighPrecisionScalar("1.303840481040529742916594311485836883305618755782013091790079369896765385576397896545183528886788498"))*((pow(a,-12))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((3)*(pow(a,4)))+(((7)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((5)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((2048)*(pow(a,16)))+(((225225)*(pow(r,16)))+(((15015)*((pow(a,2))*((pow(r,13))*(((58)*(M))+((91)*(r))))))+(((pow(a,14))*((r)*(((109022)*(M))+((70895)*(r)))))+(((1155)*((pow(a,4))*((pow(r,10))*(((888)*(pow(M,2)))+(((3636)*((M)*(r)))+((3043)*(pow(r,2))))))))+(((3)*((pow(a,12))*((pow(r,2))*(((167512)*(pow(M,2)))+(((385556)*((M)*(r)))+((188185)*(pow(r,2))))))))+(((9)*((pow(a,6))*((pow(r,7))*(((39744)*(pow(M,3)))+(((396224)*((pow(M,2))*(r)))+(((911458)*((M)*(pow(r,2))))+((551357)*(pow(r,3)))))))))+(((pow(a,10))*((pow(r,3))*(((339776)*(pow(M,3)))+(((2519808)*((pow(M,2))*(r)))+(((4402842)*((M)*(pow(r,2))))+((2055695)*(pow(r,3))))))))+((pow(a,8))*((pow(r,4))*(((8960)*(pow(M,4)))+(((697472)*((pow(M,3))*(r)))+(((4557648)*((pow(M,2))*(pow(r,2))))+(((8229608)*((M)*(pow(r,3))))+((4148675)*(pow(r,4)))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((r)*((pow((pow(a,2))+(pow(r,2)),2))*((((715)*(pow(r,15)))+(((35)*((pow(a,14))*(((2)*(M))+(r))))+(((143)*((pow(a,2))*((pow(r,12))*(((26)*(M))+((27)*(r))))))+(((35)*((pow(a,12))*((r)*(((32)*(pow(M,2)))+(((44)*((M)*(r)))+((15)*(pow(r,2))))))))+(((11)*((pow(a,4))*((pow(r,9))*(((608)*(pow(M,2)))+(((1420)*((M)*(r)))+((789)*(pow(r,2))))))))+(((7)*((pow(a,10))*((pow(r,2))*(((384)*(pow(M,3)))+(((1216)*((pow(M,2))*(r)))+(((1238)*((M)*(pow(r,2))))+((393)*(pow(r,3)))))))))+(((pow(a,6))*((pow(r,6))*(((4736)*(pow(M,3)))+(((19648)*((pow(M,2))*(r)))+(((25882)*((M)*(pow(r,2))))+((10441)*(pow(r,3))))))))+((pow(a,8))*((pow(r,3))*(((1024)*(pow(M,4)))+(((7424)*((pow(M,3))*(r)))+(((20352)*((pow(M,2))*(pow(r,2))))+(((21176)*((M)*(pow(r,3))))+((7169)*(pow(r,4))))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}
