
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_115(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[115] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("1.224744871391589049098642037352945695982973740328335064216346283625480188728657513269929716552320117"))*((pow(a,-6))*((M)*((r)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-4))*(((-16)*(pow(a,11)))+(((105)*((a)*((((2)*(M))+((-1)*(r)))*(pow(r,9)))))+(((-1)*((pow(a,9))*((r)*(((134)*(M))+((163)*(r))))))+(((10)*((pow(a,3))*((pow(r,6))*(((38)*(pow(M,2)))+(((46)*((M)*(r)))+((-43)*(pow(r,2))))))))+(((-2)*((pow(a,7))*((pow(r,2))*(((-154)*(pow(M,2)))+(((114)*((M)*(r)))+((249)*(pow(r,2))))))))+(((4)*((pow(a,5))*((pow(r,3))*(((12)*(pow(M,3)))+(((172)*((pow(M,2))*(r)))+(((39)*((M)*(pow(r,2))))+((-169)*(pow(r,3)))))))))+((15)*((pow((pow(a,2))+(pow(r,2)),2))*((((3)*(pow(a,4)))+(((7)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((5)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))))))).cast<double>());
}

void compute_coeffs_116(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[116] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.2500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.6094494002200440500253254720383870176095097659052323384697812774871684453223379953307273431017312644"))*((pow(a,-8))*((M)*((r)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*(((-128)*(pow(a,15)))+(((3465)*((a)*((((2)*(M))+((-1)*(r)))*(pow(r,13)))))+(((-1)*((pow(a,13))*((r)*(((3302)*(M))+((2675)*(r))))))+(((420)*((pow(a,3))*((pow(r,10))*(((47)*(pow(M,2)))+(((52)*((M)*(r)))+((-46)*(pow(r,2))))))))+(((-12)*((pow(a,11))*((pow(r,2))*(((-87)*(pow(M,2)))+(((1564)*((M)*(r)))+((1240)*(pow(r,2))))))))+(((pow(a,9))*((pow(r,3))*(((11824)*(pow(M,3)))+(((21912)*((pow(M,2))*(r)))+(((-35442)*((M)*(pow(r,2))))+((-38795)*(pow(r,3))))))))+(((21)*((pow(a,5))*((pow(r,7))*(((624)*(pow(M,3)))+(((2824)*((pow(M,2))*(r)))+(((718)*((M)*(pow(r,2))))+((-2133)*(pow(r,3)))))))))+(((8)*((pow(a,7))*((pow(r,4))*(((80)*(pow(M,4)))+(((3116)*((pow(M,3))*(r)))+(((7554)*((pow(M,2))*(pow(r,2))))+(((-2476)*((M)*(pow(r,3))))+((-6925)*(pow(r,4))))))))))+((105)*((pow((pow(a,2))+(pow(r,2)),2))*((((5)*(pow(a,8)))+(((33)*(pow(r,8)))+(((40)*((pow(a,6))*((r)*((M)+(r)))))+(((24)*((pow(a,2))*((pow(r,5))*(((3)*(M))+((4)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(pow(((4)*(M))+((7)*(r)),2)))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))))))))).cast<double>());
}

void compute_coeffs_117(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[117] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.008928571428571428571428571428571428571428571428571428571428571428571428571428571428571428571428571429"))*((HighPrecisionScalar("1.064581294844754133271349678465374256104489980291695111549122509737492968391756194856437487428389280"))*((pow(a,-10))*((M)*((r)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*(((-2048)*(pow(a,19)))+(((225225)*((a)*((((2)*(M))+((-1)*(r)))*(pow(r,17)))))+(((-1)*((pow(a,17))*((r)*(((104926)*(M))+((72943)*(r))))))+(((30030)*((pow(a,3))*((pow(r,14))*(((58)*(pow(M,2)))+(((62)*((M)*(r)))+((-53)*(pow(r,2))))))))+(((-2)*((pow(a,15))*((pow(r,2))*(((142246)*(pow(M,2)))+(((561950)*((M)*(r)))+((317725)*(pow(r,2))))))))+(((2310)*((pow(a,5))*((pow(r,11))*(((888)*(pow(M,3)))+(((3192)*((pow(M,2))*(r)))+(((848)*((M)*(pow(r,2))))+((-2113)*(pow(r,3)))))))))+(((-2)*((pow(a,13))*((pow(r,3))*(((-332648)*(pow(M,3)))+(((354504)*((pow(M,2))*(r)))+(((2215200)*((M)*(pow(r,2))))+((1310125)*(pow(r,3)))))))))+(((2)*((pow(a,11))*((pow(r,4))*(((335296)*(pow(M,4)))+(((2001184)*((pow(M,3))*(r)))+(((864114)*((pow(M,2))*(pow(r,2))))+(((-4260530)*((M)*(pow(r,3))))+((-3102185)*(pow(r,4))))))))))+(((6)*((pow(a,7))*((pow(r,8))*(((119232)*(pow(M,4)))+(((1129056)*((pow(M,3))*(r)))+(((1969098)*((pow(M,2))*(pow(r,2))))+(((-413046)*((M)*(pow(r,3))))+((-1412813)*(pow(r,4))))))))))+(((4)*((pow(a,9))*((pow(r,5))*(((4480)*(pow(M,5)))+(((346496)*((pow(M,4))*(r)))+(((2015032)*((pow(M,3))*(pow(r,2))))+(((2083888)*((pow(M,2))*(pow(r,3))))+(((-2033845)*((M)*(pow(r,4))))+((-2277722)*(pow(r,5)))))))))))+((315)*((pow((pow(a,2))+(pow(r,2)),2))*((((35)*(pow(a,12)))+(((715)*(pow(r,12)))+(((70)*((pow(a,10))*((r)*(((8)*(M))+((7)*(r))))))+(((286)*((pow(a,2))*((pow(r,9))*(((8)*(M))+((11)*(r))))))+(((7)*((pow(a,8))*((pow(r,2))*(((192)*(pow(M,2)))+(((512)*((M)*(r)))+((323)*(pow(r,2))))))))+(((11)*((pow(a,4))*((pow(r,6))*(((192)*(pow(M,2)))+(((640)*((M)*(r)))+((503)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((864)*((pow(M,2))*(r)))+(((1944)*((M)*(pow(r,2))))+((1227)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))))))))))).cast<double>());
}

void compute_coeffs_118(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[118] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.005208333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((HighPrecisionScalar("0.1139605764596379488364466013950170072841022964617467998821778653218540863145364452165674435982948799"))*((pow(a,-12))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((32768)*(pow(a,20)))+(((14549535)*(pow(r,20)))+(((255255)*((pow(a,2))*((pow(r,17))*(((278)*(M))+((431)*(r))))))+(((5)*((pow(a,18))*((r)*(((568042)*(M))+((349557)*(r))))))+(((12012)*((pow(a,4))*((pow(r,14))*(((9954)*(pow(M,2)))+(((37306)*((M)*(r)))+((30411)*(pow(r,2))))))))+(((5)*((pow(a,16))*((pow(r,2))*(((5026200)*(pow(M,2)))+(((9570536)*((M)*(r)))+((4107651)*(pow(r,2))))))))+(((1716)*((pow(a,6))*((pow(r,11))*(((46608)*(pow(M,3)))+(((348156)*((pow(M,2))*(r)))+(((705080)*((M)*(pow(r,2))))+((406635)*(pow(r,3)))))))))+(((4)*((pow(a,14))*((pow(r,3))*(((11537744)*(pow(M,3)))+(((55003116)*((pow(M,2))*(r)))+(((72514028)*((M)*(pow(r,2))))+((27771703)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((783488)*(pow(M,4)))+(((12974720)*((pow(M,3))*(r)))+(((55432812)*((pow(M,2))*(pow(r,2))))+(((82462820)*((M)*(pow(r,3))))+((38323295)*(pow(r,4))))))))))+(((4)*((pow(a,12))*((pow(r,4))*(((4147904)*(pow(M,4)))+(((54446784)*((pow(M,3))*(r)))+(((186996186)*((pow(M,2))*(pow(r,2))))+(((225694490)*((M)*(pow(r,3))))+((85876545)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,5))*(((129024)*(pow(M,5)))+(((16914176)*((pow(M,4))*(r)))+(((188550336)*((pow(M,3))*(pow(r,2))))+(((647378448)*((pow(M,2))*(pow(r,3))))+(((819578930)*((M)*(pow(r,4))))+((333200499)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((r)*((pow((pow(a,2))+(pow(r,2)),2))*((((4199)*(pow(r,19)))+(((63)*((pow(a,18))*(((2)*(M))+(r))))+(((221)*((pow(a,2))*((pow(r,16))*(((118)*(M))+((131)*(r))))))+(((21)*((pow(a,16))*((r)*(((160)*(pow(M,2)))+(((208)*((M)*(r)))+((67)*(pow(r,2))))))))+(((52)*((pow(a,4))*((pow(r,13))*(((1160)*(pow(M,2)))+(((2852)*((M)*(r)))+((1667)*(pow(r,2))))))))+(((84)*((pow(a,14))*((pow(r,2))*(((192)*(pow(M,3)))+(((528)*((pow(M,2))*(r)))+(((466)*((M)*(pow(r,2))))+((131)*(pow(r,3)))))))))+(((52)*((pow(a,6))*((pow(r,10))*(((1216)*(pow(M,3)))+(((5136)*((pow(M,2))*(r)))+(((6834)*((M)*(pow(r,2))))+((2831)*(pow(r,3)))))))))+(((12)*((pow(a,12))*((pow(r,3))*(((1536)*(pow(M,4)))+(((8448)*((pow(M,3))*(r)))+(((16584)*((pow(M,2))*(pow(r,2))))+(((13284)*((M)*(pow(r,3))))+((3673)*(pow(r,4))))))))))+(((2)*((pow(a,8))*((pow(r,7))*(((14336)*(pow(M,4)))+(((97792)*((pow(M,3))*(r)))+(((236784)*((pow(M,2))*(pow(r,2))))+(((231928)*((M)*(pow(r,3))))+((77609)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,4))*(((2048)*(pow(M,5)))+(((23552)*((pow(M,4))*(r)))+(((108800)*((pow(M,3))*(pow(r,2))))+(((212416)*((pow(M,2))*(pow(r,3))))+(((177610)*((M)*(pow(r,4))))+((52177)*(pow(r,5))))))))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_119(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[119] = std::complex<double>(0.0,1.0)*(((-5)*((pow(a,-4))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-3))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((a)*((r)*(((3)*((pow(r,8))*(((-2)*(M))+(r))))+(((5)*((pow(a,8))*(((2)*(M))+(r))))+(((2)*((pow(a,2))*((pow(r,5))*(((-2)*(pow(M,2)))+(((-10)*((M)*(r)))+((7)*(pow(r,2))))))))+(((2)*((pow(a,6))*((r)*(((-14)*(pow(M,2)))+(((6)*((M)*(r)))+((9)*(pow(r,2))))))))+((4)*((pow(a,4))*((pow(r,2))*(((4)*(pow(M,3)))+(((-8)*((pow(M,2))*(r)))+(((-3)*((M)*(pow(r,2))))+((6)*(pow(r,3)))))))))))))))+((-3)*((pow((pow(a,2))+(pow(r,2)),4))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))).cast<double>());
}
