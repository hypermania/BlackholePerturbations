
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_725(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[725] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.001325334821428571428571428571428571428571428571428571428571428571428571428571428571428571428571428571"))*((pow(a,-19))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((((7)*(pow(a,16)))+(((7)*((pow(a,14))*((((17)*(M))+((-26)*(r)))*(r))))+(((221)*((pow(r,14))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2)))))))+(((-7)*((pow(a,12))*((pow(r,2))*(((-6)*(pow(M,2)))+(((655)*((M)*(r)))+((636)*(pow(r,2))))))))+(((39)*((pow(a,2))*((pow(r,11))*(((40)*(pow(M,3)))+(((1828)*((pow(M,2))*(r)))+(((1219)*((M)*(pow(r,2))))+((-1318)*(pow(r,3)))))))))+(((-1)*((pow(a,10))*((pow(r,3))*(((808)*(pow(M,3)))+(((7876)*((pow(M,2))*(r)))+(((37993)*((M)*(pow(r,2))))+((27534)*(pow(r,3)))))))))+(((pow(a,8))*((pow(r,4))*(((128)*(pow(M,4)))+(((27296)*((pow(M,3))*(r)))+(((10630)*((pow(M,2))*(pow(r,2))))+(((-96361)*((M)*(pow(r,3))))+((-79382)*(pow(r,4)))))))))+(((13)*((pow(a,4))*((pow(r,8))*(((128)*(pow(M,4)))+(((6048)*((pow(M,3))*(r)))+(((12846)*((pow(M,2))*(pow(r,2))))+(((113)*((M)*(pow(r,3))))+((-8452)*(pow(r,4))))))))))+((pow(a,6))*((pow(r,5))*(((512)*(pow(M,5)))+(((25344)*((pow(M,4))*(r)))+(((104656)*((pow(M,3))*(pow(r,2))))+(((114696)*((pow(M,2))*(pow(r,3))))+(((-89475)*((M)*(pow(r,4))))+((-124530)*(pow(r,5))))))))))))))))))*((expr[0])*(((((4096)*(pow(a,21)))+(((765765)*((a)*(pow(r,20))))+(((15015)*((pow(a,3))*((pow(r,17))*(((214)*(M))+((403)*(r))))))+(((pow(a,19))*((r)*(((270978)*(M))+((176449)*(r)))))+(((24024)*((pow(a,5))*((pow(r,14))*(((178)*(pow(M,2)))+(((892)*((M)*(r)))+((877)*(pow(r,2))))))))+(((pow(a,17))*((pow(r,2))*(((1652096)*(pow(M,2)))+(((3819920)*((M)*(r)))+((1816745)*(pow(r,2)))))))+(((528)*((pow(a,7))*((pow(r,11))*(((3474)*(pow(M,3)))+(((43383)*((pow(M,2))*(r)))+(((116310)*((M)*(pow(r,2))))+((80260)*(pow(r,3)))))))))+(((8)*((pow(a,15))*((pow(r,3))*(((207332)*(pow(M,3)))+(((1550070)*((pow(M,2))*(r)))+(((2549506)*((M)*(pow(r,2))))+((1110081)*(pow(r,3)))))))))+(((16)*((pow(a,13))*((pow(r,4))*(((6048)*(pow(M,4)))+(((426760)*((pow(M,3))*(r)))+(((2335407)*((pow(M,2))*(pow(r,2))))+(((3586320)*((M)*(pow(r,3))))+((1578955)*(pow(r,4))))))))))+(((22)*((pow(a,9))*((pow(r,8))*(((3584)*(pow(M,4)))+(((326336)*((pow(M,3))*(r)))+(((2295696)*((pow(M,2))*(pow(r,2))))+(((4470584)*((M)*(pow(r,3))))+((2463167)*(pow(r,4))))))))))+((2)*((pow(a,11))*((pow(r,5))*(((-3584)*(pow(M,5)))+(((87808)*((pow(M,4))*(r)))+(((5257312)*((pow(M,3))*(pow(r,2))))+(((29246704)*((pow(M,2))*(pow(r,3))))+(((47845690)*((M)*(pow(r,4))))+((22811593)*(pow(r,5)))))))))))))))))))))*(expr[0]))+((-3465)*((pow((pow(a,2))+(pow(r,2)),4))*((((7)*(pow(a,12)))+(((221)*(pow(r,12)))+(((28)*((pow(a,10))*((r)*(((5)*(M))+((4)*(r))))))+(((156)*((pow(a,2))*((pow(r,9))*(((5)*(M))+((6)*(r))))))+(((7)*((pow(a,8))*((pow(r,2))*(pow(((8)*(M))+((9)*(r)),2)))))+(((13)*((pow(a,4))*((pow(r,6))*(pow(((8)*(M))+((11)*(r)),2)))))+((8)*((pow(a,6))*((pow(r,3))*(((32)*(pow(M,3)))+(((160)*((pow(M,2))*(r)))+(((297)*((M)*(pow(r,2))))+((165)*(pow(r,3)))))))))))))))*((expr[1])*((expr[2])*(expr[3]))))))))))))).cast<double>());
}

void compute_coeffs_scalar_726(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[726] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.001325334821428571428571428571428571428571428571428571428571428571428571428571428571428571428571428571"))*((pow(a,-17))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((7)*(pow(a,12)))+(((221)*(pow(r,12)))+(((28)*((pow(a,10))*((r)*(((5)*(M))+((4)*(r))))))+(((156)*((pow(a,2))*((pow(r,9))*(((5)*(M))+((6)*(r))))))+(((7)*((pow(a,8))*((pow(r,2))*(pow(((8)*(M))+((9)*(r)),2)))))+(((13)*((pow(a,4))*((pow(r,6))*(pow(((8)*(M))+((11)*(r)),2)))))+((8)*((pow(a,6))*((pow(r,3))*(((32)*(pow(M,3)))+(((160)*((pow(M,2))*(r)))+(((297)*((M)*(pow(r,2))))+((165)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((4096)*(pow(a,20)))+(((765765)*(pow(r,20)))+(((15015)*((pow(a,2))*((pow(r,17))*(((214)*(M))+((403)*(r))))))+(((pow(a,18))*((r)*(((270978)*(M))+((176449)*(r)))))+(((24024)*((pow(a,4))*((pow(r,14))*(((178)*(pow(M,2)))+(((892)*((M)*(r)))+((877)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((1652096)*(pow(M,2)))+(((3819920)*((M)*(r)))+((1816745)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((3474)*(pow(M,3)))+(((43383)*((pow(M,2))*(r)))+(((116310)*((M)*(pow(r,2))))+((80260)*(pow(r,3)))))))))+(((8)*((pow(a,14))*((pow(r,3))*(((207332)*(pow(M,3)))+(((1550070)*((pow(M,2))*(r)))+(((2549506)*((M)*(pow(r,2))))+((1110081)*(pow(r,3)))))))))+(((16)*((pow(a,12))*((pow(r,4))*(((6048)*(pow(M,4)))+(((426760)*((pow(M,3))*(r)))+(((2335407)*((pow(M,2))*(pow(r,2))))+(((3586320)*((M)*(pow(r,3))))+((1578955)*(pow(r,4))))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((3584)*(pow(M,4)))+(((326336)*((pow(M,3))*(r)))+(((2295696)*((pow(M,2))*(pow(r,2))))+(((4470584)*((M)*(pow(r,3))))+((2463167)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,5))*(((-3584)*(pow(M,5)))+(((87808)*((pow(M,4))*(r)))+(((5257312)*((pow(M,3))*(pow(r,2))))+(((29246704)*((pow(M,2))*(pow(r,3))))+(((47845690)*((M)*(pow(r,4))))+((22811593)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((r)*((pow((pow(a,2))+(pow(r,2)),4))*((((221)*(pow(r,15)))+(((7)*((pow(a,14))*(((2)*(M))+(r))))+(((13)*((pow(a,2))*((pow(r,12))*(((94)*(M))+((89)*(r))))))+(((7)*((pow(a,12))*((r)*(((40)*(pow(M,2)))+(((52)*((M)*(r)))+((17)*(pow(r,2))))))))+(((13)*((pow(a,4))*((pow(r,9))*(((184)*(pow(M,2)))+(((380)*((M)*(r)))+((193)*(pow(r,2))))))))+(((7)*((pow(a,10))*((pow(r,2))*(((128)*(pow(M,3)))+(((352)*((pow(M,2))*(r)))+(((326)*((M)*(pow(r,2))))+((97)*(pow(r,3)))))))))+(((pow(a,6))*((pow(r,6))*(((1920)*(pow(M,3)))+(((6688)*((pow(M,2))*(r)))+(((7810)*((M)*(pow(r,2))))+((2893)*(pow(r,3))))))))+((pow(a,8))*((pow(r,3))*(((512)*(pow(M,4)))+(((2816)*((pow(M,3))*(r)))+(((6480)*((pow(M,2))*(pow(r,2))))+(((6024)*((M)*(pow(r,3))))+((1887)*(pow(r,4))))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_727(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[727] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0006626674107142857142857142857142857142857142857142857142857142857142857142857142857142857142857142857"))*((pow(a,-19))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((((7)*(pow(a,12)))+(((221)*(pow(r,12)))+(((28)*((pow(a,10))*((r)*(((5)*(M))+((4)*(r))))))+(((156)*((pow(a,2))*((pow(r,9))*(((5)*(M))+((6)*(r))))))+(((7)*((pow(a,8))*((pow(r,2))*(pow(((8)*(M))+((9)*(r)),2)))))+(((13)*((pow(a,4))*((pow(r,6))*(pow(((8)*(M))+((11)*(r)),2)))))+((8)*((pow(a,6))*((pow(r,3))*(((32)*(pow(M,3)))+(((160)*((pow(M,2))*(r)))+(((297)*((M)*(pow(r,2))))+((165)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((4096)*(pow(a,20)))+(((765765)*(pow(r,20)))+(((15015)*((pow(a,2))*((pow(r,17))*(((214)*(M))+((403)*(r))))))+(((pow(a,18))*((r)*(((270978)*(M))+((176449)*(r)))))+(((24024)*((pow(a,4))*((pow(r,14))*(((178)*(pow(M,2)))+(((892)*((M)*(r)))+((877)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((1652096)*(pow(M,2)))+(((3819920)*((M)*(r)))+((1816745)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((3474)*(pow(M,3)))+(((43383)*((pow(M,2))*(r)))+(((116310)*((M)*(pow(r,2))))+((80260)*(pow(r,3)))))))))+(((8)*((pow(a,14))*((pow(r,3))*(((207332)*(pow(M,3)))+(((1550070)*((pow(M,2))*(r)))+(((2549506)*((M)*(pow(r,2))))+((1110081)*(pow(r,3)))))))))+(((16)*((pow(a,12))*((pow(r,4))*(((6048)*(pow(M,4)))+(((426760)*((pow(M,3))*(r)))+(((2335407)*((pow(M,2))*(pow(r,2))))+(((3586320)*((M)*(pow(r,3))))+((1578955)*(pow(r,4))))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((3584)*(pow(M,4)))+(((326336)*((pow(M,3))*(r)))+(((2295696)*((pow(M,2))*(pow(r,2))))+(((4470584)*((M)*(pow(r,3))))+((2463167)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,5))*(((-3584)*(pow(M,5)))+(((87808)*((pow(M,4))*(r)))+(((5257312)*((pow(M,3))*(pow(r,2))))+(((29246704)*((pow(M,2))*(pow(r,3))))+(((47845690)*((M)*(pow(r,4))))+((22811593)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((r)*((pow((pow(a,2))+(pow(r,2)),4))*((((221)*(pow(r,15)))+(((7)*((pow(a,14))*(((2)*(M))+(r))))+(((13)*((pow(a,2))*((pow(r,12))*(((94)*(M))+((89)*(r))))))+(((7)*((pow(a,12))*((r)*(((40)*(pow(M,2)))+(((52)*((M)*(r)))+((17)*(pow(r,2))))))))+(((13)*((pow(a,4))*((pow(r,9))*(((184)*(pow(M,2)))+(((380)*((M)*(r)))+((193)*(pow(r,2))))))))+(((7)*((pow(a,10))*((pow(r,2))*(((128)*(pow(M,3)))+(((352)*((pow(M,2))*(r)))+(((326)*((M)*(pow(r,2))))+((97)*(pow(r,3)))))))))+(((pow(a,6))*((pow(r,6))*(((1920)*(pow(M,3)))+(((6688)*((pow(M,2))*(r)))+(((7810)*((M)*(pow(r,2))))+((2893)*(pow(r,3))))))))+((pow(a,8))*((pow(r,3))*(((512)*(pow(M,4)))+(((2816)*((pow(M,3))*(r)))+(((6480)*((pow(M,2))*(pow(r,2))))+(((6024)*((M)*(pow(r,3))))+((1887)*(pow(r,4))))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_728(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[728] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.005301339285714285714285714285714285714285714285714285714285714285714285714285714285714285714285714286"))*((pow(a,-18))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((7)*(pow(a,12)))+(((221)*(pow(r,12)))+(((28)*((pow(a,10))*((r)*(((5)*(M))+((4)*(r))))))+(((156)*((pow(a,2))*((pow(r,9))*(((5)*(M))+((6)*(r))))))+(((7)*((pow(a,8))*((pow(r,2))*(pow(((8)*(M))+((9)*(r)),2)))))+(((13)*((pow(a,4))*((pow(r,6))*(pow(((8)*(M))+((11)*(r)),2)))))+((8)*((pow(a,6))*((pow(r,3))*(((32)*(pow(M,3)))+(((160)*((pow(M,2))*(r)))+(((297)*((M)*(pow(r,2))))+((165)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((4096)*(pow(a,20)))+(((765765)*(pow(r,20)))+(((15015)*((pow(a,2))*((pow(r,17))*(((214)*(M))+((403)*(r))))))+(((pow(a,18))*((r)*(((270978)*(M))+((176449)*(r)))))+(((24024)*((pow(a,4))*((pow(r,14))*(((178)*(pow(M,2)))+(((892)*((M)*(r)))+((877)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((1652096)*(pow(M,2)))+(((3819920)*((M)*(r)))+((1816745)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((3474)*(pow(M,3)))+(((43383)*((pow(M,2))*(r)))+(((116310)*((M)*(pow(r,2))))+((80260)*(pow(r,3)))))))))+(((8)*((pow(a,14))*((pow(r,3))*(((207332)*(pow(M,3)))+(((1550070)*((pow(M,2))*(r)))+(((2549506)*((M)*(pow(r,2))))+((1110081)*(pow(r,3)))))))))+(((16)*((pow(a,12))*((pow(r,4))*(((6048)*(pow(M,4)))+(((426760)*((pow(M,3))*(r)))+(((2335407)*((pow(M,2))*(pow(r,2))))+(((3586320)*((M)*(pow(r,3))))+((1578955)*(pow(r,4))))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((3584)*(pow(M,4)))+(((326336)*((pow(M,3))*(r)))+(((2295696)*((pow(M,2))*(pow(r,2))))+(((4470584)*((M)*(pow(r,3))))+((2463167)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,5))*(((-3584)*(pow(M,5)))+(((87808)*((pow(M,4))*(r)))+(((5257312)*((pow(M,3))*(pow(r,2))))+(((29246704)*((pow(M,2))*(pow(r,3))))+(((47845690)*((M)*(pow(r,4))))+((22811593)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((r)*((pow((pow(a,2))+(pow(r,2)),4))*((((221)*(pow(r,15)))+(((7)*((pow(a,14))*(((2)*(M))+(r))))+(((13)*((pow(a,2))*((pow(r,12))*(((94)*(M))+((89)*(r))))))+(((7)*((pow(a,12))*((r)*(((40)*(pow(M,2)))+(((52)*((M)*(r)))+((17)*(pow(r,2))))))))+(((13)*((pow(a,4))*((pow(r,9))*(((184)*(pow(M,2)))+(((380)*((M)*(r)))+((193)*(pow(r,2))))))))+(((7)*((pow(a,10))*((pow(r,2))*(((128)*(pow(M,3)))+(((352)*((pow(M,2))*(r)))+(((326)*((M)*(pow(r,2))))+((97)*(pow(r,3)))))))))+(((pow(a,6))*((pow(r,6))*(((1920)*(pow(M,3)))+(((6688)*((pow(M,2))*(r)))+(((7810)*((M)*(pow(r,2))))+((2893)*(pow(r,3))))))))+((pow(a,8))*((pow(r,3))*(((512)*(pow(M,4)))+(((2816)*((pow(M,3))*(r)))+(((6480)*((pow(M,2))*(pow(r,2))))+(((6024)*((M)*(pow(r,3))))+((1887)*(pow(r,4))))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_729(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[729] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0005580357142857142857142857142857142857142857142857142857142857142857142857142857142857142857142857143"))*((HighPrecisionScalar("1.125462867742275478874459293968140665923231810508323596843320248528839743353187215104283798292690589"))*((pow(a,-11))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,4)))+(((-3)*((pow(a,2))*((r)*(((2)*(M))+((29)*(r))))))+((2)*((pow(r,2))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2)))))))))*(((a)*((r)*(((-765765)*((((2)*(M))+((-1)*(r)))*(pow(r,20))))+(((30563)*((pow(a,20))*(((2)*(M))+(r))))+(((60060)*((pow(a,2))*((pow(r,17))*(((-137)*(pow(M,2)))+(((-118)*((M)*(r)))+((106)*(pow(r,2))))))))+(((4)*((pow(a,18))*((r)*(((240215)*(pow(M,2)))+(((393030)*((M)*(r)))+((144102)*(pow(r,2))))))))+(((-3003)*((pow(a,4))*((pow(r,14))*(((5168)*(pow(M,3)))+(((14168)*((pow(M,2))*(r)))+(((2166)*((M)*(pow(r,2))))+((-7821)*(pow(r,3)))))))))+(((pow(a,16))*((pow(r,2))*(((823024)*(pow(M,3)))+(((8921416)*((pow(M,2))*(r)))+(((12015678)*((M)*(pow(r,2))))+((4185993)*(pow(r,3))))))))+(((264)*((pow(a,6))*((pow(r,11))*(((-44976)*(pow(M,4)))+(((-262764)*((pow(M,3))*(r)))+(((-322901)*((pow(M,2))*(pow(r,2))))+(((95652)*((M)*(pow(r,3))))+((191292)*(pow(r,4))))))))))+(((8)*((pow(a,14))*((pow(r,3))*(((-567568)*(pow(M,4)))+(((-517868)*((pow(M,3))*(r)))+(((3591877)*((pow(M,2))*(pow(r,2))))+(((5574244)*((M)*(pow(r,3))))+((2061836)*(pow(r,4))))))))))+(((-2)*((pow(a,8))*((pow(r,8))*(((1509632)*(pow(M,5)))+(((19973248)*((pow(M,4))*(r)))+(((60802040)*((pow(M,3))*(pow(r,2))))+(((37502420)*((pow(M,2))*(pow(r,3))))+(((-42126950)*((M)*(pow(r,4))))+((-34925569)*(pow(r,5)))))))))))+(((-16)*((pow(a,10))*((pow(r,5))*(((3584)*(pow(M,6)))+(((366656)*((pow(M,5))*(r)))+(((3050784)*((pow(M,4))*(pow(r,2))))+(((6435380)*((pow(M,3))*(pow(r,3))))+(((596390)*((pow(M,2))*(pow(r,4))))+(((-7375881)*((M)*(pow(r,5))))+((-4039833)*(pow(r,6))))))))))))+((pow(a,12))*(((-2847232)*((pow(M,5))*(pow(r,4))))+(((-25280256)*((pow(M,4))*(pow(r,5))))+(((-40178160)*((pow(M,3))*(pow(r,6))))+(((35309480)*((pow(M,2))*(pow(r,7))))+(((94050540)*((M)*(pow(r,8))))+((40255950)*(pow(r,9)))))))))))))))))))))+((-315)*((pow((pow(a,2))+(pow(r,2)),2))*((((7)*(pow(a,16)))+(((2431)*(pow(r,16)))+(((112)*((pow(a,14))*((r)*(((5)*(M))+((3)*(r))))))+(((2288)*((pow(a,2))*((pow(r,13))*(((5)*(M))+((6)*(r))))))+(((572)*((pow(a,4))*((pow(r,10))*(((32)*(pow(M,2)))+(((88)*((M)*(r)))+((57)*(pow(r,2))))))))+(((28)*((pow(a,12))*((pow(r,2))*(((160)*(pow(M,2)))+(((280)*((M)*(r)))+((117)*(pow(r,2))))))))+(((112)*((pow(a,10))*((pow(r,3))*(((64)*(pow(M,3)))+(((256)*((pow(M,2))*(r)))+(((323)*((M)*(pow(r,2))))+((124)*(pow(r,3)))))))))+(((176)*((pow(a,6))*((pow(r,7))*(((64)*(pow(M,3)))+(((320)*((pow(M,2))*(r)))+(((503)*((M)*(pow(r,2))))+((239)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((9216)*((pow(M,3))*(r)))+(((31104)*((pow(M,2))*(pow(r,2))))+(((39264)*((M)*(pow(r,3))))+((15849)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

}
