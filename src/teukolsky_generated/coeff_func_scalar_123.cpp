
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_615(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[615] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.0009765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("2.915475947422650235437076438772791538260699167442985977225003372433905030998356313832620163226517699"))*((pow(a,-18))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((5)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((3)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((114688)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((255255)*((pow(a,2))*((pow(r,25))*(((206)*(M))+((695)*(r))))))+(((7)*((pow(a,26))*((r)*(((1052134)*(M))+((755443)*(r))))))+(((6006)*((pow(a,4))*((pow(r,22))*(((8508)*(pow(M,2)))+(((96552)*((M)*(r)))+((165667)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((1793192)*(pow(M,2)))+(((6001728)*((M)*(r)))+((3224903)*(pow(r,2))))))))+(((2574)*((pow(a,6))*((pow(r,19))*(((2400)*(pow(M,3)))+(((194920)*((pow(M,2))*(r)))+(((1131698)*((M)*(pow(r,2))))+((1320061)*(pow(r,3)))))))))+(((70)*((pow(a,22))*((pow(r,3))*(((186336)*(pow(M,3)))+(((5659080)*((pow(M,2))*(r)))+(((13001370)*((M)*(pow(r,2))))+((6336865)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((-12800)*(pow(M,4)))+(((371200)*((pow(M,3))*(r)))+(((15477720)*((pow(M,2))*(pow(r,2))))+(((61573120)*((M)*(pow(r,3))))+((55100059)*(pow(r,4))))))))))+(((10)*((pow(a,20))*((pow(r,4))*(((-578304)*(pow(M,4)))+(((9278208)*((pow(M,3))*(r)))+(((186197940)*((pow(M,2))*(pow(r,2))))+(((378635800)*((M)*(pow(r,3))))+((180690325)*(pow(r,4))))))))))+(((65)*((pow(a,10))*((pow(r,13))*(((12288)*(pow(M,5)))+(((-199680)*((pow(M,4))*(r)))+(((3086080)*((pow(M,3))*(pow(r,2))))+(((88851264)*((pow(M,2))*(pow(r,3))))+(((274061382)*((M)*(pow(r,4))))+((201488035)*(pow(r,5)))))))))))+(((3)*((pow(a,18))*((pow(r,5))*(((864256)*(pow(M,5)))+(((-9405440)*((pow(M,4))*(r)))+(((96912640)*((pow(M,3))*(pow(r,2))))+(((1719012800)*((pow(M,2))*(pow(r,3))))+(((3424686650)*((M)*(pow(r,4))))+((1673282765)*(pow(r,5)))))))))))+(((60)*((pow(a,12))*((pow(r,10))*(((-6144)*(pow(M,6)))+(((71680)*((pow(M,5))*(r)))+(((-647040)*((pow(M,4))*(pow(r,2))))+(((7262080)*((pow(M,3))*(pow(r,3))))+(((164470188)*((pow(M,2))*(pow(r,4))))+(((422894584)*((M)*(pow(r,5))))+((267435189)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((-827392)*(pow(M,6)))+(((7888896)*((pow(M,5))*(r)))+(((-57438720)*((pow(M,4))*(pow(r,2))))+(((524372480)*((pow(M,3))*(pow(r,3))))+(((9330483600)*((pow(M,2))*(pow(r,4))))+(((19336000320)*((M)*(pow(r,5))))+((9997277465)*(pow(r,6)))))))))))+((4)*((pow(a,14))*((pow(r,7))*(((32768)*(pow(M,7)))+(((-299008)*((pow(M,6))*(r)))+(((2199552)*((pow(M,5))*(pow(r,2))))+(((-15669760)*((pow(M,4))*(pow(r,3))))+(((148851680)*((pow(M,3))*(pow(r,4))))+(((2883128520)*((pow(M,2))*(pow(r,5))))+(((6508958330)*((M)*(pow(r,6))))+((3666576305)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),10))*((((323)*(pow(r,11)))+(((15)*((pow(a,10))*(((2)*(M))+(r))))+(((17)*((pow(a,2))*((pow(r,8))*(((94)*(M))+((67)*(r))))))+(((5)*((pow(a,8))*((r)*(((112)*(pow(M,2)))+(((136)*((M)*(r)))+((43)*(pow(r,2))))))))+(((2)*((pow(a,4))*((pow(r,5))*(((1288)*(pow(M,2)))+(((1908)*((M)*(r)))+((747)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((672)*(pow(M,3)))+(((1568)*((pow(M,2))*(r)))+(((1434)*((M)*(pow(r,2))))+((439)*(pow(r,3))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_616(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[616] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.001953125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.5559594491425692918556411711519360281021923504648278133485961923502843354175494660168202602962809760"))*((pow(a,-13))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((-3)*((pow(a,2))*((r)*((M)+((9)*(r))))))+((pow(r,2))*(((2)*(pow(M,2)))+(((71)*((M)*(r)))+((-36)*(pow(r,2))))))))*(((a)*((r)*(((-225225)*((((2)*(M))+((-1)*(r)))*(pow(r,24))))+(((37495)*((pow(a,24))*(((2)*(M))+(r))))+(((30030)*((pow(a,2))*((pow(r,21))*(((-58)*(pow(M,2)))+(((-122)*((M)*(r)))+((83)*(pow(r,2))))))))+(((10)*((pow(a,22))*((r)*(((49118)*(pow(M,2)))+(((139106)*((M)*(r)))+((61023)*(pow(r,2))))))))+(((-4620)*((pow(a,4))*((pow(r,18))*(((396)*(pow(M,3)))+(((3176)*((pow(M,2))*(r)))+(((2585)*((M)*(pow(r,2))))+((-2721)*(pow(r,3)))))))))+(((4)*((pow(a,20))*((pow(r,2))*(((-253604)*(pow(M,3)))+(((847544)*((pow(M,2))*(r)))+(((2397877)*((M)*(pow(r,2))))+((1067837)*(pow(r,3)))))))))+(((-66)*((pow(a,6))*((pow(r,15))*(((3712)*(pow(M,4)))+(((214336)*((pow(M,3))*(r)))+(((818898)*((pow(M,2))*(pow(r,2))))+(((256094)*((M)*(pow(r,3))))+((-578423)*(pow(r,4))))))))))+(((2)*((pow(a,18))*((pow(r,3))*(((-326016)*(pow(M,4)))+(((-4709696)*((pow(M,3))*(r)))+(((3715218)*((pow(M,2))*(pow(r,2))))+(((17789282)*((M)*(pow(r,3))))+((8696233)*(pow(r,4))))))))))+(((11)*((pow(a,8))*((pow(r,12))*(((7168)*(pow(M,5)))+(((-151552)*((pow(M,4))*(r)))+(((-4327232)*((pow(M,3))*(pow(r,2))))+(((-10295744)*((pow(M,2))*(pow(r,3))))+(((345014)*((M)*(pow(r,4))))+((7060231)*(pow(r,5)))))))))))+(((pow(a,16))*((pow(r,4))*(((275456)*(pow(M,5)))+(((-3223552)*((pow(M,4))*(r)))+(((-36843456)*((pow(M,3))*(pow(r,2))))+(((-3316928)*((pow(M,2))*(pow(r,3))))+(((81080146)*((M)*(pow(r,4))))+((46450803)*(pow(r,5))))))))))+(((4)*((pow(a,14))*((pow(r,5))*(((-23552)*(pow(M,6)))+(((204800)*((pow(M,5))*(r)))+(((-1672640)*((pow(M,4))*(pow(r,2))))+(((-20074080)*((pow(M,3))*(pow(r,3))))+(((-12433010)*((pow(M,2))*(pow(r,4))))+(((29779610)*((M)*(pow(r,5))))+((21589855)*(pow(r,6))))))))))))+(((4)*((pow(a,10))*((pow(r,9))*(((-9216)*(pow(M,6)))+(((106496)*((pow(M,5))*(r)))+(((-1199680)*((pow(M,4))*(pow(r,2))))+(((-22722144)*((pow(M,3))*(pow(r,3))))+(((-36565006)*((pow(M,2))*(pow(r,4))))+(((14493722)*((M)*(pow(r,5))))+((27836577)*(pow(r,6))))))))))))+((8)*((pow(a,12))*((pow(r,6))*(((2048)*(pow(M,7)))+(((-16384)*((pow(M,6))*(r)))+(((111360)*((pow(M,5))*(pow(r,2))))+(((-936960)*((pow(M,4))*(pow(r,3))))+(((-13432940)*((pow(M,3))*(pow(r,4))))+(((-14500800)*((pow(M,2))*(pow(r,5))))+(((13918555)*((M)*(pow(r,6))))+((14394800)*(pow(r,7)))))))))))))))))))))))))))+((-3465)*((pow((pow(a,2))+(pow(r,2)),8))*(((pow(a,8))+(((65)*(pow(r,8)))+(((52)*((pow(a,2))*((pow(r,5))*(((4)*(M))+((3)*(r))))))+(((4)*((pow(a,6))*((r)*(((12)*(M))+((7)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((80)*(pow(M,2)))+(((128)*((M)*(r)))+((59)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_617(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[617] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0001953125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("4.482288376589472730161464179664940922968432407180351338182777341837714446493455019848599318961585480"))*((pow(a,-15))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,8))+(((pow(a,6))*((((17)*(M))+((-15)*(r)))*(r)))+(((11)*((pow(r,6))*(((2)*(pow(M,2)))+(((71)*((M)*(r)))+((-36)*(pow(r,2)))))))+(((-1)*((pow(a,4))*((pow(r,2))*(((58)*(pow(M,2)))+(((505)*((M)*(r)))+((349)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((40)*(pow(M,3)))+(((1444)*((pow(M,2))*(r)))+(((99)*((M)*(pow(r,2))))+((-729)*(pow(r,3))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((37495)*(pow(a,20)))+(((225225)*(pow(r,20)))+(((60060)*((pow(a,2))*((pow(r,17))*(((7)*(M))+((34)*(r))))))+(((20)*((pow(a,18))*((r)*(((16029)*(M))+((26762)*(r))))))+(((1155)*((pow(a,4))*((pow(r,14))*(((64)*(pow(M,2)))+(((2848)*((M)*(r)))+((7153)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((133952)*(pow(M,2)))+(((2698592)*((M)*(r)))+((3163373)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((-48)*(pow(M,3)))+(((912)*((pow(M,2))*(r)))+(((21279)*((M)*(pow(r,2))))+((37141)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((-3632)*(pow(M,3)))+(((44784)*((pow(M,2))*(r)))+(((616895)*((M)*(pow(r,2))))+((658155)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((512)*(pow(M,4)))+(((-5632)*((pow(M,3))*(r)))+(((59808)*((pow(M,2))*(pow(r,2))))+(((994160)*((M)*(pow(r,3))))+((1371815)*(pow(r,4))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((10752)*(pow(M,4)))+(((-94720)*((pow(M,3))*(r)))+(((802848)*((pow(M,2))*(pow(r,2))))+(((10257360)*((M)*(pow(r,3))))+((11113235)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((-512)*(pow(M,5)))+(((4096)*((pow(M,4))*(r)))+(((-28736)*((pow(M,3))*(pow(r,2))))+(((241408)*((pow(M,2))*(pow(r,3))))+(((3315955)*((M)*(pow(r,4))))+((3922000)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((pow((pow(a,2))+(pow(r,2)),8))*(((pow(a,8))+(((65)*(pow(r,8)))+(((52)*((pow(a,2))*((pow(r,5))*(((4)*(M))+((3)*(r))))))+(((4)*((pow(a,6))*((r)*(((12)*(M))+((7)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((80)*(pow(M,2)))+(((128)*((M)*(r)))+((59)*(pow(r,2))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_618(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[618] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0008300781250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-17))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,12))+(((pow(a,10))*((r)*(((45)*(M))+(r))))+(((pow(a,8))*((pow(r,2))*(((18)*(pow(M,2)))+(((-1053)*((M)*(r)))+((-674)*(pow(r,2)))))))+(((65)*((pow(r,10))*(((2)*(pow(M,2)))+(((71)*((M)*(r)))+((-36)*(pow(r,2)))))))+(((13)*((pow(a,2))*((pow(r,7))*(((32)*(pow(M,3)))+(((1160)*((pow(M,2))*(r)))+(((261)*((M)*(pow(r,2))))+((-567)*(pow(r,3)))))))))+(((-2)*((pow(a,6))*((pow(r,3))*(((192)*(pow(M,3)))+(((812)*((pow(M,2))*(r)))+(((3399)*((M)*(pow(r,2))))+((2019)*(pow(r,3)))))))))+((pow(a,4))*((pow(r,4))*(((320)*(pow(M,4)))+(((11872)*((pow(M,3))*(r)))+(((12028)*((pow(M,2))*(pow(r,2))))+(((-6922)*((M)*(pow(r,3))))+((-8395)*(pow(r,4)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((37495)*(pow(a,20)))+(((225225)*(pow(r,20)))+(((60060)*((pow(a,2))*((pow(r,17))*(((7)*(M))+((34)*(r))))))+(((20)*((pow(a,18))*((r)*(((16029)*(M))+((26762)*(r))))))+(((1155)*((pow(a,4))*((pow(r,14))*(((64)*(pow(M,2)))+(((2848)*((M)*(r)))+((7153)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((133952)*(pow(M,2)))+(((2698592)*((M)*(r)))+((3163373)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((-48)*(pow(M,3)))+(((912)*((pow(M,2))*(r)))+(((21279)*((M)*(pow(r,2))))+((37141)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((-3632)*(pow(M,3)))+(((44784)*((pow(M,2))*(r)))+(((616895)*((M)*(pow(r,2))))+((658155)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((512)*(pow(M,4)))+(((-5632)*((pow(M,3))*(r)))+(((59808)*((pow(M,2))*(pow(r,2))))+(((994160)*((M)*(pow(r,3))))+((1371815)*(pow(r,4))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((10752)*(pow(M,4)))+(((-94720)*((pow(M,3))*(r)))+(((802848)*((pow(M,2))*(pow(r,2))))+(((10257360)*((M)*(pow(r,3))))+((11113235)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((-512)*(pow(M,5)))+(((4096)*((pow(M,4))*(r)))+(((-28736)*((pow(M,3))*(pow(r,2))))+(((241408)*((pow(M,2))*(pow(r,3))))+(((3315955)*((M)*(pow(r,4))))+((3922000)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((pow((pow(a,2))+(pow(r,2)),8))*(((pow(a,8))+(((65)*(pow(r,8)))+(((52)*((pow(a,2))*((pow(r,5))*(((4)*(M))+((3)*(r))))))+(((4)*((pow(a,6))*((r)*(((12)*(M))+((7)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((80)*(pow(M,2)))+(((128)*((M)*(r)))+((59)*(pow(r,2))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_619(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[619] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0008300781250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-15))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,8))+(((65)*(pow(r,8)))+(((52)*((pow(a,2))*((pow(r,5))*(((4)*(M))+((3)*(r))))))+(((4)*((pow(a,6))*((r)*(((12)*(M))+((7)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((80)*(pow(M,2)))+(((128)*((M)*(r)))+((59)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((37495)*(pow(a,20)))+(((225225)*(pow(r,20)))+(((60060)*((pow(a,2))*((pow(r,17))*(((7)*(M))+((34)*(r))))))+(((20)*((pow(a,18))*((r)*(((16029)*(M))+((26762)*(r))))))+(((1155)*((pow(a,4))*((pow(r,14))*(((64)*(pow(M,2)))+(((2848)*((M)*(r)))+((7153)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((133952)*(pow(M,2)))+(((2698592)*((M)*(r)))+((3163373)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((-48)*(pow(M,3)))+(((912)*((pow(M,2))*(r)))+(((21279)*((M)*(pow(r,2))))+((37141)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((-3632)*(pow(M,3)))+(((44784)*((pow(M,2))*(r)))+(((616895)*((M)*(pow(r,2))))+((658155)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((512)*(pow(M,4)))+(((-5632)*((pow(M,3))*(r)))+(((59808)*((pow(M,2))*(pow(r,2))))+(((994160)*((M)*(pow(r,3))))+((1371815)*(pow(r,4))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((10752)*(pow(M,4)))+(((-94720)*((pow(M,3))*(r)))+(((802848)*((pow(M,2))*(pow(r,2))))+(((10257360)*((M)*(pow(r,3))))+((11113235)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((-512)*(pow(M,5)))+(((4096)*((pow(M,4))*(r)))+(((-28736)*((pow(M,3))*(pow(r,2))))+(((241408)*((pow(M,2))*(pow(r,3))))+(((3315955)*((M)*(pow(r,4))))+((3922000)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((pow((pow(a,2))+(pow(r,2)),8))*(((pow(a,8))+(((65)*(pow(r,8)))+(((52)*((pow(a,2))*((pow(r,5))*(((4)*(M))+((3)*(r))))))+(((4)*((pow(a,6))*((r)*(((12)*(M))+((7)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((80)*(pow(M,2)))+(((128)*((M)*(r)))+((59)*(pow(r,2))))))))))))*(expr[3])))))))))))))).cast<double>());
}

}
