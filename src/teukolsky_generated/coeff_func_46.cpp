
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_230(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[230] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.1250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.732050807568877293527446341505872366942805253810380628055806979451933016908800037081146186757248576"))*((pow(a,-7))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-4))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((-1)*((pow(a,2))*((r)*(((3)*(M))+((7)*(r))))))+((pow(r,2))*(((2)*(pow(M,2)))+(((19)*((M)*(r)))+((-10)*(pow(r,2))))))))*(((a)*((r)*(((105)*((pow(r,12))*(((-2)*(M))+(r))))+(((81)*((pow(a,12))*(((2)*(M))+(r))))+(((10)*((pow(a,2))*((pow(r,9))*(((-50)*(pow(M,2)))+(((-76)*((M)*(r)))+((61)*(pow(r,2))))))))+(((pow(a,10))*(((-212)*((pow(M,2))*(r)))+(((760)*((M)*(pow(r,2))))+((514)*(pow(r,3))))))+(((pow(a,8))*((pow(r,2))*(((-256)*(pow(M,3)))+(((-1232)*((pow(M,2))*(r)))+(((1178)*((M)*(pow(r,2))))+((1351)*(pow(r,3))))))))+(((pow(a,4))*((pow(r,6))*(((-128)*(pow(M,3)))+(((-1808)*((pow(M,2))*(r)))+(((-746)*((M)*(pow(r,2))))+((1471)*(pow(r,3))))))))+((4)*((pow(a,6))*((pow(r,3))*(((16)*(pow(M,4)))+(((-96)*((pow(M,3))*(r)))+(((-582)*((pow(M,2))*(pow(r,2))))+(((96)*((M)*(pow(r,3))))+((471)*(pow(r,4))))))))))))))))))+((-15)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,4))+(((7)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((3)*(M))+((2)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_231(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[231] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.09375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-9))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,8))+(((pow(a,6))*((r)*(((9)*(M))+(r))))+(((7)*((pow(r,6))*(((2)*(pow(M,2)))+(((19)*((M)*(r)))+((-10)*(pow(r,2)))))))+(((-1)*((pow(a,4))*((pow(r,2))*(((34)*(pow(M,2)))+(((89)*((M)*(r)))+((59)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((24)*(pow(M,3)))+(((244)*((pow(M,2))*(r)))+(((11)*((M)*(pow(r,2))))+((-129)*(pow(r,3))))))))))))*((expr[2])*(((a)*((((81)*(pow(a,8)))+(((105)*(pow(r,8)))+(((40)*((pow(a,2))*((pow(r,5))*((M)+((10)*(r))))))+(((8)*((pow(a,6))*((r)*(((7)*(M))+((44)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((-8)*(pow(M,2)))+(((48)*((M)*(r)))+((283)*(pow(r,2))))))))))))*((((pow(r,4))*(((-2)*(M))+(r)))+(((pow(a,4))*(((2)*(M))+(r)))+(((pow(a,2))*(((-4)*((pow(M,2))*(r)))+((2)*(pow(r,3)))))+((pow(expr[0],2))*(pow(expr[1],2))))))*(expr[2]))))+((-30)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,4))+(((7)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((3)*(M))+((2)*(r))))))))*((expr[0])*((expr[1])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_232(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[232] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.1875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-7))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-4))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((7)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((3)*(M))+((2)*(r))))))))*((expr[2])*(((((105)*((a)*((pow(r,12))*(((-2)*(M))+(r)))))+(((81)*((pow(a,13))*(((2)*(M))+(r))))+(((10)*((pow(a,3))*((pow(r,9))*(((-50)*(pow(M,2)))+(((-76)*((M)*(r)))+((61)*(pow(r,2))))))))+(((pow(a,11))*(((-212)*((pow(M,2))*(r)))+(((760)*((M)*(pow(r,2))))+((514)*(pow(r,3))))))+(((pow(a,9))*((pow(r,2))*(((-256)*(pow(M,3)))+(((-1232)*((pow(M,2))*(r)))+(((1178)*((M)*(pow(r,2))))+((1351)*(pow(r,3))))))))+(((pow(a,5))*((pow(r,6))*(((-128)*(pow(M,3)))+(((-1808)*((pow(M,2))*(r)))+(((-746)*((M)*(pow(r,2))))+((1471)*(pow(r,3))))))))+((4)*((pow(a,7))*((pow(r,3))*(((16)*(pow(M,4)))+(((-96)*((pow(M,3))*(r)))+(((-582)*((pow(M,2))*(pow(r,2))))+(((96)*((M)*(pow(r,3))))+((471)*(pow(r,4))))))))))))))))*(expr[2]))+((-15)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,4))+(((7)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((3)*(M))+((2)*(r))))))))*((expr[0])*((expr[1])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_233(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[233] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.09375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-9))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((pow(a,4))+(((7)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((3)*(M))+((2)*(r))))))))*(((a)*((r)*(((105)*((pow(r,12))*(((-2)*(M))+(r))))+(((81)*((pow(a,12))*(((2)*(M))+(r))))+(((10)*((pow(a,2))*((pow(r,9))*(((-50)*(pow(M,2)))+(((-76)*((M)*(r)))+((61)*(pow(r,2))))))))+(((pow(a,10))*(((-212)*((pow(M,2))*(r)))+(((760)*((M)*(pow(r,2))))+((514)*(pow(r,3))))))+(((pow(a,8))*((pow(r,2))*(((-256)*(pow(M,3)))+(((-1232)*((pow(M,2))*(r)))+(((1178)*((M)*(pow(r,2))))+((1351)*(pow(r,3))))))))+(((pow(a,4))*((pow(r,6))*(((-128)*(pow(M,3)))+(((-1808)*((pow(M,2))*(r)))+(((-746)*((M)*(pow(r,2))))+((1471)*(pow(r,3))))))))+((4)*((pow(a,6))*((pow(r,3))*(((16)*(pow(M,4)))+(((-96)*((pow(M,3))*(r)))+(((-582)*((pow(M,2))*(pow(r,2))))+(((96)*((M)*(pow(r,3))))+((471)*(pow(r,4))))))))))))))))))+((-15)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,4))+(((7)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((3)*(M))+((2)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_234(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[234] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.7500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-8))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((7)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((3)*(M))+((2)*(r))))))))*(((a)*((r)*(((105)*((pow(r,12))*(((-2)*(M))+(r))))+(((81)*((pow(a,12))*(((2)*(M))+(r))))+(((10)*((pow(a,2))*((pow(r,9))*(((-50)*(pow(M,2)))+(((-76)*((M)*(r)))+((61)*(pow(r,2))))))))+(((pow(a,10))*(((-212)*((pow(M,2))*(r)))+(((760)*((M)*(pow(r,2))))+((514)*(pow(r,3))))))+(((pow(a,8))*((pow(r,2))*(((-256)*(pow(M,3)))+(((-1232)*((pow(M,2))*(r)))+(((1178)*((M)*(pow(r,2))))+((1351)*(pow(r,3))))))))+(((pow(a,4))*((pow(r,6))*(((-128)*(pow(M,3)))+(((-1808)*((pow(M,2))*(r)))+(((-746)*((M)*(pow(r,2))))+((1471)*(pow(r,3))))))))+((4)*((pow(a,6))*((pow(r,3))*(((16)*(pow(M,4)))+(((-96)*((pow(M,3))*(r)))+(((-582)*((pow(M,2))*(pow(r,2))))+(((96)*((M)*(pow(r,3))))+((471)*(pow(r,4))))))))))))))))))+((-15)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,4))+(((7)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((3)*(M))+((2)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}
