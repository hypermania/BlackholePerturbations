
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_395(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[395] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00006103515625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.2581988897471611256786176933188266407221947803527727217725049177408988727957986022346191584572449012"))*((pow(a,-17))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((1699873)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((1021020)*((pow(a,2))*((pow(r,25))*(((29)*(M))+((185)*(r))))))+(((28)*((pow(a,26))*((r)*(((733261)*(M))+((1216567)*(r))))))+(((3003)*((pow(a,4))*((pow(r,22))*(((2016)*(pow(M,2)))+(((116304)*((M)*(r)))+((377309)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((660960)*(pow(M,2)))+(((12393136)*((M)*(r)))+((13886285)*(pow(r,2))))))))+(((10296)*((pow(a,6))*((pow(r,19))*(((-240)*(pow(M,3)))+(((6240)*((pow(M,2))*(r)))+(((183157)*((M)*(pow(r,2))))+((404014)*(pow(r,3)))))))))+(((8)*((pow(a,22))*((pow(r,3))*(((-1230480)*(pow(M,3)))+(((15504480)*((pow(M,2))*(r)))+(((187545651)*((M)*(pow(r,2))))+((182485598)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((10240)*(pow(M,4)))+(((-158720)*((pow(M,3))*(r)))+(((2153760)*((pow(M,2))*(pow(r,2))))+(((43090000)*((M)*(pow(r,3))))+((72960109)*(pow(r,4))))))))))+(((pow(a,20))*((pow(r,4))*(((7219200)*(pow(M,4)))+(((-64312320)*((pow(M,3))*(r)))+(((502544160)*((pow(M,2))*(pow(r,2))))+(((5210077360)*((M)*(pow(r,3))))+((4853488477)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,13))*(((-18432)*(pow(M,5)))+(((215040)*((pow(M,4))*(r)))+(((-1770880)*((pow(M,3))*(pow(r,2))))+(((16897920)*((pow(M,2))*(pow(r,3))))+(((260914185)*((M)*(pow(r,4))))+((363339431)*(pow(r,5)))))))))))+(((12)*((pow(a,18))*((pow(r,5))*(((-342016)*(pow(M,5)))+(((2754560)*((pow(M,4))*(r)))+(((-15401600)*((pow(M,3))*(pow(r,2))))+(((101296000)*((pow(M,2))*(pow(r,3))))+(((1012683175)*((M)*(pow(r,4))))+((953600375)*(pow(r,5)))))))))))+(((3)*((pow(a,12))*((pow(r,10))*(((196608)*(pow(M,6)))+(((-1867776)*((pow(M,5))*(r)))+(((12052480)*((pow(M,4))*(pow(r,2))))+(((-71910400)*((pow(M,3))*(pow(r,3))))+(((551047360)*((pow(M,2))*(pow(r,4))))+(((7067231136)*((M)*(pow(r,5))))+((8481013233)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((1507328)*(pow(M,6)))+(((-11894784)*((pow(M,5))*(r)))+(((62638080)*((pow(M,4))*(pow(r,2))))+(((-305843200)*((pow(M,3))*(pow(r,3))))+(((1943217600)*((pow(M,2))*(pow(r,4))))+(((20075270880)*((M)*(pow(r,5))))+((19850429165)*(pow(r,6)))))))))))+((16)*((pow(a,14))*((pow(r,7))*(((-16384)*(pow(M,7)))+(((131072)*((pow(M,6))*(r)))+(((-777216)*((pow(M,5))*(pow(r,2))))+(((3952640)*((pow(M,4))*(pow(r,3))))+(((-19960240)*((pow(M,3))*(pow(r,4))))+(((134018688)*((pow(M,2))*(pow(r,5))))+(((1506400133)*((M)*(pow(r,6))))+((1615109552)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),12))*((((3)*(pow(a,8)))+(((323)*(pow(r,8)))+(((12)*((pow(a,6))*((r)*(((16)*(M))+((9)*(r))))))+(((68)*((pow(a,2))*((pow(r,5))*(((16)*(M))+((11)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((448)*(pow(M,2)))+(((640)*((M)*(r)))+((265)*(pow(r,2))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_396(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[396] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.0004882812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.7745966692414833770358530799564799221665843410583181653175147532226966183873958067038574753717347036"))*((pow(a,-16))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*(((-1)*((a)*((r)*((((1699873)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((1021020)*((pow(a,2))*((pow(r,25))*(((29)*(M))+((185)*(r))))))+(((28)*((pow(a,26))*((r)*(((733261)*(M))+((1216567)*(r))))))+(((3003)*((pow(a,4))*((pow(r,22))*(((2016)*(pow(M,2)))+(((116304)*((M)*(r)))+((377309)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((660960)*(pow(M,2)))+(((12393136)*((M)*(r)))+((13886285)*(pow(r,2))))))))+(((10296)*((pow(a,6))*((pow(r,19))*(((-240)*(pow(M,3)))+(((6240)*((pow(M,2))*(r)))+(((183157)*((M)*(pow(r,2))))+((404014)*(pow(r,3)))))))))+(((8)*((pow(a,22))*((pow(r,3))*(((-1230480)*(pow(M,3)))+(((15504480)*((pow(M,2))*(r)))+(((187545651)*((M)*(pow(r,2))))+((182485598)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((10240)*(pow(M,4)))+(((-158720)*((pow(M,3))*(r)))+(((2153760)*((pow(M,2))*(pow(r,2))))+(((43090000)*((M)*(pow(r,3))))+((72960109)*(pow(r,4))))))))))+(((pow(a,20))*((pow(r,4))*(((7219200)*(pow(M,4)))+(((-64312320)*((pow(M,3))*(r)))+(((502544160)*((pow(M,2))*(pow(r,2))))+(((5210077360)*((M)*(pow(r,3))))+((4853488477)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,13))*(((-18432)*(pow(M,5)))+(((215040)*((pow(M,4))*(r)))+(((-1770880)*((pow(M,3))*(pow(r,2))))+(((16897920)*((pow(M,2))*(pow(r,3))))+(((260914185)*((M)*(pow(r,4))))+((363339431)*(pow(r,5)))))))))))+(((12)*((pow(a,18))*((pow(r,5))*(((-342016)*(pow(M,5)))+(((2754560)*((pow(M,4))*(r)))+(((-15401600)*((pow(M,3))*(pow(r,2))))+(((101296000)*((pow(M,2))*(pow(r,3))))+(((1012683175)*((M)*(pow(r,4))))+((953600375)*(pow(r,5)))))))))))+(((3)*((pow(a,12))*((pow(r,10))*(((196608)*(pow(M,6)))+(((-1867776)*((pow(M,5))*(r)))+(((12052480)*((pow(M,4))*(pow(r,2))))+(((-71910400)*((pow(M,3))*(pow(r,3))))+(((551047360)*((pow(M,2))*(pow(r,4))))+(((7067231136)*((M)*(pow(r,5))))+((8481013233)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((1507328)*(pow(M,6)))+(((-11894784)*((pow(M,5))*(r)))+(((62638080)*((pow(M,4))*(pow(r,2))))+(((-305843200)*((pow(M,3))*(pow(r,3))))+(((1943217600)*((pow(M,2))*(pow(r,4))))+(((20075270880)*((M)*(pow(r,5))))+((19850429165)*(pow(r,6)))))))))))+((16)*((pow(a,14))*((pow(r,7))*(((-16384)*(pow(M,7)))+(((131072)*((pow(M,6))*(r)))+(((-777216)*((pow(M,5))*(pow(r,2))))+(((3952640)*((pow(M,4))*(pow(r,3))))+(((-19960240)*((pow(M,3))*(pow(r,4))))+(((134018688)*((pow(M,2))*(pow(r,5))))+(((1506400133)*((M)*(pow(r,6))))+((1615109552)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*(expr[1]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),12))*((((3)*(pow(a,8)))+(((323)*(pow(r,8)))+(((12)*((pow(a,6))*((r)*(((16)*(M))+((9)*(r))))))+(((68)*((pow(a,2))*((pow(r,5))*(((16)*(M))+((11)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((448)*(pow(M,2)))+(((640)*((M)*(r)))+((265)*(pow(r,2))))))))))))*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_397(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[397] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.005078125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-13))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,4)))+(((-3)*((pow(a,2))*((r)*(((2)*(M))+((5)*(r))))))+((2)*((pow(r,2))*(((2)*(pow(M,2)))+(((41)*((M)*(r)))+((-21)*(pow(r,2)))))))))*(((a)*((r)*(((3465)*((pow(r,24))*(((-2)*(M))+(r))))+(((1280)*((pow(a,24))*(((2)*(M))+(r))))+(((1155)*((pow(a,2))*((pow(r,21))*(((-16)*(pow(M,2)))+(((-56)*((M)*(r)))+((35)*(pow(r,2))))))))+(((5)*((pow(a,22))*((r)*(((2348)*(pow(M,2)))+(((8492)*((M)*(r)))+((3915)*(pow(r,2))))))))+(((-231)*((pow(a,4))*((pow(r,18))*(((24)*(pow(M,3)))+(((764)*((pow(M,2))*(r)))+(((1118)*((M)*(pow(r,2))))+((-933)*(pow(r,3)))))))))+(((5)*((pow(a,20))*((pow(r,2))*(((-12488)*(pow(M,3)))+(((4748)*((pow(M,2))*(r)))+(((50254)*((M)*(pow(r,2))))+((25451)*(pow(r,3)))))))))+(((33)*((pow(a,6))*((pow(r,15))*(((96)*(pow(M,4)))+(((-1536)*((pow(M,3))*(r)))+(((-22788)*((pow(M,2))*(pow(r,2))))+(((-16708)*((M)*(pow(r,3))))+((21027)*(pow(r,4))))))))))+(((pow(a,18))*((pow(r,3))*(((93408)*(pow(M,4)))+(((-312704)*((pow(M,3))*(r)))+(((-174528)*((pow(M,2))*(pow(r,2))))+(((787304)*((M)*(pow(r,3))))+((479773)*(pow(r,4)))))))))+(((-22)*((pow(a,8))*((pow(r,12))*(((128)*(pow(M,5)))+(((-1184)*((pow(M,4))*(r)))+(((9392)*((pow(M,3))*(pow(r,2))))+(((85304)*((pow(M,2))*(pow(r,3))))+(((26518)*((M)*(pow(r,4))))+((-68239)*(pow(r,5)))))))))))+(((pow(a,16))*((pow(r,4))*(((-98048)*(pow(M,5)))+(((315328)*((pow(M,4))*(r)))+(((-685728)*((pow(M,3))*(pow(r,2))))+(((-964624)*((pow(M,2))*(pow(r,3))))+(((1486646)*((M)*(pow(r,4))))+((1186941)*(pow(r,5))))))))))+(((2)*((pow(a,14))*((pow(r,5))*(((30208)*(pow(M,6)))+(((-105472)*((pow(M,5))*(r)))+(((201040)*((pow(M,4))*(pow(r,2))))+(((-446592)*((pow(M,3))*(pow(r,3))))+(((-1140092)*((pow(M,2))*(pow(r,4))))+(((864836)*((M)*(pow(r,5))))+((1024219)*(pow(r,6))))))))))))+(((2)*((pow(a,10))*((pow(r,9))*(((1536)*(pow(M,6)))+(((-10240)*((pow(M,5))*(r)))+(((47120)*((pow(M,4))*(pow(r,2))))+(((-246720)*((pow(M,3))*(pow(r,3))))+(((-1510840)*((pow(M,2))*(pow(r,4))))+(((23120)*((M)*(pow(r,5))))+((1148325)*(pow(r,6))))))))))))+((2)*((pow(a,12))*((pow(r,6))*(((-8192)*(pow(M,7)))+(((31744)*((pow(M,6))*(r)))+(((-65280)*((pow(M,5))*(pow(r,2))))+(((125760)*((pow(M,4))*(pow(r,3))))+(((-394840)*((pow(M,3))*(pow(r,4))))+(((-1620540)*((pow(M,2))*(pow(r,5))))+(((548870)*((M)*(pow(r,6))))+((1271515)*(pow(r,7)))))))))))))))))))))))))))+(((a)*((((1280)*(pow(a,20)))+(((3465)*(pow(r,20)))+(((1155)*((pow(a,2))*((pow(r,17))*(((2)*(M))+((29)*(r))))))+(((5)*((pow(a,18))*((r)*(((1686)*(M))+((3403)*(r))))))+(((924)*((pow(a,4))*((pow(r,14))*(((-2)*(pow(M,2)))+(((22)*((M)*(r)))+((157)*(pow(r,2))))))))+(((5)*((pow(a,16))*((pow(r,2))*(((-2872)*(pow(M,2)))+(((10616)*((M)*(r)))+((18389)*(pow(r,2))))))))+(((132)*((pow(a,6))*((pow(r,11))*(((16)*(pow(M,3)))+(((-108)*((pow(M,2))*(r)))+(((600)*((M)*(pow(r,2))))+((2805)*(pow(r,3)))))))))+(((4)*((pow(a,14))*((pow(r,3))*(((4496)*(pow(M,3)))+(((-14796)*((pow(M,2))*(r)))+(((37252)*((M)*(pow(r,2))))+((69717)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((-128)*(pow(M,4)))+(((640)*((pow(M,3))*(r)))+(((-2172)*((pow(M,2))*(pow(r,2))))+(((8140)*((M)*(pow(r,3))))+((27985)*(pow(r,4))))))))))+(((4)*((pow(a,12))*((pow(r,4))*(((-3264)*(pow(M,4)))+(((11456)*((pow(M,3))*(r)))+(((-25026)*((pow(M,2))*(pow(r,2))))+(((61230)*((M)*(pow(r,3))))+((134315)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,5))*(((2048)*(pow(M,5)))+(((-7936)*((pow(M,4))*(r)))+(((19904)*((pow(M,3))*(pow(r,2))))+(((-45328)*((pow(M,2))*(pow(r,3))))+(((129230)*((M)*(pow(r,4))))+((347525)*(pow(r,5)))))))))))))))))))))*((pow(expr[0],2))*((pow(expr[1],2))*(pow(expr[2],2))))))+((-6930)*((r)*((pow((pow(a,2))+(pow(r,2)),10))*(((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_398(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[398] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.02031250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-11))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((1280)*(pow(a,20)))+(((3465)*(pow(r,20)))+(((1155)*((pow(a,2))*((pow(r,17))*(((2)*(M))+((29)*(r))))))+(((5)*((pow(a,18))*((r)*(((1686)*(M))+((3403)*(r))))))+(((924)*((pow(a,4))*((pow(r,14))*(((-2)*(pow(M,2)))+(((22)*((M)*(r)))+((157)*(pow(r,2))))))))+(((5)*((pow(a,16))*((pow(r,2))*(((-2872)*(pow(M,2)))+(((10616)*((M)*(r)))+((18389)*(pow(r,2))))))))+(((132)*((pow(a,6))*((pow(r,11))*(((16)*(pow(M,3)))+(((-108)*((pow(M,2))*(r)))+(((600)*((M)*(pow(r,2))))+((2805)*(pow(r,3)))))))))+(((4)*((pow(a,14))*((pow(r,3))*(((4496)*(pow(M,3)))+(((-14796)*((pow(M,2))*(r)))+(((37252)*((M)*(pow(r,2))))+((69717)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((-128)*(pow(M,4)))+(((640)*((pow(M,3))*(r)))+(((-2172)*((pow(M,2))*(pow(r,2))))+(((8140)*((M)*(pow(r,3))))+((27985)*(pow(r,4))))))))))+(((4)*((pow(a,12))*((pow(r,4))*(((-3264)*(pow(M,4)))+(((11456)*((pow(M,3))*(r)))+(((-25026)*((pow(M,2))*(pow(r,2))))+(((61230)*((M)*(pow(r,3))))+((134315)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,5))*(((2048)*(pow(M,5)))+(((-7936)*((pow(M,4))*(r)))+(((19904)*((pow(M,3))*(pow(r,2))))+(((-45328)*((pow(M,2))*(pow(r,3))))+(((129230)*((M)*(pow(r,4))))+((347525)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((r)*((pow((pow(a,2))+(pow(r,2)),10))*(((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_399(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[399] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.01015625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-13))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((1280)*(pow(a,20)))+(((3465)*(pow(r,20)))+(((1155)*((pow(a,2))*((pow(r,17))*(((2)*(M))+((29)*(r))))))+(((5)*((pow(a,18))*((r)*(((1686)*(M))+((3403)*(r))))))+(((924)*((pow(a,4))*((pow(r,14))*(((-2)*(pow(M,2)))+(((22)*((M)*(r)))+((157)*(pow(r,2))))))))+(((5)*((pow(a,16))*((pow(r,2))*(((-2872)*(pow(M,2)))+(((10616)*((M)*(r)))+((18389)*(pow(r,2))))))))+(((132)*((pow(a,6))*((pow(r,11))*(((16)*(pow(M,3)))+(((-108)*((pow(M,2))*(r)))+(((600)*((M)*(pow(r,2))))+((2805)*(pow(r,3)))))))))+(((4)*((pow(a,14))*((pow(r,3))*(((4496)*(pow(M,3)))+(((-14796)*((pow(M,2))*(r)))+(((37252)*((M)*(pow(r,2))))+((69717)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((-128)*(pow(M,4)))+(((640)*((pow(M,3))*(r)))+(((-2172)*((pow(M,2))*(pow(r,2))))+(((8140)*((M)*(pow(r,3))))+((27985)*(pow(r,4))))))))))+(((4)*((pow(a,12))*((pow(r,4))*(((-3264)*(pow(M,4)))+(((11456)*((pow(M,3))*(r)))+(((-25026)*((pow(M,2))*(pow(r,2))))+(((61230)*((M)*(pow(r,3))))+((134315)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,5))*(((2048)*(pow(M,5)))+(((-7936)*((pow(M,4))*(r)))+(((19904)*((pow(M,3))*(pow(r,2))))+(((-45328)*((pow(M,2))*(pow(r,3))))+(((129230)*((M)*(pow(r,4))))+((347525)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((r)*((pow((pow(a,2))+(pow(r,2)),10))*(((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))))*(expr[3])))))))))))))).cast<double>());
}

}
