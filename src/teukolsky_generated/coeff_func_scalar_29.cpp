
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_145(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[145] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.1250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("3.316624790355399849114932736670686683927088545589353597058682146116484642609043846708843399128290651"))*((pow(a,-7))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-4))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((32)*(pow(a,12)))+(((315)*(pow(r,12)))+(((315)*((pow(a,2))*((pow(r,9))*(((2)*(M))+((5)*(r))))))+(((pow(a,10))*((r)*(((494)*(M))+((439)*(r)))))+(((14)*((pow(a,4))*((pow(r,6))*(((8)*(pow(M,2)))+(((172)*((M)*(r)))+((227)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((160)*(pow(M,2)))+(((2136)*((M)*(r)))+((1755)*(pow(r,2)))))))+((pow(a,6))*(((-32)*((pow(M,3))*(pow(r,3))))+(((272)*((pow(M,2))*(pow(r,4))))+(((3420)*((M)*(pow(r,5))))+((3266)*(pow(r,6)))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((105)*((r)*((pow((pow(a,2))+(pow(r,2)),4))*((((3)*(pow(r,7)))+(((pow(a,6))*(((2)*(M))+(r)))+(((pow(a,2))*((pow(r,4))*(((10)*(M))+((7)*(r)))))+((pow(a,4))*((r)*(((8)*(pow(M,2)))+(((12)*((M)*(r)))+((5)*(pow(r,2))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_146(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[146] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.06250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("3.316624790355399849114932736670686683927088545589353597058682146116484642609043846708843399128290651"))*((pow(a,-9))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((32)*(pow(a,12)))+(((315)*(pow(r,12)))+(((315)*((pow(a,2))*((pow(r,9))*(((2)*(M))+((5)*(r))))))+(((pow(a,10))*((r)*(((494)*(M))+((439)*(r)))))+(((14)*((pow(a,4))*((pow(r,6))*(((8)*(pow(M,2)))+(((172)*((M)*(r)))+((227)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((160)*(pow(M,2)))+(((2136)*((M)*(r)))+((1755)*(pow(r,2)))))))+((pow(a,6))*(((-32)*((pow(M,3))*(pow(r,3))))+(((272)*((pow(M,2))*(pow(r,4))))+(((3420)*((M)*(pow(r,5))))+((3266)*(pow(r,6)))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((105)*((r)*((pow((pow(a,2))+(pow(r,2)),4))*((((3)*(pow(r,7)))+(((pow(a,6))*(((2)*(M))+(r)))+(((pow(a,2))*((pow(r,4))*(((10)*(M))+((7)*(r)))))+((pow(a,4))*((r)*(((8)*(pow(M,2)))+(((12)*((M)*(r)))+((5)*(pow(r,2))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_147(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[147] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("3.316624790355399849114932736670686683927088545589353597058682146116484642609043846708843399128290651"))*((pow(a,-8))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((32)*(pow(a,12)))+(((315)*(pow(r,12)))+(((315)*((pow(a,2))*((pow(r,9))*(((2)*(M))+((5)*(r))))))+(((pow(a,10))*((r)*(((494)*(M))+((439)*(r)))))+(((14)*((pow(a,4))*((pow(r,6))*(((8)*(pow(M,2)))+(((172)*((M)*(r)))+((227)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((160)*(pow(M,2)))+(((2136)*((M)*(r)))+((1755)*(pow(r,2)))))))+((pow(a,6))*(((-32)*((pow(M,3))*(pow(r,3))))+(((272)*((pow(M,2))*(pow(r,4))))+(((3420)*((M)*(pow(r,5))))+((3266)*(pow(r,6)))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((105)*((r)*((pow((pow(a,2))+(pow(r,2)),4))*((((3)*(pow(r,7)))+(((pow(a,6))*(((2)*(M))+(r)))+(((pow(a,2))*((pow(r,4))*(((10)*(M))+((7)*(r)))))+((pow(a,4))*((r)*(((8)*(pow(M,2)))+(((12)*((M)*(r)))+((5)*(pow(r,2))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_148(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[148] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.01562500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.4082482904638630163662140124509818986609912467761116880721154278751600629095525044233099055174400391"))*((pow(a,-11))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((-3)*((pow(a,2))*((r)*((M)+(r)))))+((pow(r,2))*(((2)*(pow(M,2)))+(((11)*((M)*(r)))+((-6)*(pow(r,2))))))))*((expr[2])*(((a)*((((1024)*(pow(a,16)))+(((45045)*(pow(r,16)))+(((1155)*((pow(a,2))*((pow(r,13))*(((122)*(M))+((251)*(r))))))+(((pow(a,14))*((r)*(((37654)*(M))+((27019)*(r)))))+(((21)*((pow(a,4))*((pow(r,10))*(((5256)*(pow(M,2)))+(((35004)*((M)*(r)))+((37889)*(pow(r,2))))))))+(((3)*((pow(a,12))*((pow(r,2))*(((31832)*(pow(M,2)))+(((107140)*((M)*(r)))+((61445)*(pow(r,2))))))))+(((9)*((pow(a,6))*((pow(r,7))*(((960)*(pow(M,3)))+(((47616)*((pow(M,2))*(r)))+(((174250)*((M)*(pow(r,2))))+((134161)*(pow(r,3)))))))))+(((pow(a,10))*((pow(r,3))*(((11200)*(pow(M,3)))+(((398784)*((pow(M,2))*(r)))+(((1050690)*((M)*(pow(r,2))))+((597355)*(pow(r,3))))))))+((pow(a,8))*((pow(r,4))*(((-1280)*(pow(M,4)))+(((19840)*((pow(M,3))*(r)))+(((621456)*((pow(M,2))*(pow(r,2))))+(((1741000)*((M)*(pow(r,3))))+((1095655)*(pow(r,4)))))))))))))))))*((((pow(r,4))*(((-2)*(M))+(r)))+(((pow(a,4))*(((2)*(M))+(r)))+(((pow(a,2))*(((-4)*((pow(M,2))*(r)))+((2)*(pow(r,3)))))+((pow(expr[0],2))*(pow(expr[1],2))))))*(expr[2]))))+((-630)*((r)*((pow((pow(a,2))+(pow(r,2)),4))*((((143)*(pow(r,11)))+(((15)*((pow(a,10))*(((2)*(M))+(r))))+(((11)*((pow(a,2))*((pow(r,8))*(((58)*(M))+((49)*(r))))))+(((5)*((pow(a,8))*((r)*(((64)*(pow(M,2)))+(((88)*((M)*(r)))+((31)*(pow(r,2))))))))+(((2)*((pow(a,4))*((pow(r,5))*(((448)*(pow(M,2)))+(((828)*((M)*(r)))+((387)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((192)*(pow(M,3)))+(((608)*((pow(M,2))*(r)))+(((714)*((M)*(pow(r,2))))+((259)*(pow(r,3))))))))))))))*((expr[0])*((expr[1])*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_149(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[149] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.03125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.4082482904638630163662140124509818986609912467761116880721154278751600629095525044233099055174400391"))*((pow(a,-9))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((expr[2])*(((((1024)*(pow(a,19)))+(((-45045)*((a)*((((2)*(M))+((-1)*(r)))*(pow(r,17)))))+(((pow(a,17))*((r)*(((35606)*(M))+((28043)*(r)))))+(((2310)*((pow(a,3))*((pow(r,14))*(((-122)*(pow(M,2)))+(((-190)*((M)*(r)))+((145)*(pow(r,2))))))))+(((2)*((pow(a,15))*((pow(r,2))*(((10094)*(pow(M,2)))+(((152518)*((M)*(r)))+((105677)*(pow(r,2))))))))+(((-42)*((pow(a,5))*((pow(r,11))*(((5256)*(pow(M,3)))+(((32376)*((pow(M,2))*(r)))+(((17032)*((M)*(pow(r,2))))+((-25847)*(pow(r,3)))))))))+(((2)*((pow(a,13))*((pow(r,3))*(((-89896)*(pow(M,3)))+(((-74280)*((pow(M,2))*(r)))+(((501720)*((M)*(pow(r,2))))+((390845)*(pow(r,3)))))))))+(((-6)*((pow(a,7))*((pow(r,8))*(((2880)*(pow(M,4)))+(((141408)*((pow(M,3))*(r)))+(((432930)*((pow(M,2))*(pow(r,2))))+(((18594)*((M)*(pow(r,3))))+((-333853)*(pow(r,4))))))))))+(((2)*((pow(a,11))*((pow(r,4))*(((-11840)*(pow(M,4)))+(((-383264)*((pow(M,3))*(r)))+(((-540570)*((pow(M,2))*(pow(r,2))))+(((798490)*((M)*(pow(r,3))))+((846505)*(pow(r,4))))))))))+((4)*((pow(a,9))*((pow(r,5))*(((640)*(pow(M,5)))+(((-10240)*((pow(M,4))*(r)))+(((-303608)*((pow(M,3))*(pow(r,2))))+(((-608000)*((pow(M,2))*(pow(r,3))))+(((279485)*((M)*(pow(r,4))))+((575776)*(pow(r,5))))))))))))))))))))*(expr[2]))+((-315)*((r)*((pow((pow(a,2))+(pow(r,2)),4))*((((15)*(pow(a,8)))+(((143)*(pow(r,8)))+(((20)*((pow(a,6))*((r)*(((8)*(M))+((7)*(r))))))+(((44)*((pow(a,2))*((pow(r,5))*(((8)*(M))+((9)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((96)*(pow(M,2)))+(((256)*((M)*(r)))+((189)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*(expr[3])))))))))))))).cast<double>());
}

}
