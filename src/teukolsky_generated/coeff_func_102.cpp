
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_510(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[510] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0004882812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-15))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,8)))+(((pow(a,6))*((((42)*(M))+((-1)*(r)))*(r)))+(((26)*((pow(r,6))*(((2)*(pow(M,2)))+(((55)*((M)*(r)))+((-28)*(pow(r,2)))))))+(((-2)*((pow(a,4))*((pow(r,2))*(((70)*(pow(M,2)))+(((335)*((M)*(r)))+((218)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((96)*(pow(M,3)))+(((2696)*((pow(M,2))*(r)))+(((118)*((M)*(pow(r,2))))+((-1161)*(pow(r,3))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((27255)*(pow(a,20)))+(((45045)*(pow(r,20)))+(((23100)*((pow(a,2))*((pow(r,17))*((M)+((19)*(r))))))+(((20)*((pow(a,18))*((r)*(((2779)*(M))+((15017)*(r))))))+(((231)*((pow(a,4))*((pow(r,14))*(((-64)*(pow(M,2)))+(((864)*((M)*(r)))+((8309)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((-60928)*(pow(M,2)))+(((383712)*((M)*(r)))+((1461353)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((24)*(pow(M,3)))+(((-204)*((pow(M,2))*(r)))+(((1439)*((M)*(pow(r,2))))+((9391)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((3480)*(pow(M,3)))+(((-17628)*((pow(M,2))*(r)))+(((73219)*((M)*(pow(r,2))))+((259759)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((-512)*(pow(M,4)))+(((3328)*((pow(M,3))*(r)))+(((-15168)*((pow(M,2))*(pow(r,2))))+(((75760)*((M)*(pow(r,3))))+((380635)*(pow(r,4))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((-15872)*(pow(M,4)))+(((79616)*((pow(M,3))*(r)))+(((-271968)*((pow(M,2))*(pow(r,2))))+(((1033840)*((M)*(pow(r,3))))+((3839075)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((-5376)*((pow(M,4))*(r)))+(((20512)*((pow(M,3))*(pow(r,2))))+(((-70448)*((pow(M,2))*(pow(r,3))))+(((288465)*((M)*(pow(r,4))))+((1206415)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((pow((pow(a,2))+(pow(r,2)),10))*(((pow(a,4))+(((13)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((12)*(M))+((7)*(r))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_511(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[511] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0009765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-13))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((13)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((12)*(M))+((7)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((27255)*(pow(a,20)))+(((45045)*(pow(r,20)))+(((23100)*((pow(a,2))*((pow(r,17))*((M)+((19)*(r))))))+(((20)*((pow(a,18))*((r)*(((2779)*(M))+((15017)*(r))))))+(((231)*((pow(a,4))*((pow(r,14))*(((-64)*(pow(M,2)))+(((864)*((M)*(r)))+((8309)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((-60928)*(pow(M,2)))+(((383712)*((M)*(r)))+((1461353)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((24)*(pow(M,3)))+(((-204)*((pow(M,2))*(r)))+(((1439)*((M)*(pow(r,2))))+((9391)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((3480)*(pow(M,3)))+(((-17628)*((pow(M,2))*(r)))+(((73219)*((M)*(pow(r,2))))+((259759)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((-512)*(pow(M,4)))+(((3328)*((pow(M,3))*(r)))+(((-15168)*((pow(M,2))*(pow(r,2))))+(((75760)*((M)*(pow(r,3))))+((380635)*(pow(r,4))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((-15872)*(pow(M,4)))+(((79616)*((pow(M,3))*(r)))+(((-271968)*((pow(M,2))*(pow(r,2))))+(((1033840)*((M)*(pow(r,3))))+((3839075)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((-5376)*((pow(M,4))*(r)))+(((20512)*((pow(M,3))*(pow(r,2))))+(((-70448)*((pow(M,2))*(pow(r,3))))+(((288465)*((M)*(pow(r,4))))+((1206415)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((pow((pow(a,2))+(pow(r,2)),10))*(((pow(a,4))+(((13)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((12)*(M))+((7)*(r))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_512(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[512] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0004882812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-15))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((pow(a,4))+(((13)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((12)*(M))+((7)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((27255)*(pow(a,20)))+(((45045)*(pow(r,20)))+(((23100)*((pow(a,2))*((pow(r,17))*((M)+((19)*(r))))))+(((20)*((pow(a,18))*((r)*(((2779)*(M))+((15017)*(r))))))+(((231)*((pow(a,4))*((pow(r,14))*(((-64)*(pow(M,2)))+(((864)*((M)*(r)))+((8309)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((-60928)*(pow(M,2)))+(((383712)*((M)*(r)))+((1461353)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((24)*(pow(M,3)))+(((-204)*((pow(M,2))*(r)))+(((1439)*((M)*(pow(r,2))))+((9391)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((3480)*(pow(M,3)))+(((-17628)*((pow(M,2))*(r)))+(((73219)*((M)*(pow(r,2))))+((259759)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((-512)*(pow(M,4)))+(((3328)*((pow(M,3))*(r)))+(((-15168)*((pow(M,2))*(pow(r,2))))+(((75760)*((M)*(pow(r,3))))+((380635)*(pow(r,4))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((-15872)*(pow(M,4)))+(((79616)*((pow(M,3))*(r)))+(((-271968)*((pow(M,2))*(pow(r,2))))+(((1033840)*((M)*(pow(r,3))))+((3839075)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((-5376)*((pow(M,4))*(r)))+(((20512)*((pow(M,3))*(pow(r,2))))+(((-70448)*((pow(M,2))*(pow(r,3))))+(((288465)*((M)*(pow(r,4))))+((1206415)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((pow((pow(a,2))+(pow(r,2)),10))*(((pow(a,4))+(((13)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((12)*(M))+((7)*(r))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_513(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[513] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.009765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-14))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((13)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((12)*(M))+((7)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((27255)*(pow(a,20)))+(((45045)*(pow(r,20)))+(((23100)*((pow(a,2))*((pow(r,17))*((M)+((19)*(r))))))+(((20)*((pow(a,18))*((r)*(((2779)*(M))+((15017)*(r))))))+(((231)*((pow(a,4))*((pow(r,14))*(((-64)*(pow(M,2)))+(((864)*((M)*(r)))+((8309)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((-60928)*(pow(M,2)))+(((383712)*((M)*(r)))+((1461353)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((24)*(pow(M,3)))+(((-204)*((pow(M,2))*(r)))+(((1439)*((M)*(pow(r,2))))+((9391)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((3480)*(pow(M,3)))+(((-17628)*((pow(M,2))*(r)))+(((73219)*((M)*(pow(r,2))))+((259759)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((-512)*(pow(M,4)))+(((3328)*((pow(M,3))*(r)))+(((-15168)*((pow(M,2))*(pow(r,2))))+(((75760)*((M)*(pow(r,3))))+((380635)*(pow(r,4))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((-15872)*(pow(M,4)))+(((79616)*((pow(M,3))*(r)))+(((-271968)*((pow(M,2))*(pow(r,2))))+(((1033840)*((M)*(pow(r,3))))+((3839075)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((-5376)*((pow(M,4))*(r)))+(((20512)*((pow(M,3))*(pow(r,2))))+(((-70448)*((pow(M,2))*(pow(r,3))))+(((288465)*((M)*(pow(r,4))))+((1206415)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((pow((pow(a,2))+(pow(r,2)),10))*(((pow(a,4))+(((13)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((12)*(M))+((7)*(r))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_514(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[514] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0002441406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.1444960929545185976717396882190295505485154628552263237045631513087932708444785830524452484865754193"))*((pow(a,-17))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,8)))+(((pow(a,6))*((((42)*(M))+((-1)*(r)))*(r)))+(((26)*((pow(r,6))*(((2)*(pow(M,2)))+(((55)*((M)*(r)))+((-28)*(pow(r,2)))))))+(((-2)*((pow(a,4))*((pow(r,2))*(((70)*(pow(M,2)))+(((335)*((M)*(r)))+((218)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((96)*(pow(M,3)))+(((2696)*((pow(M,2))*(r)))+(((118)*((M)*(pow(r,2))))+((-1161)*(pow(r,3))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((528395)*(pow(a,24)))+(((3828825)*(pow(r,24)))+(((150150)*((pow(a,2))*((pow(r,21))*(((50)*(M))+((281)*(r))))))+(((70)*((pow(a,22))*((r)*(((77794)*(M))+((129479)*(r))))))+(((120120)*((pow(a,4))*((pow(r,18))*(((12)*(pow(M,2)))+(((613)*((M)*(r)))+((1763)*(pow(r,2))))))))+(((56)*((pow(a,20))*((pow(r,2))*(((52956)*(pow(M,2)))+(((1025381)*((M)*(r)))+((1170824)*(pow(r,2))))))))+(((4290)*((pow(a,6))*((pow(r,15))*(((-128)*(pow(M,3)))+(((2880)*((pow(M,2))*(r)))+(((75630)*((M)*(pow(r,2))))+((149081)*(pow(r,3)))))))))+(((2)*((pow(a,18))*((pow(r,3))*(((-849024)*(pow(M,3)))+(((10588608)*((pow(M,2))*(r)))+(((135233694)*((M)*(pow(r,2))))+((136600967)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,12))*(((2048)*(pow(M,4)))+(((-27136)*((pow(M,3))*(r)))+(((325632)*((pow(M,2))*(pow(r,2))))+(((5913056)*((M)*(pow(r,3))))+((9040223)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((937984)*(pow(M,4)))+(((-8312320)*((pow(M,3))*(r)))+(((66612480)*((pow(M,2))*(pow(r,2))))+(((750509600)*((M)*(pow(r,3))))+((742326475)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,9))*(((-3072)*(pow(M,5)))+(((30208)*((pow(M,4))*(r)))+(((-222400)*((pow(M,3))*(pow(r,2))))+(((1939488)*((pow(M,2))*(pow(r,3))))+(((27747838)*((M)*(pow(r,4))))+((35376107)*(pow(r,5)))))))))))+(((4)*((pow(a,14))*((pow(r,5))*(((-89088)*(pow(M,5)))+(((715264)*((pow(M,4))*(r)))+(((-4245440)*((pow(M,3))*(pow(r,2))))+(((30144480)*((pow(M,2))*(pow(r,3))))+(((340047350)*((M)*(pow(r,4))))+((349698065)*(pow(r,5)))))))))))+((8)*((pow(a,12))*((pow(r,6))*(((8192)*(pow(M,6)))+(((-64512)*((pow(M,5))*(r)))+(((400128)*((pow(M,4))*(pow(r,2))))+(((-2325120)*((pow(M,3))*(pow(r,3))))+(((17172360)*((pow(M,2))*(pow(r,4))))+(((210477330)*((M)*(pow(r,5))))+((235698955)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),10))*(((pow(a,8))+(((85)*(pow(r,8)))+(((8)*((pow(a,6))*((r)*(((7)*(M))+((4)*(r))))))+(((40)*((pow(a,2))*((pow(r,5))*(((7)*(M))+((5)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((112)*(pow(M,2)))+(((168)*((M)*(r)))+((73)*(pow(r,2))))))))))))*(expr[3]))))))))))))))).cast<double>());
}
