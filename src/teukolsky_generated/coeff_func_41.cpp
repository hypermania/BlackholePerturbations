
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_205(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[205] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.06250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.612451549659709930473322646060754226226879261121714677587318477852774990205137640592030853343446129"))*((pow(a,-10))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((a)*((r)*(((3465)*((pow(r,20))*(((-2)*(M))+(r))))+(((2245)*((pow(a,20))*(((2)*(M))+(r))))+(((210)*((pow(a,2))*((pow(r,17))*(((-82)*(pow(M,2)))+(((-248)*((M)*(r)))+((161)*(pow(r,2))))))))+(((10)*((pow(a,18))*((r)*(((-194)*(pow(M,2)))+(((4296)*((M)*(r)))+((2421)*(pow(r,2))))))))+(((-21)*((pow(a,4))*((pow(r,14))*(((224)*(pow(M,3)))+(((6224)*((pow(M,2))*(r)))+(((7638)*((M)*(pow(r,2))))+((-7053)*(pow(r,3)))))))))+(((pow(a,16))*((pow(r,2))*(((-19936)*(pow(M,3)))+(((-45424)*((pow(M,2))*(r)))+(((169638)*((M)*(pow(r,2))))+((116133)*(pow(r,3))))))))+(((24)*((pow(a,6))*((pow(r,11))*(((104)*(pow(M,4)))+(((-1384)*((pow(M,3))*(r)))+(((-17876)*((pow(M,2))*(pow(r,2))))+(((-10048)*((M)*(pow(r,3))))+((15977)*(pow(r,4))))))))))+(((8)*((pow(a,14))*((pow(r,3))*(((1912)*(pow(M,4)))+(((-11128)*((pow(M,3))*(r)))+(((-30088)*((pow(M,2))*(pow(r,2))))+(((44624)*((M)*(pow(r,3))))+((40891)*(pow(r,4))))))))))+(((-2)*((pow(a,8))*((pow(r,8))*(((1024)*(pow(M,5)))+(((-7552)*((pow(M,4))*(r)))+(((50320)*((pow(M,3))*(pow(r,2))))+(((395560)*((pow(M,2))*(pow(r,3))))+(((58490)*((M)*(pow(r,4))))+((-324665)*(pow(r,5)))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((-4096)*(pow(M,5)))+(((20352)*((pow(M,4))*(r)))+(((-83280)*((pow(M,3))*(pow(r,2))))+(((-304600)*((pow(M,2))*(pow(r,3))))+(((206130)*((M)*(pow(r,4))))+((300165)*(pow(r,5)))))))))))+((4)*((pow(a,10))*((pow(r,5))*(((512)*(pow(M,6)))+(((-2560)*((pow(M,5))*(r)))+(((9504)*((pow(M,4))*(pow(r,2))))+(((-42400)*((pow(M,3))*(pow(r,3))))+(((-221890)*((pow(M,2))*(pow(r,4))))+(((48840)*((M)*(pow(r,5))))+((187755)*(pow(r,6))))))))))))))))))))))))+((-315)*((pow((pow(a,2))+(pow(r,2)),8))*(((pow(a,4))+(((11)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((5)*(M))+((3)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_206(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[206] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.001953125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.5559594491425692918556411711519360281021923504648278133485961923502843354175494660168202602962809760"))*((pow(a,-13))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((-1)*((pow(a,2))*((r)*(((3)*(M))+(r)))))+((pow(r,2))*(((2)*(pow(M,2)))+(((19)*((M)*(r)))+((-10)*(pow(r,2))))))))*(((a)*((r)*(((-225225)*((((2)*(M))+((-1)*(r)))*(pow(r,24))))+(((37495)*((pow(a,24))*(((2)*(M))+(r))))+(((30030)*((pow(a,2))*((pow(r,21))*(((-58)*(pow(M,2)))+(((-122)*((M)*(r)))+((83)*(pow(r,2))))))))+(((10)*((pow(a,22))*((r)*(((49118)*(pow(M,2)))+(((139106)*((M)*(r)))+((61023)*(pow(r,2))))))))+(((-4620)*((pow(a,4))*((pow(r,18))*(((396)*(pow(M,3)))+(((3176)*((pow(M,2))*(r)))+(((2585)*((M)*(pow(r,2))))+((-2721)*(pow(r,3)))))))))+(((4)*((pow(a,20))*((pow(r,2))*(((-253604)*(pow(M,3)))+(((847544)*((pow(M,2))*(r)))+(((2397877)*((M)*(pow(r,2))))+((1067837)*(pow(r,3)))))))))+(((-66)*((pow(a,6))*((pow(r,15))*(((3712)*(pow(M,4)))+(((214336)*((pow(M,3))*(r)))+(((818898)*((pow(M,2))*(pow(r,2))))+(((256094)*((M)*(pow(r,3))))+((-578423)*(pow(r,4))))))))))+(((2)*((pow(a,18))*((pow(r,3))*(((-326016)*(pow(M,4)))+(((-4709696)*((pow(M,3))*(r)))+(((3715218)*((pow(M,2))*(pow(r,2))))+(((17789282)*((M)*(pow(r,3))))+((8696233)*(pow(r,4))))))))))+(((11)*((pow(a,8))*((pow(r,12))*(((7168)*(pow(M,5)))+(((-151552)*((pow(M,4))*(r)))+(((-4327232)*((pow(M,3))*(pow(r,2))))+(((-10295744)*((pow(M,2))*(pow(r,3))))+(((345014)*((M)*(pow(r,4))))+((7060231)*(pow(r,5)))))))))))+(((pow(a,16))*((pow(r,4))*(((275456)*(pow(M,5)))+(((-3223552)*((pow(M,4))*(r)))+(((-36843456)*((pow(M,3))*(pow(r,2))))+(((-3316928)*((pow(M,2))*(pow(r,3))))+(((81080146)*((M)*(pow(r,4))))+((46450803)*(pow(r,5))))))))))+(((4)*((pow(a,14))*((pow(r,5))*(((-23552)*(pow(M,6)))+(((204800)*((pow(M,5))*(r)))+(((-1672640)*((pow(M,4))*(pow(r,2))))+(((-20074080)*((pow(M,3))*(pow(r,3))))+(((-12433010)*((pow(M,2))*(pow(r,4))))+(((29779610)*((M)*(pow(r,5))))+((21589855)*(pow(r,6))))))))))))+(((4)*((pow(a,10))*((pow(r,9))*(((-9216)*(pow(M,6)))+(((106496)*((pow(M,5))*(r)))+(((-1199680)*((pow(M,4))*(pow(r,2))))+(((-22722144)*((pow(M,3))*(pow(r,3))))+(((-36565006)*((pow(M,2))*(pow(r,4))))+(((14493722)*((M)*(pow(r,5))))+((27836577)*(pow(r,6))))))))))))+((8)*((pow(a,12))*((pow(r,6))*(((2048)*(pow(M,7)))+(((-16384)*((pow(M,6))*(r)))+(((111360)*((pow(M,5))*(pow(r,2))))+(((-936960)*((pow(M,4))*(pow(r,3))))+(((-13432940)*((pow(M,3))*(pow(r,4))))+(((-14500800)*((pow(M,2))*(pow(r,5))))+(((13918555)*((M)*(pow(r,6))))+((14394800)*(pow(r,7)))))))))))))))))))))))))))+((-3465)*((pow((pow(a,2))+(pow(r,2)),8))*(((pow(a,8))+(((65)*(pow(r,8)))+(((52)*((pow(a,2))*((pow(r,5))*(((4)*(M))+((3)*(r))))))+(((4)*((pow(a,6))*((r)*(((12)*(M))+((7)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((80)*(pow(M,2)))+(((128)*((M)*(r)))+((59)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_207(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[207] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.001953125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.5559594491425692918556411711519360281021923504648278133485961923502843354175494660168202602962809760"))*((pow(a,-11))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((a)*((r)*(((225225)*((((2)*(M))+((-1)*(r)))*(pow(r,24))))+(((-37495)*((pow(a,24))*(((2)*(M))+(r))))+(((30030)*((pow(a,2))*((pow(r,21))*(((58)*(pow(M,2)))+(((122)*((M)*(r)))+((-83)*(pow(r,2))))))))+(((-10)*((pow(a,22))*((r)*(((49118)*(pow(M,2)))+(((139106)*((M)*(r)))+((61023)*(pow(r,2))))))))+(((4620)*((pow(a,4))*((pow(r,18))*(((396)*(pow(M,3)))+(((3176)*((pow(M,2))*(r)))+(((2585)*((M)*(pow(r,2))))+((-2721)*(pow(r,3)))))))))+(((-4)*((pow(a,20))*((pow(r,2))*(((-253604)*(pow(M,3)))+(((847544)*((pow(M,2))*(r)))+(((2397877)*((M)*(pow(r,2))))+((1067837)*(pow(r,3)))))))))+(((66)*((pow(a,6))*((pow(r,15))*(((3712)*(pow(M,4)))+(((214336)*((pow(M,3))*(r)))+(((818898)*((pow(M,2))*(pow(r,2))))+(((256094)*((M)*(pow(r,3))))+((-578423)*(pow(r,4))))))))))+(((-2)*((pow(a,18))*((pow(r,3))*(((-326016)*(pow(M,4)))+(((-4709696)*((pow(M,3))*(r)))+(((3715218)*((pow(M,2))*(pow(r,2))))+(((17789282)*((M)*(pow(r,3))))+((8696233)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((-275456)*(pow(M,5)))+(((3223552)*((pow(M,4))*(r)))+(((36843456)*((pow(M,3))*(pow(r,2))))+(((3316928)*((pow(M,2))*(pow(r,3))))+(((-81080146)*((M)*(pow(r,4))))+((-46450803)*(pow(r,5))))))))))+(((-11)*((pow(a,8))*((pow(r,12))*(((7168)*(pow(M,5)))+(((-151552)*((pow(M,4))*(r)))+(((-4327232)*((pow(M,3))*(pow(r,2))))+(((-10295744)*((pow(M,2))*(pow(r,3))))+(((345014)*((M)*(pow(r,4))))+((7060231)*(pow(r,5)))))))))))+(((4)*((pow(a,10))*((pow(r,9))*(((9216)*(pow(M,6)))+(((-106496)*((pow(M,5))*(r)))+(((1199680)*((pow(M,4))*(pow(r,2))))+(((22722144)*((pow(M,3))*(pow(r,3))))+(((36565006)*((pow(M,2))*(pow(r,4))))+(((-14493722)*((M)*(pow(r,5))))+((-27836577)*(pow(r,6))))))))))))+(((4)*((pow(a,14))*((pow(r,5))*(((23552)*(pow(M,6)))+(((-204800)*((pow(M,5))*(r)))+(((1672640)*((pow(M,4))*(pow(r,2))))+(((20074080)*((pow(M,3))*(pow(r,3))))+(((12433010)*((pow(M,2))*(pow(r,4))))+(((-29779610)*((M)*(pow(r,5))))+((-21589855)*(pow(r,6))))))))))))+((-8)*((pow(a,12))*((pow(r,6))*(((2048)*(pow(M,7)))+(((-16384)*((pow(M,6))*(r)))+(((111360)*((pow(M,5))*(pow(r,2))))+(((-936960)*((pow(M,4))*(pow(r,3))))+(((-13432940)*((pow(M,3))*(pow(r,4))))+(((-14500800)*((pow(M,2))*(pow(r,5))))+(((13918555)*((M)*(pow(r,6))))+((14394800)*(pow(r,7)))))))))))))))))))))))))))+((3465)*((pow((pow(a,2))+(pow(r,2)),8))*(((pow(a,8))+(((65)*(pow(r,8)))+(((52)*((pow(a,2))*((pow(r,5))*(((4)*(M))+((3)*(r))))))+(((4)*((pow(a,6))*((r)*(((12)*(M))+((7)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((80)*(pow(M,2)))+(((128)*((M)*(r)))+((59)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_208(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[208] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0009765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.5559594491425692918556411711519360281021923504648278133485961923502843354175494660168202602962809760"))*((pow(a,-13))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((a)*((r)*(((-225225)*((((2)*(M))+((-1)*(r)))*(pow(r,24))))+(((37495)*((pow(a,24))*(((2)*(M))+(r))))+(((30030)*((pow(a,2))*((pow(r,21))*(((-58)*(pow(M,2)))+(((-122)*((M)*(r)))+((83)*(pow(r,2))))))))+(((10)*((pow(a,22))*((r)*(((49118)*(pow(M,2)))+(((139106)*((M)*(r)))+((61023)*(pow(r,2))))))))+(((-4620)*((pow(a,4))*((pow(r,18))*(((396)*(pow(M,3)))+(((3176)*((pow(M,2))*(r)))+(((2585)*((M)*(pow(r,2))))+((-2721)*(pow(r,3)))))))))+(((4)*((pow(a,20))*((pow(r,2))*(((-253604)*(pow(M,3)))+(((847544)*((pow(M,2))*(r)))+(((2397877)*((M)*(pow(r,2))))+((1067837)*(pow(r,3)))))))))+(((-66)*((pow(a,6))*((pow(r,15))*(((3712)*(pow(M,4)))+(((214336)*((pow(M,3))*(r)))+(((818898)*((pow(M,2))*(pow(r,2))))+(((256094)*((M)*(pow(r,3))))+((-578423)*(pow(r,4))))))))))+(((2)*((pow(a,18))*((pow(r,3))*(((-326016)*(pow(M,4)))+(((-4709696)*((pow(M,3))*(r)))+(((3715218)*((pow(M,2))*(pow(r,2))))+(((17789282)*((M)*(pow(r,3))))+((8696233)*(pow(r,4))))))))))+(((11)*((pow(a,8))*((pow(r,12))*(((7168)*(pow(M,5)))+(((-151552)*((pow(M,4))*(r)))+(((-4327232)*((pow(M,3))*(pow(r,2))))+(((-10295744)*((pow(M,2))*(pow(r,3))))+(((345014)*((M)*(pow(r,4))))+((7060231)*(pow(r,5)))))))))))+(((pow(a,16))*((pow(r,4))*(((275456)*(pow(M,5)))+(((-3223552)*((pow(M,4))*(r)))+(((-36843456)*((pow(M,3))*(pow(r,2))))+(((-3316928)*((pow(M,2))*(pow(r,3))))+(((81080146)*((M)*(pow(r,4))))+((46450803)*(pow(r,5))))))))))+(((4)*((pow(a,14))*((pow(r,5))*(((-23552)*(pow(M,6)))+(((204800)*((pow(M,5))*(r)))+(((-1672640)*((pow(M,4))*(pow(r,2))))+(((-20074080)*((pow(M,3))*(pow(r,3))))+(((-12433010)*((pow(M,2))*(pow(r,4))))+(((29779610)*((M)*(pow(r,5))))+((21589855)*(pow(r,6))))))))))))+(((4)*((pow(a,10))*((pow(r,9))*(((-9216)*(pow(M,6)))+(((106496)*((pow(M,5))*(r)))+(((-1199680)*((pow(M,4))*(pow(r,2))))+(((-22722144)*((pow(M,3))*(pow(r,3))))+(((-36565006)*((pow(M,2))*(pow(r,4))))+(((14493722)*((M)*(pow(r,5))))+((27836577)*(pow(r,6))))))))))))+((8)*((pow(a,12))*((pow(r,6))*(((2048)*(pow(M,7)))+(((-16384)*((pow(M,6))*(r)))+(((111360)*((pow(M,5))*(pow(r,2))))+(((-936960)*((pow(M,4))*(pow(r,3))))+(((-13432940)*((pow(M,3))*(pow(r,4))))+(((-14500800)*((pow(M,2))*(pow(r,5))))+(((13918555)*((M)*(pow(r,6))))+((14394800)*(pow(r,7)))))))))))))))))))))))))))+((-3465)*((pow((pow(a,2))+(pow(r,2)),8))*(((pow(a,8))+(((65)*(pow(r,8)))+(((52)*((pow(a,2))*((pow(r,5))*(((4)*(M))+((3)*(r))))))+(((4)*((pow(a,6))*((r)*(((12)*(M))+((7)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((80)*(pow(M,2)))+(((128)*((M)*(r)))+((59)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_209(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[209] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.01562500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.5559594491425692918556411711519360281021923504648278133485961923502843354175494660168202602962809760"))*((pow(a,-12))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((a)*((r)*(((-225225)*((((2)*(M))+((-1)*(r)))*(pow(r,24))))+(((37495)*((pow(a,24))*(((2)*(M))+(r))))+(((30030)*((pow(a,2))*((pow(r,21))*(((-58)*(pow(M,2)))+(((-122)*((M)*(r)))+((83)*(pow(r,2))))))))+(((10)*((pow(a,22))*((r)*(((49118)*(pow(M,2)))+(((139106)*((M)*(r)))+((61023)*(pow(r,2))))))))+(((-4620)*((pow(a,4))*((pow(r,18))*(((396)*(pow(M,3)))+(((3176)*((pow(M,2))*(r)))+(((2585)*((M)*(pow(r,2))))+((-2721)*(pow(r,3)))))))))+(((4)*((pow(a,20))*((pow(r,2))*(((-253604)*(pow(M,3)))+(((847544)*((pow(M,2))*(r)))+(((2397877)*((M)*(pow(r,2))))+((1067837)*(pow(r,3)))))))))+(((-66)*((pow(a,6))*((pow(r,15))*(((3712)*(pow(M,4)))+(((214336)*((pow(M,3))*(r)))+(((818898)*((pow(M,2))*(pow(r,2))))+(((256094)*((M)*(pow(r,3))))+((-578423)*(pow(r,4))))))))))+(((2)*((pow(a,18))*((pow(r,3))*(((-326016)*(pow(M,4)))+(((-4709696)*((pow(M,3))*(r)))+(((3715218)*((pow(M,2))*(pow(r,2))))+(((17789282)*((M)*(pow(r,3))))+((8696233)*(pow(r,4))))))))))+(((11)*((pow(a,8))*((pow(r,12))*(((7168)*(pow(M,5)))+(((-151552)*((pow(M,4))*(r)))+(((-4327232)*((pow(M,3))*(pow(r,2))))+(((-10295744)*((pow(M,2))*(pow(r,3))))+(((345014)*((M)*(pow(r,4))))+((7060231)*(pow(r,5)))))))))))+(((pow(a,16))*((pow(r,4))*(((275456)*(pow(M,5)))+(((-3223552)*((pow(M,4))*(r)))+(((-36843456)*((pow(M,3))*(pow(r,2))))+(((-3316928)*((pow(M,2))*(pow(r,3))))+(((81080146)*((M)*(pow(r,4))))+((46450803)*(pow(r,5))))))))))+(((4)*((pow(a,14))*((pow(r,5))*(((-23552)*(pow(M,6)))+(((204800)*((pow(M,5))*(r)))+(((-1672640)*((pow(M,4))*(pow(r,2))))+(((-20074080)*((pow(M,3))*(pow(r,3))))+(((-12433010)*((pow(M,2))*(pow(r,4))))+(((29779610)*((M)*(pow(r,5))))+((21589855)*(pow(r,6))))))))))))+(((4)*((pow(a,10))*((pow(r,9))*(((-9216)*(pow(M,6)))+(((106496)*((pow(M,5))*(r)))+(((-1199680)*((pow(M,4))*(pow(r,2))))+(((-22722144)*((pow(M,3))*(pow(r,3))))+(((-36565006)*((pow(M,2))*(pow(r,4))))+(((14493722)*((M)*(pow(r,5))))+((27836577)*(pow(r,6))))))))))))+((8)*((pow(a,12))*((pow(r,6))*(((2048)*(pow(M,7)))+(((-16384)*((pow(M,6))*(r)))+(((111360)*((pow(M,5))*(pow(r,2))))+(((-936960)*((pow(M,4))*(pow(r,3))))+(((-13432940)*((pow(M,3))*(pow(r,4))))+(((-14500800)*((pow(M,2))*(pow(r,5))))+(((13918555)*((M)*(pow(r,6))))+((14394800)*(pow(r,7)))))))))))))))))))))))))))+((-3465)*((pow((pow(a,2))+(pow(r,2)),8))*(((pow(a,8))+(((65)*(pow(r,8)))+(((52)*((pow(a,2))*((pow(r,5))*(((4)*(M))+((3)*(r))))))+(((4)*((pow(a,6))*((r)*(((12)*(M))+((7)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((80)*(pow(M,2)))+(((128)*((M)*(r)))+((59)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}
