
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_755(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[755] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0000005086263020833333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((pow(a,-21))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-11))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((-1)*((pow(a,2))*((r)*(((3)*(M))+((4)*(r))))))+((pow(r,2))*(((2)*(pow(M,2)))+(((109)*((M)*(r)))+((-55)*(pow(r,2))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((68025825)*(pow(a,36)))+(((-2100)*((pow(a,34))*((((218953)*(M))+((-473602)*(r)))*(r))))+(((-19399380)*((pow(a,2))*(((M)+((-14)*(r)))*(pow(r,33)))))+(((14549535)*(pow(r,36)))+(((969969)*((pow(a,4))*((pow(r,30))*(((32)*(pow(M,2)))+(((-352)*((M)*(r)))+((2473)*(pow(r,2))))))))+(((105)*((pow(a,32))*((pow(r,2))*(((21305056)*(pow(M,2)))+(((-48759904)*((M)*(r)))+((67227599)*(pow(r,2))))))))+(((2217072)*((pow(a,6))*((pow(r,27))*(((-24)*(pow(M,3)))+(((232)*((pow(M,2))*(r)))+(((-1278)*((M)*(pow(r,2))))+((6009)*(pow(r,3)))))))))+(((240)*((pow(a,30))*((pow(r,3))*(((-31207128)*(pow(M,3)))+(((83682776)*((pow(M,2))*(r)))+(((-113491566)*((M)*(pow(r,2))))+((134393727)*(pow(r,3)))))))))+(((184756)*((pow(a,8))*((pow(r,24))*(((512)*(pow(M,4)))+(((-4480)*((pow(M,3))*(r)))+(((21672)*((pow(M,2))*(pow(r,2))))+(((-79720)*((M)*(pow(r,3))))+((282287)*(pow(r,4))))))))))+(((20)*((pow(a,28))*((pow(r,4))*(((875654656)*(pow(M,4)))+(((-2742517120)*((pow(M,3))*(r)))+(((4189504536)*((pow(M,2))*(pow(r,2))))+(((-4624295080)*((M)*(pow(r,3))))+((5299443481)*(pow(r,4))))))))))+(((67184)*((pow(a,10))*((pow(r,21))*(((-2560)*(pow(M,5)))+(((20480)*((pow(M,4))*(r)))+(((-89648)*((pow(M,3))*(pow(r,2))))+(((289376)*((pow(M,2))*(pow(r,3))))+(((-799741)*((M)*(pow(r,4))))+((2275507)*(pow(r,5)))))))))))+(((80)*((pow(a,26))*((pow(r,5))*(((-358665728)*(pow(M,5)))+(((1292472320)*((pow(M,4))*(r)))+(((-2259575056)*((pow(M,3))*(pow(r,2))))+(((2716902368)*((pow(M,2))*(pow(r,3))))+(((-2816170127)*((M)*(pow(r,4))))+((3312386047)*(pow(r,5)))))))))))+(((1292)*((pow(a,12))*((pow(r,18))*(((245760)*(pow(M,6)))+(((-1802240)*((pow(M,5))*(r)))+(((7211520)*((pow(M,4))*(pow(r,2))))+(((-21056640)*((pow(M,3))*(pow(r,3))))+(((51025144)*((pow(M,2))*(pow(r,4))))+(((-113022216)*((M)*(pow(r,5))))+((269257851)*(pow(r,6))))))))))))+(((20)*((pow(a,24))*((pow(r,6))*(((1619902464)*(pow(M,6)))+(((-6617595904)*((pow(M,5))*(r)))+(((13199178240)*((pow(M,4))*(pow(r,2))))+(((-17881622400)*((pow(M,3))*(pow(r,3))))+(((19790955064)*((pow(M,2))*(pow(r,4))))+(((-20903520312)*((M)*(pow(r,5))))+((26026662339)*(pow(r,6))))))))))))+(((5168)*((pow(a,14))*((pow(r,15))*(((-114688)*(pow(M,7)))+(((770048)*((pow(M,6))*(r)))+(((-2824192)*((pow(M,5))*(pow(r,2))))+(((7536640)*((pow(M,4))*(pow(r,3))))+(((-16514120)*((pow(M,3))*(pow(r,4))))+(((32046056)*((pow(M,2))*(pow(r,5))))+(((-59268906)*((M)*(pow(r,6))))+((121647969)*(pow(r,7)))))))))))))+(((16)*((pow(a,22))*((pow(r,7))*(((-1505050624)*(pow(M,7)))+(((6881591296)*((pow(M,6))*(r)))+(((-15592278016)*((pow(M,5))*(pow(r,2))))+(((24110366720)*((pow(M,4))*(pow(r,3))))+(((-29987393240)*((pow(M,3))*(pow(r,4))))+(((33775561288)*((pow(M,2))*(pow(r,5))))+(((-38151524862)*((M)*(pow(r,6))))+((51179924637)*(pow(r,7)))))))))))))+(((38)*((pow(a,16))*((pow(r,12))*(((29360128)*(pow(M,8)))+(((-179830784)*((pow(M,7))*(r)))+(((603815936)*((pow(M,6))*(pow(r,2))))+(((-1476722688)*((pow(M,5))*(pow(r,3))))+(((2956728320)*((pow(M,4))*(pow(r,4))))+(((-5186157056)*((pow(M,3))*(pow(r,5))))+(((8395414768)*((pow(M,2))*(pow(r,6))))+(((-13337055792)*((M)*(pow(r,7))))+((24085521891)*(pow(r,8))))))))))))))+(((2)*((pow(a,20))*((pow(r,8))*(((5314183168)*(pow(M,8)))+(((-26904887296)*((pow(M,7))*(r)))+(((69477564416)*((pow(M,6))*(pow(r,2))))+(((-124946153472)*((pow(M,5))*(pow(r,3))))+(((181492398080)*((pow(M,4))*(pow(r,4))))+(((-234088500736)*((pow(M,3))*(pow(r,5))))+(((286809823792)*((pow(M,2))*(pow(r,6))))+(((-356443953552)*((M)*(pow(r,7))))+((521625661479)*(pow(r,8))))))))))))))+((8)*((pow(a,18))*((pow(r,9))*(((-264241152)*(pow(M,9)))+(((1468006400)*((pow(M,8))*(r)))+(((-4496228352)*((pow(M,7))*(pow(r,2))))+(((10066329600)*((pow(M,6))*(pow(r,3))))+(((-18468882432)*((pow(M,5))*(pow(r,4))))+(((29595009024)*((pow(M,4))*(pow(r,5))))+(((-43286443200)*((pow(M,3))*(pow(r,6))))+(((60129542144)*((pow(M,2))*(pow(r,7))))+(((-83770862175)*((M)*(pow(r,8))))+((135291469824)*(pow(r,9)))))))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((14549535)*((pow((pow(a,2))+(pow(r,2)),20))*(expr[3]))))))))))))).cast<double>());
}

void compute_coeffs_scalar_756(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[756] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0000005086263020833333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((pow(a,-19))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((68025825)*(pow(a,36)))+(((-2100)*((pow(a,34))*((((218953)*(M))+((-473602)*(r)))*(r))))+(((-19399380)*((pow(a,2))*(((M)+((-14)*(r)))*(pow(r,33)))))+(((14549535)*(pow(r,36)))+(((969969)*((pow(a,4))*((pow(r,30))*(((32)*(pow(M,2)))+(((-352)*((M)*(r)))+((2473)*(pow(r,2))))))))+(((105)*((pow(a,32))*((pow(r,2))*(((21305056)*(pow(M,2)))+(((-48759904)*((M)*(r)))+((67227599)*(pow(r,2))))))))+(((2217072)*((pow(a,6))*((pow(r,27))*(((-24)*(pow(M,3)))+(((232)*((pow(M,2))*(r)))+(((-1278)*((M)*(pow(r,2))))+((6009)*(pow(r,3)))))))))+(((240)*((pow(a,30))*((pow(r,3))*(((-31207128)*(pow(M,3)))+(((83682776)*((pow(M,2))*(r)))+(((-113491566)*((M)*(pow(r,2))))+((134393727)*(pow(r,3)))))))))+(((184756)*((pow(a,8))*((pow(r,24))*(((512)*(pow(M,4)))+(((-4480)*((pow(M,3))*(r)))+(((21672)*((pow(M,2))*(pow(r,2))))+(((-79720)*((M)*(pow(r,3))))+((282287)*(pow(r,4))))))))))+(((20)*((pow(a,28))*((pow(r,4))*(((875654656)*(pow(M,4)))+(((-2742517120)*((pow(M,3))*(r)))+(((4189504536)*((pow(M,2))*(pow(r,2))))+(((-4624295080)*((M)*(pow(r,3))))+((5299443481)*(pow(r,4))))))))))+(((67184)*((pow(a,10))*((pow(r,21))*(((-2560)*(pow(M,5)))+(((20480)*((pow(M,4))*(r)))+(((-89648)*((pow(M,3))*(pow(r,2))))+(((289376)*((pow(M,2))*(pow(r,3))))+(((-799741)*((M)*(pow(r,4))))+((2275507)*(pow(r,5)))))))))))+(((80)*((pow(a,26))*((pow(r,5))*(((-358665728)*(pow(M,5)))+(((1292472320)*((pow(M,4))*(r)))+(((-2259575056)*((pow(M,3))*(pow(r,2))))+(((2716902368)*((pow(M,2))*(pow(r,3))))+(((-2816170127)*((M)*(pow(r,4))))+((3312386047)*(pow(r,5)))))))))))+(((1292)*((pow(a,12))*((pow(r,18))*(((245760)*(pow(M,6)))+(((-1802240)*((pow(M,5))*(r)))+(((7211520)*((pow(M,4))*(pow(r,2))))+(((-21056640)*((pow(M,3))*(pow(r,3))))+(((51025144)*((pow(M,2))*(pow(r,4))))+(((-113022216)*((M)*(pow(r,5))))+((269257851)*(pow(r,6))))))))))))+(((20)*((pow(a,24))*((pow(r,6))*(((1619902464)*(pow(M,6)))+(((-6617595904)*((pow(M,5))*(r)))+(((13199178240)*((pow(M,4))*(pow(r,2))))+(((-17881622400)*((pow(M,3))*(pow(r,3))))+(((19790955064)*((pow(M,2))*(pow(r,4))))+(((-20903520312)*((M)*(pow(r,5))))+((26026662339)*(pow(r,6))))))))))))+(((5168)*((pow(a,14))*((pow(r,15))*(((-114688)*(pow(M,7)))+(((770048)*((pow(M,6))*(r)))+(((-2824192)*((pow(M,5))*(pow(r,2))))+(((7536640)*((pow(M,4))*(pow(r,3))))+(((-16514120)*((pow(M,3))*(pow(r,4))))+(((32046056)*((pow(M,2))*(pow(r,5))))+(((-59268906)*((M)*(pow(r,6))))+((121647969)*(pow(r,7)))))))))))))+(((16)*((pow(a,22))*((pow(r,7))*(((-1505050624)*(pow(M,7)))+(((6881591296)*((pow(M,6))*(r)))+(((-15592278016)*((pow(M,5))*(pow(r,2))))+(((24110366720)*((pow(M,4))*(pow(r,3))))+(((-29987393240)*((pow(M,3))*(pow(r,4))))+(((33775561288)*((pow(M,2))*(pow(r,5))))+(((-38151524862)*((M)*(pow(r,6))))+((51179924637)*(pow(r,7)))))))))))))+(((38)*((pow(a,16))*((pow(r,12))*(((29360128)*(pow(M,8)))+(((-179830784)*((pow(M,7))*(r)))+(((603815936)*((pow(M,6))*(pow(r,2))))+(((-1476722688)*((pow(M,5))*(pow(r,3))))+(((2956728320)*((pow(M,4))*(pow(r,4))))+(((-5186157056)*((pow(M,3))*(pow(r,5))))+(((8395414768)*((pow(M,2))*(pow(r,6))))+(((-13337055792)*((M)*(pow(r,7))))+((24085521891)*(pow(r,8))))))))))))))+(((2)*((pow(a,20))*((pow(r,8))*(((5314183168)*(pow(M,8)))+(((-26904887296)*((pow(M,7))*(r)))+(((69477564416)*((pow(M,6))*(pow(r,2))))+(((-124946153472)*((pow(M,5))*(pow(r,3))))+(((181492398080)*((pow(M,4))*(pow(r,4))))+(((-234088500736)*((pow(M,3))*(pow(r,5))))+(((286809823792)*((pow(M,2))*(pow(r,6))))+(((-356443953552)*((M)*(pow(r,7))))+((521625661479)*(pow(r,8))))))))))))))+((8)*((pow(a,18))*((pow(r,9))*(((-264241152)*(pow(M,9)))+(((1468006400)*((pow(M,8))*(r)))+(((-4496228352)*((pow(M,7))*(pow(r,2))))+(((10066329600)*((pow(M,6))*(pow(r,3))))+(((-18468882432)*((pow(M,5))*(pow(r,4))))+(((29595009024)*((pow(M,4))*(pow(r,5))))+(((-43286443200)*((pow(M,3))*(pow(r,6))))+(((60129542144)*((pow(M,2))*(pow(r,7))))+(((-83770862175)*((M)*(pow(r,8))))+((135291469824)*(pow(r,9)))))))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((14549535)*((pow((pow(a,2))+(pow(r,2)),20))*(expr[3])))))))))))).cast<double>());
}

void compute_coeffs_scalar_757(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[757] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0000002543131510416666666666666666666666666666666666666666666666666666666666666666666666666666666666666667"))*((pow(a,-21))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-11))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((68025825)*(pow(a,36)))+(((-2100)*((pow(a,34))*((((218953)*(M))+((-473602)*(r)))*(r))))+(((-19399380)*((pow(a,2))*(((M)+((-14)*(r)))*(pow(r,33)))))+(((14549535)*(pow(r,36)))+(((969969)*((pow(a,4))*((pow(r,30))*(((32)*(pow(M,2)))+(((-352)*((M)*(r)))+((2473)*(pow(r,2))))))))+(((105)*((pow(a,32))*((pow(r,2))*(((21305056)*(pow(M,2)))+(((-48759904)*((M)*(r)))+((67227599)*(pow(r,2))))))))+(((2217072)*((pow(a,6))*((pow(r,27))*(((-24)*(pow(M,3)))+(((232)*((pow(M,2))*(r)))+(((-1278)*((M)*(pow(r,2))))+((6009)*(pow(r,3)))))))))+(((240)*((pow(a,30))*((pow(r,3))*(((-31207128)*(pow(M,3)))+(((83682776)*((pow(M,2))*(r)))+(((-113491566)*((M)*(pow(r,2))))+((134393727)*(pow(r,3)))))))))+(((184756)*((pow(a,8))*((pow(r,24))*(((512)*(pow(M,4)))+(((-4480)*((pow(M,3))*(r)))+(((21672)*((pow(M,2))*(pow(r,2))))+(((-79720)*((M)*(pow(r,3))))+((282287)*(pow(r,4))))))))))+(((20)*((pow(a,28))*((pow(r,4))*(((875654656)*(pow(M,4)))+(((-2742517120)*((pow(M,3))*(r)))+(((4189504536)*((pow(M,2))*(pow(r,2))))+(((-4624295080)*((M)*(pow(r,3))))+((5299443481)*(pow(r,4))))))))))+(((67184)*((pow(a,10))*((pow(r,21))*(((-2560)*(pow(M,5)))+(((20480)*((pow(M,4))*(r)))+(((-89648)*((pow(M,3))*(pow(r,2))))+(((289376)*((pow(M,2))*(pow(r,3))))+(((-799741)*((M)*(pow(r,4))))+((2275507)*(pow(r,5)))))))))))+(((80)*((pow(a,26))*((pow(r,5))*(((-358665728)*(pow(M,5)))+(((1292472320)*((pow(M,4))*(r)))+(((-2259575056)*((pow(M,3))*(pow(r,2))))+(((2716902368)*((pow(M,2))*(pow(r,3))))+(((-2816170127)*((M)*(pow(r,4))))+((3312386047)*(pow(r,5)))))))))))+(((1292)*((pow(a,12))*((pow(r,18))*(((245760)*(pow(M,6)))+(((-1802240)*((pow(M,5))*(r)))+(((7211520)*((pow(M,4))*(pow(r,2))))+(((-21056640)*((pow(M,3))*(pow(r,3))))+(((51025144)*((pow(M,2))*(pow(r,4))))+(((-113022216)*((M)*(pow(r,5))))+((269257851)*(pow(r,6))))))))))))+(((20)*((pow(a,24))*((pow(r,6))*(((1619902464)*(pow(M,6)))+(((-6617595904)*((pow(M,5))*(r)))+(((13199178240)*((pow(M,4))*(pow(r,2))))+(((-17881622400)*((pow(M,3))*(pow(r,3))))+(((19790955064)*((pow(M,2))*(pow(r,4))))+(((-20903520312)*((M)*(pow(r,5))))+((26026662339)*(pow(r,6))))))))))))+(((5168)*((pow(a,14))*((pow(r,15))*(((-114688)*(pow(M,7)))+(((770048)*((pow(M,6))*(r)))+(((-2824192)*((pow(M,5))*(pow(r,2))))+(((7536640)*((pow(M,4))*(pow(r,3))))+(((-16514120)*((pow(M,3))*(pow(r,4))))+(((32046056)*((pow(M,2))*(pow(r,5))))+(((-59268906)*((M)*(pow(r,6))))+((121647969)*(pow(r,7)))))))))))))+(((16)*((pow(a,22))*((pow(r,7))*(((-1505050624)*(pow(M,7)))+(((6881591296)*((pow(M,6))*(r)))+(((-15592278016)*((pow(M,5))*(pow(r,2))))+(((24110366720)*((pow(M,4))*(pow(r,3))))+(((-29987393240)*((pow(M,3))*(pow(r,4))))+(((33775561288)*((pow(M,2))*(pow(r,5))))+(((-38151524862)*((M)*(pow(r,6))))+((51179924637)*(pow(r,7)))))))))))))+(((38)*((pow(a,16))*((pow(r,12))*(((29360128)*(pow(M,8)))+(((-179830784)*((pow(M,7))*(r)))+(((603815936)*((pow(M,6))*(pow(r,2))))+(((-1476722688)*((pow(M,5))*(pow(r,3))))+(((2956728320)*((pow(M,4))*(pow(r,4))))+(((-5186157056)*((pow(M,3))*(pow(r,5))))+(((8395414768)*((pow(M,2))*(pow(r,6))))+(((-13337055792)*((M)*(pow(r,7))))+((24085521891)*(pow(r,8))))))))))))))+(((2)*((pow(a,20))*((pow(r,8))*(((5314183168)*(pow(M,8)))+(((-26904887296)*((pow(M,7))*(r)))+(((69477564416)*((pow(M,6))*(pow(r,2))))+(((-124946153472)*((pow(M,5))*(pow(r,3))))+(((181492398080)*((pow(M,4))*(pow(r,4))))+(((-234088500736)*((pow(M,3))*(pow(r,5))))+(((286809823792)*((pow(M,2))*(pow(r,6))))+(((-356443953552)*((M)*(pow(r,7))))+((521625661479)*(pow(r,8))))))))))))))+((8)*((pow(a,18))*((pow(r,9))*(((-264241152)*(pow(M,9)))+(((1468006400)*((pow(M,8))*(r)))+(((-4496228352)*((pow(M,7))*(pow(r,2))))+(((10066329600)*((pow(M,6))*(pow(r,3))))+(((-18468882432)*((pow(M,5))*(pow(r,4))))+(((29595009024)*((pow(M,4))*(pow(r,5))))+(((-43286443200)*((pow(M,3))*(pow(r,6))))+(((60129542144)*((pow(M,2))*(pow(r,7))))+(((-83770862175)*((M)*(pow(r,8))))+((135291469824)*(pow(r,9)))))))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((14549535)*((pow((pow(a,2))+(pow(r,2)),20))*(expr[3])))))))))))).cast<double>());
}

void compute_coeffs_scalar_758(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[758] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.00001017252604166666666666666666666666666666666666666666666666666666666666666666666666666666666666666667"))*((pow(a,-20))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-11))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*(((-1)*((a)*((r)*((((68025825)*(pow(a,36)))+(((-2100)*((pow(a,34))*((((218953)*(M))+((-473602)*(r)))*(r))))+(((-19399380)*((pow(a,2))*(((M)+((-14)*(r)))*(pow(r,33)))))+(((14549535)*(pow(r,36)))+(((969969)*((pow(a,4))*((pow(r,30))*(((32)*(pow(M,2)))+(((-352)*((M)*(r)))+((2473)*(pow(r,2))))))))+(((105)*((pow(a,32))*((pow(r,2))*(((21305056)*(pow(M,2)))+(((-48759904)*((M)*(r)))+((67227599)*(pow(r,2))))))))+(((2217072)*((pow(a,6))*((pow(r,27))*(((-24)*(pow(M,3)))+(((232)*((pow(M,2))*(r)))+(((-1278)*((M)*(pow(r,2))))+((6009)*(pow(r,3)))))))))+(((240)*((pow(a,30))*((pow(r,3))*(((-31207128)*(pow(M,3)))+(((83682776)*((pow(M,2))*(r)))+(((-113491566)*((M)*(pow(r,2))))+((134393727)*(pow(r,3)))))))))+(((184756)*((pow(a,8))*((pow(r,24))*(((512)*(pow(M,4)))+(((-4480)*((pow(M,3))*(r)))+(((21672)*((pow(M,2))*(pow(r,2))))+(((-79720)*((M)*(pow(r,3))))+((282287)*(pow(r,4))))))))))+(((20)*((pow(a,28))*((pow(r,4))*(((875654656)*(pow(M,4)))+(((-2742517120)*((pow(M,3))*(r)))+(((4189504536)*((pow(M,2))*(pow(r,2))))+(((-4624295080)*((M)*(pow(r,3))))+((5299443481)*(pow(r,4))))))))))+(((67184)*((pow(a,10))*((pow(r,21))*(((-2560)*(pow(M,5)))+(((20480)*((pow(M,4))*(r)))+(((-89648)*((pow(M,3))*(pow(r,2))))+(((289376)*((pow(M,2))*(pow(r,3))))+(((-799741)*((M)*(pow(r,4))))+((2275507)*(pow(r,5)))))))))))+(((80)*((pow(a,26))*((pow(r,5))*(((-358665728)*(pow(M,5)))+(((1292472320)*((pow(M,4))*(r)))+(((-2259575056)*((pow(M,3))*(pow(r,2))))+(((2716902368)*((pow(M,2))*(pow(r,3))))+(((-2816170127)*((M)*(pow(r,4))))+((3312386047)*(pow(r,5)))))))))))+(((1292)*((pow(a,12))*((pow(r,18))*(((245760)*(pow(M,6)))+(((-1802240)*((pow(M,5))*(r)))+(((7211520)*((pow(M,4))*(pow(r,2))))+(((-21056640)*((pow(M,3))*(pow(r,3))))+(((51025144)*((pow(M,2))*(pow(r,4))))+(((-113022216)*((M)*(pow(r,5))))+((269257851)*(pow(r,6))))))))))))+(((20)*((pow(a,24))*((pow(r,6))*(((1619902464)*(pow(M,6)))+(((-6617595904)*((pow(M,5))*(r)))+(((13199178240)*((pow(M,4))*(pow(r,2))))+(((-17881622400)*((pow(M,3))*(pow(r,3))))+(((19790955064)*((pow(M,2))*(pow(r,4))))+(((-20903520312)*((M)*(pow(r,5))))+((26026662339)*(pow(r,6))))))))))))+(((5168)*((pow(a,14))*((pow(r,15))*(((-114688)*(pow(M,7)))+(((770048)*((pow(M,6))*(r)))+(((-2824192)*((pow(M,5))*(pow(r,2))))+(((7536640)*((pow(M,4))*(pow(r,3))))+(((-16514120)*((pow(M,3))*(pow(r,4))))+(((32046056)*((pow(M,2))*(pow(r,5))))+(((-59268906)*((M)*(pow(r,6))))+((121647969)*(pow(r,7)))))))))))))+(((16)*((pow(a,22))*((pow(r,7))*(((-1505050624)*(pow(M,7)))+(((6881591296)*((pow(M,6))*(r)))+(((-15592278016)*((pow(M,5))*(pow(r,2))))+(((24110366720)*((pow(M,4))*(pow(r,3))))+(((-29987393240)*((pow(M,3))*(pow(r,4))))+(((33775561288)*((pow(M,2))*(pow(r,5))))+(((-38151524862)*((M)*(pow(r,6))))+((51179924637)*(pow(r,7)))))))))))))+(((38)*((pow(a,16))*((pow(r,12))*(((29360128)*(pow(M,8)))+(((-179830784)*((pow(M,7))*(r)))+(((603815936)*((pow(M,6))*(pow(r,2))))+(((-1476722688)*((pow(M,5))*(pow(r,3))))+(((2956728320)*((pow(M,4))*(pow(r,4))))+(((-5186157056)*((pow(M,3))*(pow(r,5))))+(((8395414768)*((pow(M,2))*(pow(r,6))))+(((-13337055792)*((M)*(pow(r,7))))+((24085521891)*(pow(r,8))))))))))))))+(((2)*((pow(a,20))*((pow(r,8))*(((5314183168)*(pow(M,8)))+(((-26904887296)*((pow(M,7))*(r)))+(((69477564416)*((pow(M,6))*(pow(r,2))))+(((-124946153472)*((pow(M,5))*(pow(r,3))))+(((181492398080)*((pow(M,4))*(pow(r,4))))+(((-234088500736)*((pow(M,3))*(pow(r,5))))+(((286809823792)*((pow(M,2))*(pow(r,6))))+(((-356443953552)*((M)*(pow(r,7))))+((521625661479)*(pow(r,8))))))))))))))+((8)*((pow(a,18))*((pow(r,9))*(((-264241152)*(pow(M,9)))+(((1468006400)*((pow(M,8))*(r)))+(((-4496228352)*((pow(M,7))*(pow(r,2))))+(((10066329600)*((pow(M,6))*(pow(r,3))))+(((-18468882432)*((pow(M,5))*(pow(r,4))))+(((29595009024)*((pow(M,4))*(pow(r,5))))+(((-43286443200)*((pow(M,3))*(pow(r,6))))+(((60129542144)*((pow(M,2))*(pow(r,7))))+(((-83770862175)*((M)*(pow(r,8))))+((135291469824)*(pow(r,9)))))))))))))))))))))))))))))))))*((expr[0])*(expr[1]))))))+((14549535)*((pow((pow(a,2))+(pow(r,2)),20))*((expr[2])*(expr[3])))))))))))).cast<double>());
}

void compute_coeffs_scalar_759(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[759] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.000005086263020833333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((pow(a,-21))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-11))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,4)))+(((-3)*((pow(a,2))*((r)*(((2)*(M))+((9)*(r))))))+((2)*((pow(r,2))*(((2)*(pow(M,2)))+(((109)*((M)*(r)))+((-55)*(pow(r,2)))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((4128768)*(pow(a,36)))+(((14549535)*(pow(r,36)))+(((4849845)*((pow(a,2))*((pow(r,33))*(((2)*(M))+((53)*(r))))))+(((63)*((pow(a,34))*((r)*(((848830)*(M))+((1604063)*(r))))))+(((7759752)*((pow(a,4))*((pow(r,30))*(((-1)*(pow(M,2)))+(((21)*((M)*(r)))+((276)*(pow(r,2))))))))+(((21)*((pow(a,32))*((pow(r,2))*(((-8401160)*(pow(M,2)))+(((32342680)*((M)*(r)))+((49625899)*(pow(r,2))))))))+(((1108536)*((pow(a,6))*((pow(r,27))*(((8)*(pow(M,3)))+(((-110)*((pow(M,2))*(r)))+(((1161)*((M)*(pow(r,2))))+((10086)*(pow(r,3)))))))))+(((168)*((pow(a,30))*((pow(r,3))*(((3038360)*(pow(M,3)))+(((-10144490)*((pow(M,2))*(r)))+(((24723945)*((M)*(pow(r,2))))+((37878396)*(pow(r,3)))))))))+(((184756)*((pow(a,8))*((pow(r,24))*(((-64)*(pow(M,4)))+(((704)*((pow(M,3))*(r)))+(((-4854)*((pow(M,2))*(pow(r,2))))+(((34346)*((M)*(pow(r,3))))+((221771)*(pow(r,4))))))))))+(((120)*((pow(a,28))*((pow(r,4))*(((-9223008)*(pow(M,4)))+(((32598432)*((pow(M,3))*(r)))+(((-64675757)*((pow(M,2))*(pow(r,2))))+(((135237093)*((M)*(pow(r,3))))+((220092906)*(pow(r,4))))))))))+(((16796)*((pow(a,10))*((pow(r,21))*(((1024)*(pow(M,5)))+(((-9600)*((pow(M,4))*(r)))+(((52896)*((pow(M,3))*(pow(r,2))))+(((-243896)*((pow(M,2))*(pow(r,3))))+(((1302192)*((M)*(pow(r,4))))+((6662547)*(pow(r,5)))))))))))+(((4)*((pow(a,26))*((pow(r,5))*(((432950272)*(pow(M,5)))+(((-1684526720)*((pow(M,4))*(r)))+(((3417524320)*((pow(M,3))*(pow(r,2))))+(((-5563352200)*((pow(M,2))*(pow(r,3))))+(((11309710340)*((M)*(pow(r,4))))+((20024486417)*(pow(r,5)))))))))))+(((2584)*((pow(a,12))*((pow(r,18))*(((-10240)*(pow(M,6)))+(((83968)*((pow(M,5))*(r)))+(((-394080)*((pow(M,4))*(pow(r,2))))+(((1450400)*((pow(M,3))*(pow(r,3))))+(((-5032475)*((pow(M,2))*(pow(r,4))))+(((21637755)*((M)*(pow(r,5))))+((91322370)*(pow(r,6))))))))))))+(((4)*((pow(a,24))*((pow(r,6))*(((-473968640)*(pow(M,6)))+(((2041696256)*((pow(M,5))*(r)))+(((-4487062080)*((pow(M,4))*(pow(r,2))))+(((7277355200)*((pow(M,3))*(pow(r,3))))+(((-11288638730)*((pow(M,2))*(pow(r,4))))+(((23772906630)*((M)*(pow(r,5))))+((46309938651)*(pow(r,6))))))))))))+(((2584)*((pow(a,14))*((pow(r,15))*(((16384)*(pow(M,7)))+(((-118784)*((pow(M,6))*(r)))+(((487424)*((pow(M,5))*(pow(r,2))))+(((-1527040)*((pow(M,4))*(pow(r,3))))+(((4223960)*((pow(M,3))*(pow(r,4))))+(((-11767258)*((pow(M,2))*(pow(r,5))))+(((42469173)*((M)*(pow(r,6))))+((151973568)*(pow(r,7)))))))))))))+(((8)*((pow(a,22))*((pow(r,7))*(((172277760)*(pow(M,7)))+(((-818933760)*((pow(M,6))*(r)))+(((1989091328)*((pow(M,5))*(pow(r,2))))+(((-3474466560)*((pow(M,4))*(pow(r,3))))+(((5328025800)*((pow(M,3))*(pow(r,4))))+(((-8598627710)*((pow(M,2))*(pow(r,5))))+(((19418006565)*((M)*(pow(r,6))))+((41930265978)*(pow(r,7)))))))))))))+(((38)*((pow(a,16))*((pow(r,12))*(((-1835008)*(pow(M,8)))+(((11796480)*((pow(M,7))*(r)))+(((-42786816)*((pow(M,6))*(pow(r,2))))+(((117153792)*((pow(M,5))*(pow(r,3))))+(((-275654400)*((pow(M,4))*(pow(r,4))))+(((611364096)*((pow(M,3))*(pow(r,5))))+(((-1424908660)*((pow(M,2))*(pow(r,6))))+(((4443445692)*((M)*(pow(r,7))))+((13751319267)*(pow(r,8))))))))))))))+(((8)*((pow(a,20))*((pow(r,8))*(((-74776576)*(pow(M,8)))+(((390004736)*((pow(M,7))*(r)))+(((-1063340032)*((pow(M,6))*(pow(r,2))))+(((2095908864)*((pow(M,5))*(pow(r,3))))+(((-3527191360)*((pow(M,4))*(pow(r,4))))+(((5724178112)*((pow(M,3))*(pow(r,5))))+(((-10134890587)*((pow(M,2))*(pow(r,6))))+(((25063792479)*((M)*(pow(r,7))))+((60434228160)*(pow(r,8))))))))))))))+((2)*((pow(a,18))*((pow(r,9))*(((58720256)*(pow(M,9)))+(((-333971456)*((pow(M,8))*(r)))+(((1073872896)*((pow(M,7))*(pow(r,2))))+(((-2598273024)*((pow(M,6))*(pow(r,3))))+(((5340819456)*((pow(M,5))*(pow(r,4))))+(((-10068291072)*((pow(M,4))*(pow(r,5))))+(((18653812352)*((pow(M,3))*(pow(r,6))))+(((-37427244512)*((pow(M,2))*(pow(r,7))))+(((103041215298)*((M)*(pow(r,8))))+((279890813223)*(pow(r,9)))))))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((14549535)*((r)*((pow((pow(a,2))+(pow(r,2)),18))*(((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))))*(expr[3]))))))))))))))).cast<double>());
}

}
