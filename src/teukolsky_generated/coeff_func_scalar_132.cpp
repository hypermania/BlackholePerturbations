
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_660(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[660] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0001674107142857142857142857142857142857142857142857142857142857142857142857142857142857142857142857143"))*((HighPrecisionScalar("4.123105625617660549821409855974077025147199225373620434398633573094954346337621593587863650810684297"))*((pow(a,-13))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((3)*(pow(a,10)))+(((9)*((pow(a,8))*((((5)*(M))+((-8)*(r)))*(r))))+(((-35)*((pow(r,9))*((M)+((36)*(r)))))+(((-2)*((pow(a,6))*((pow(r,2))*(((8)*(pow(M,2)))+(((818)*((M)*(r)))+((599)*(pow(r,2))))))))+(((-5)*((pow(a,2))*((pow(r,6))*(((16)*(pow(M,2)))+(((596)*((M)*(r)))+((713)*(pow(r,2))))))))+((-2)*((pow(a,4))*((pow(r,3))*(((16)*(pow(M,3)))+(((640)*((pow(M,2))*(r)))+(((2313)*((M)*(pow(r,2))))+((1714)*(pow(r,3))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((15159)*(pow(a,12)))+(((225225)*(pow(r,12)))+(((60060)*((pow(a,2))*((pow(r,9))*(((11)*(M))+((17)*(r))))))+(((4)*((pow(a,10))*((r)*(((50989)*(M))+((48233)*(r))))))+(((385)*((pow(a,4))*((pow(r,6))*(((1376)*(pow(M,2)))+(((5488)*((M)*(r)))+((4829)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((383648)*(pow(M,2)))+(((1199472)*((M)*(r)))+((833187)*(pow(r,2)))))))+((8)*((pow(a,6))*((pow(r,3))*(((12176)*(pow(M,3)))+(((114176)*((pow(M,2))*(r)))+(((305967)*((M)*(pow(r,2))))+((214848)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((35)*((((35)*(pow(a,16)))+(((6435)*(pow(r,16)))+(((280)*((pow(a,14))*((r)*(((8)*(M))+((5)*(r))))))+(((3432)*((pow(a,2))*((pow(r,13))*(((8)*(M))+((11)*(r))))))+(((420)*((pow(a,12))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((29)*(pow(r,2))))))))+(((132)*((pow(a,4))*((pow(r,10))*(((288)*(pow(M,2)))+(((960)*((M)*(r)))+((709)*(pow(r,2))))))))+(((56)*((pow(a,10))*((pow(r,3))*(((256)*(pow(M,3)))+(((1344)*((pow(M,2))*(r)))+(((1992)*((M)*(pow(r,2))))+((847)*(pow(r,3)))))))))+(((72)*((pow(a,6))*((pow(r,7))*(((256)*(pow(M,3)))+(((1728)*((pow(M,2))*(r)))+(((3272)*((M)*(pow(r,2))))+((1761)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((16384)*((pow(M,3))*(r)))+(((74112)*((pow(M,2))*(pow(r,2))))+(((111616)*((M)*(pow(r,3))))+((50569)*(pow(r,4))))))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_661(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[661] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00002790178571428571428571428571428571428571428571428571428571428571428571428571428571428571428571428571"))*((HighPrecisionScalar("14.86606874731850552261200821393139665144898551372086156056309481025183731478116765861583646027396110"))*((pow(a,-15))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((5)*(pow(a,14)))+(((5)*((pow(a,12))*((((35)*(M))+((-12)*(r)))*(r))))+(((-231)*((pow(r,13))*((M)+((36)*(r)))))+(((-75)*((pow(a,10))*((pow(r,2))*(((-4)*(pow(M,2)))+(((72)*((M)*(r)))+((49)*(pow(r,2))))))))+(((-21)*((pow(a,2))*((pow(r,10))*(((36)*(pow(M,2)))+(((1344)*((M)*(r)))+((1717)*(pow(r,2))))))))+(((-21)*((pow(a,4))*((pow(r,7))*(((32)*(pow(M,3)))+(((1264)*((pow(M,2))*(r)))+(((4079)*((M)*(pow(r,2))))+((2940)*(pow(r,3)))))))))+(((-1)*((pow(a,8))*((pow(r,3))*(((352)*(pow(M,3)))+(((17328)*((pow(M,2))*(r)))+(((41229)*((M)*(pow(r,2))))+((21724)*(pow(r,3)))))))))+((-1)*((pow(a,6))*((pow(r,4))*(((128)*(pow(M,4)))+(((5760)*((pow(M,3))*(r)))+(((43416)*((pow(M,2))*(pow(r,2))))+(((93320)*((M)*(pow(r,3))))+((52113)*(pow(r,4)))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((15159)*(pow(a,12)))+(((225225)*(pow(r,12)))+(((60060)*((pow(a,2))*((pow(r,9))*(((11)*(M))+((17)*(r))))))+(((4)*((pow(a,10))*((r)*(((50989)*(M))+((48233)*(r))))))+(((385)*((pow(a,4))*((pow(r,6))*(((1376)*(pow(M,2)))+(((5488)*((M)*(r)))+((4829)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((383648)*(pow(M,2)))+(((1199472)*((M)*(r)))+((833187)*(pow(r,2)))))))+((8)*((pow(a,6))*((pow(r,3))*(((12176)*(pow(M,3)))+(((114176)*((pow(M,2))*(r)))+(((305967)*((M)*(pow(r,2))))+((214848)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((35)*((((35)*(pow(a,16)))+(((6435)*(pow(r,16)))+(((280)*((pow(a,14))*((r)*(((8)*(M))+((5)*(r))))))+(((3432)*((pow(a,2))*((pow(r,13))*(((8)*(M))+((11)*(r))))))+(((420)*((pow(a,12))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((29)*(pow(r,2))))))))+(((132)*((pow(a,4))*((pow(r,10))*(((288)*(pow(M,2)))+(((960)*((M)*(r)))+((709)*(pow(r,2))))))))+(((56)*((pow(a,10))*((pow(r,3))*(((256)*(pow(M,3)))+(((1344)*((pow(M,2))*(r)))+(((1992)*((M)*(pow(r,2))))+((847)*(pow(r,3)))))))))+(((72)*((pow(a,6))*((pow(r,7))*(((256)*(pow(M,3)))+(((1728)*((pow(M,2))*(r)))+(((3272)*((M)*(pow(r,2))))+((1761)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((16384)*((pow(M,3))*(r)))+(((74112)*((pow(M,2))*(pow(r,2))))+(((111616)*((M)*(pow(r,3))))+((50569)*(pow(r,4))))))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_662(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[662] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00005929129464285714285714285714285714285714285714285714285714285714285714285714285714285714285714285714"))*((pow(a,-17))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((35)*(pow(a,18)))+(((35)*((pow(a,16))*((r)*(((63)*(M))+((4)*(r))))))+(((-6435)*((pow(r,17))*((M)+((36)*(r)))))+(((-140)*((pow(a,14))*((pow(r,2))*(((-80)*(pow(M,2)))+(((394)*((M)*(r)))+((273)*(pow(r,2))))))))+(((-429)*((pow(a,2))*((pow(r,14))*(((64)*(pow(M,2)))+(((2392)*((M)*(r)))+((3153)*(pow(r,2))))))))+(((-28)*((pow(a,12))*((pow(r,3))*(((-32)*(pow(M,3)))+(((15552)*((pow(M,2))*(r)))+(((31011)*((M)*(pow(r,2))))+((13966)*(pow(r,3)))))))))+(((-132)*((pow(a,4))*((pow(r,11))*(((288)*(pow(M,3)))+(((11328)*((pow(M,2))*(r)))+(((35061)*((M)*(pow(r,2))))+((25238)*(pow(r,3)))))))))+(((-12)*((pow(a,6))*((pow(r,8))*(((1536)*(pow(M,4)))+(((65664)*((pow(M,3))*(r)))+(((389712)*((pow(M,2))*(pow(r,2))))+(((706758)*((M)*(pow(r,3))))+((372577)*(pow(r,4))))))))))+(((-2)*((pow(a,10))*((pow(r,4))*(((6144)*(pow(M,4)))+(((279296)*((pow(M,3))*(r)))+(((1336416)*((pow(M,2))*(pow(r,2))))+(((1920036)*((M)*(pow(r,3))))+((803207)*(pow(r,4))))))))))+((-2)*((pow(a,8))*((pow(r,5))*(((1024)*(pow(M,5)))+(((53248)*((pow(M,4))*(r)))+(((654720)*((pow(M,3))*(pow(r,2))))+(((2717440)*((pow(M,2))*(pow(r,3))))+(((3950953)*((M)*(pow(r,4))))+((1757088)*(pow(r,5))))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((15159)*(pow(a,12)))+(((225225)*(pow(r,12)))+(((60060)*((pow(a,2))*((pow(r,9))*(((11)*(M))+((17)*(r))))))+(((4)*((pow(a,10))*((r)*(((50989)*(M))+((48233)*(r))))))+(((385)*((pow(a,4))*((pow(r,6))*(((1376)*(pow(M,2)))+(((5488)*((M)*(r)))+((4829)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((383648)*(pow(M,2)))+(((1199472)*((M)*(r)))+((833187)*(pow(r,2)))))))+((8)*((pow(a,6))*((pow(r,3))*(((12176)*(pow(M,3)))+(((114176)*((pow(M,2))*(r)))+(((305967)*((M)*(pow(r,2))))+((214848)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((35)*((((35)*(pow(a,16)))+(((6435)*(pow(r,16)))+(((280)*((pow(a,14))*((r)*(((8)*(M))+((5)*(r))))))+(((3432)*((pow(a,2))*((pow(r,13))*(((8)*(M))+((11)*(r))))))+(((420)*((pow(a,12))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((29)*(pow(r,2))))))))+(((132)*((pow(a,4))*((pow(r,10))*(((288)*(pow(M,2)))+(((960)*((M)*(r)))+((709)*(pow(r,2))))))))+(((56)*((pow(a,10))*((pow(r,3))*(((256)*(pow(M,3)))+(((1344)*((pow(M,2))*(r)))+(((1992)*((M)*(pow(r,2))))+((847)*(pow(r,3)))))))))+(((72)*((pow(a,6))*((pow(r,7))*(((256)*(pow(M,3)))+(((1728)*((pow(M,2))*(r)))+(((3272)*((M)*(pow(r,2))))+((1761)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((16384)*((pow(M,3))*(r)))+(((74112)*((pow(M,2))*(pow(r,2))))+(((111616)*((M)*(pow(r,3))))+((50569)*(pow(r,4))))))))))))))))))*(expr[3]))))))))))))).cast<double>());
}

void compute_coeffs_scalar_663(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[663] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00005929129464285714285714285714285714285714285714285714285714285714285714285714285714285714285714285714"))*((pow(a,-15))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((35)*(pow(a,16)))+(((6435)*(pow(r,16)))+(((280)*((pow(a,14))*((r)*(((8)*(M))+((5)*(r))))))+(((3432)*((pow(a,2))*((pow(r,13))*(((8)*(M))+((11)*(r))))))+(((420)*((pow(a,12))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((29)*(pow(r,2))))))))+(((132)*((pow(a,4))*((pow(r,10))*(((288)*(pow(M,2)))+(((960)*((M)*(r)))+((709)*(pow(r,2))))))))+(((56)*((pow(a,10))*((pow(r,3))*(((256)*(pow(M,3)))+(((1344)*((pow(M,2))*(r)))+(((1992)*((M)*(pow(r,2))))+((847)*(pow(r,3)))))))))+(((72)*((pow(a,6))*((pow(r,7))*(((256)*(pow(M,3)))+(((1728)*((pow(M,2))*(r)))+(((3272)*((M)*(pow(r,2))))+((1761)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((16384)*((pow(M,3))*(r)))+(((74112)*((pow(M,2))*(pow(r,2))))+(((111616)*((M)*(pow(r,3))))+((50569)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((15159)*(pow(a,12)))+(((225225)*(pow(r,12)))+(((60060)*((pow(a,2))*((pow(r,9))*(((11)*(M))+((17)*(r))))))+(((4)*((pow(a,10))*((r)*(((50989)*(M))+((48233)*(r))))))+(((385)*((pow(a,4))*((pow(r,6))*(((1376)*(pow(M,2)))+(((5488)*((M)*(r)))+((4829)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((383648)*(pow(M,2)))+(((1199472)*((M)*(r)))+((833187)*(pow(r,2)))))))+((8)*((pow(a,6))*((pow(r,3))*(((12176)*(pow(M,3)))+(((114176)*((pow(M,2))*(r)))+(((305967)*((M)*(pow(r,2))))+((214848)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((35)*((((35)*(pow(a,16)))+(((6435)*(pow(r,16)))+(((280)*((pow(a,14))*((r)*(((8)*(M))+((5)*(r))))))+(((3432)*((pow(a,2))*((pow(r,13))*(((8)*(M))+((11)*(r))))))+(((420)*((pow(a,12))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((29)*(pow(r,2))))))))+(((132)*((pow(a,4))*((pow(r,10))*(((288)*(pow(M,2)))+(((960)*((M)*(r)))+((709)*(pow(r,2))))))))+(((56)*((pow(a,10))*((pow(r,3))*(((256)*(pow(M,3)))+(((1344)*((pow(M,2))*(r)))+(((1992)*((M)*(pow(r,2))))+((847)*(pow(r,3)))))))))+(((72)*((pow(a,6))*((pow(r,7))*(((256)*(pow(M,3)))+(((1728)*((pow(M,2))*(r)))+(((3272)*((M)*(pow(r,2))))+((1761)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((16384)*((pow(M,3))*(r)))+(((74112)*((pow(M,2))*(pow(r,2))))+(((111616)*((M)*(pow(r,3))))+((50569)*(pow(r,4))))))))))))))))))*(expr[3]))))))))))))).cast<double>());
}

void compute_coeffs_scalar_664(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[664] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00002964564732142857142857142857142857142857142857142857142857142857142857142857142857142857142857142857"))*((pow(a,-17))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((((35)*(pow(a,16)))+(((6435)*(pow(r,16)))+(((280)*((pow(a,14))*((r)*(((8)*(M))+((5)*(r))))))+(((3432)*((pow(a,2))*((pow(r,13))*(((8)*(M))+((11)*(r))))))+(((420)*((pow(a,12))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((29)*(pow(r,2))))))))+(((132)*((pow(a,4))*((pow(r,10))*(((288)*(pow(M,2)))+(((960)*((M)*(r)))+((709)*(pow(r,2))))))))+(((56)*((pow(a,10))*((pow(r,3))*(((256)*(pow(M,3)))+(((1344)*((pow(M,2))*(r)))+(((1992)*((M)*(pow(r,2))))+((847)*(pow(r,3)))))))))+(((72)*((pow(a,6))*((pow(r,7))*(((256)*(pow(M,3)))+(((1728)*((pow(M,2))*(r)))+(((3272)*((M)*(pow(r,2))))+((1761)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((16384)*((pow(M,3))*(r)))+(((74112)*((pow(M,2))*(pow(r,2))))+(((111616)*((M)*(pow(r,3))))+((50569)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((15159)*(pow(a,12)))+(((225225)*(pow(r,12)))+(((60060)*((pow(a,2))*((pow(r,9))*(((11)*(M))+((17)*(r))))))+(((4)*((pow(a,10))*((r)*(((50989)*(M))+((48233)*(r))))))+(((385)*((pow(a,4))*((pow(r,6))*(((1376)*(pow(M,2)))+(((5488)*((M)*(r)))+((4829)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((383648)*(pow(M,2)))+(((1199472)*((M)*(r)))+((833187)*(pow(r,2)))))))+((8)*((pow(a,6))*((pow(r,3))*(((12176)*(pow(M,3)))+(((114176)*((pow(M,2))*(r)))+(((305967)*((M)*(pow(r,2))))+((214848)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((35)*((((35)*(pow(a,16)))+(((6435)*(pow(r,16)))+(((280)*((pow(a,14))*((r)*(((8)*(M))+((5)*(r))))))+(((3432)*((pow(a,2))*((pow(r,13))*(((8)*(M))+((11)*(r))))))+(((420)*((pow(a,12))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((29)*(pow(r,2))))))))+(((132)*((pow(a,4))*((pow(r,10))*(((288)*(pow(M,2)))+(((960)*((M)*(r)))+((709)*(pow(r,2))))))))+(((56)*((pow(a,10))*((pow(r,3))*(((256)*(pow(M,3)))+(((1344)*((pow(M,2))*(r)))+(((1992)*((M)*(pow(r,2))))+((847)*(pow(r,3)))))))))+(((72)*((pow(a,6))*((pow(r,7))*(((256)*(pow(M,3)))+(((1728)*((pow(M,2))*(r)))+(((3272)*((M)*(pow(r,2))))+((1761)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((16384)*((pow(M,3))*(r)))+(((74112)*((pow(M,2))*(pow(r,2))))+(((111616)*((M)*(pow(r,3))))+((50569)*(pow(r,4))))))))))))))))))*(expr[3]))))))))))))).cast<double>());
}

}
