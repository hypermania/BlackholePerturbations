
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_130(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[130] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.005208333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((HighPrecisionScalar("3.316624790355399849114932736670686683927088545589353597058682146116484642609043846708843399128290651"))*((pow(a,-9))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((a)*((r)*(((945)*((pow(r,16))*(((-2)*(M))+(r))))+(((663)*((pow(a,16))*(((2)*(M))+(r))))+(((210)*((pow(a,2))*((pow(r,13))*(((-22)*(pow(M,2)))+(((-50)*((M)*(r)))+((35)*(pow(r,2))))))))+(((2)*((pow(a,14))*((r)*(((-586)*(pow(M,2)))+(((4718)*((M)*(r)))+((2837)*(pow(r,2))))))))+(((-14)*((pow(a,4))*((pow(r,10))*(((88)*(pow(M,3)))+(((1848)*((pow(M,2))*(r)))+(((1536)*((M)*(pow(r,2))))+((-1781)*(pow(r,3)))))))))+(((2)*((pow(a,12))*((pow(r,2))*(((-1896)*(pow(M,3)))+(((-6360)*((pow(M,2))*(r)))+(((13040)*((M)*(pow(r,2))))+((10525)*(pow(r,3)))))))))+(((2)*((pow(a,10))*((pow(r,3))*(((960)*(pow(M,4)))+(((-5664)*((pow(M,3))*(r)))+(((-21570)*((pow(M,2))*(pow(r,2))))+(((16770)*((M)*(pow(r,3))))+((22145)*(pow(r,4))))))))))+(((2)*((pow(a,6))*((pow(r,7))*(((320)*(pow(M,4)))+(((-3104)*((pow(M,3))*(r)))+(((-29550)*((pow(M,2))*(pow(r,2))))+(((-7342)*((M)*(pow(r,3))))+((24079)*(pow(r,4))))))))))+((4)*((pow(a,8))*((pow(r,4))*(((-128)*(pow(M,5)))+(((640)*((pow(M,4))*(r)))+(((-3128)*((pow(M,3))*(pow(r,2))))+(((-17360)*((pow(M,2))*(pow(r,3))))+(((3445)*((M)*(pow(r,4))))+((14470)*(pow(r,5)))))))))))))))))))))+((-105)*((pow((pow(a,2))+(pow(r,2)),6))*(((pow(a,4))+(((9)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((8)*(M))+((5)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_131(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[131] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.06250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("3.316624790355399849114932736670686683927088545589353597058682146116484642609043846708843399128290651"))*((pow(a,-8))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[2])*(((((945)*((a)*((((2)*(M))+((-1)*(r)))*(pow(r,16)))))+(((-663)*((pow(a,17))*(((2)*(M))+(r))))+(((210)*((pow(a,3))*((pow(r,13))*(((22)*(pow(M,2)))+(((50)*((M)*(r)))+((-35)*(pow(r,2))))))))+(((-2)*((pow(a,15))*((r)*(((-586)*(pow(M,2)))+(((4718)*((M)*(r)))+((2837)*(pow(r,2))))))))+(((2)*((pow(a,13))*((pow(r,2))*(((1896)*(pow(M,3)))+(((6360)*((pow(M,2))*(r)))+(((-13040)*((M)*(pow(r,2))))+((-10525)*(pow(r,3)))))))))+(((14)*((pow(a,5))*((pow(r,10))*(((88)*(pow(M,3)))+(((1848)*((pow(M,2))*(r)))+(((1536)*((M)*(pow(r,2))))+((-1781)*(pow(r,3)))))))))+(((2)*((pow(a,7))*((pow(r,7))*(((-320)*(pow(M,4)))+(((3104)*((pow(M,3))*(r)))+(((29550)*((pow(M,2))*(pow(r,2))))+(((7342)*((M)*(pow(r,3))))+((-24079)*(pow(r,4))))))))))+(((-2)*((pow(a,11))*((pow(r,3))*(((960)*(pow(M,4)))+(((-5664)*((pow(M,3))*(r)))+(((-21570)*((pow(M,2))*(pow(r,2))))+(((16770)*((M)*(pow(r,3))))+((22145)*(pow(r,4))))))))))+((4)*((pow(a,9))*((pow(r,4))*(((128)*(pow(M,5)))+(((-640)*((pow(M,4))*(r)))+(((3128)*((pow(M,3))*(pow(r,2))))+(((17360)*((pow(M,2))*(pow(r,3))))+(((-3445)*((M)*(pow(r,4))))+((-14470)*(pow(r,5)))))))))))))))))))*(expr[2]))+((105)*((pow((pow(a,2))+(pow(r,2)),6))*(((pow(a,4))+(((9)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((8)*(M))+((5)*(r))))))))*((expr[0])*((expr[1])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_132(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[132] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.002604166666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666667"))*((HighPrecisionScalar("0.7071067811865475244008443621048490392848359376884740365883398689953662392310535194251937671638207864"))*((pow(a,-11))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,4)))+(((-1)*((pow(a,2))*((r)*(((6)*(M))+(r)))))+((2)*((pow(r,2))*(((2)*(pow(M,2)))+(((11)*((M)*(r)))+((-6)*(pow(r,2)))))))))*(((a)*((r)*(((-45045)*((((2)*(M))+((-1)*(r)))*(pow(r,20))))+(((9295)*((pow(a,20))*(((2)*(M))+(r))))+(((4620)*((pow(a,2))*((pow(r,17))*(((-73)*(pow(M,2)))+(((-122)*((M)*(r)))+((89)*(pow(r,2))))))))+(((20)*((pow(a,18))*((r)*(((4475)*(pow(M,2)))+(((13770)*((M)*(r)))+((6231)*(pow(r,2))))))))+(((-21)*((pow(a,4))*((pow(r,14))*(((16112)*(pow(M,3)))+(((104312)*((pow(M,2))*(r)))+(((60594)*((M)*(pow(r,2))))+((-79839)*(pow(r,3)))))))))+(((pow(a,16))*((pow(r,2))*(((-215728)*(pow(M,3)))+(((392408)*((pow(M,2))*(r)))+(((1480254)*((M)*(pow(r,2))))+((708009)*(pow(r,3))))))))+(((-24)*((pow(a,6))*((pow(r,11))*(((1728)*(pow(M,4)))+(((81132)*((pow(M,3))*(r)))+(((248033)*((pow(M,2))*(pow(r,2))))+(((28284)*((M)*(pow(r,3))))+((-167346)*(pow(r,4))))))))))+(((8)*((pow(a,14))*((pow(r,3))*(((-10784)*(pow(M,4)))+(((-183364)*((pow(M,3))*(r)))+(((13931)*((pow(M,2))*(pow(r,2))))+(((514412)*((M)*(pow(r,3))))+((286558)*(pow(r,4))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((12032)*(pow(M,5)))+(((-142464)*((pow(M,4))*(r)))+(((-2019240)*((pow(M,3))*(pow(r,2))))+(((-1264900)*((pow(M,2))*(pow(r,3))))+(((3298590)*((M)*(pow(r,4))))+((2369595)*(pow(r,5)))))))))))+(((2)*((pow(a,8))*((pow(r,8))*(((5888)*(pow(M,5)))+(((-97664)*((pow(M,4))*(r)))+(((-2315560)*((pow(M,3))*(pow(r,2))))+(((-4308220)*((pow(M,2))*(pow(r,3))))+(((1227190)*((M)*(pow(r,4))))+((3124265)*(pow(r,5)))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((-512)*(pow(M,6)))+(((4480)*((pow(M,5))*(r)))+(((-44064)*((pow(M,4))*(pow(r,2))))+(((-726200)*((pow(M,3))*(pow(r,3))))+(((-856910)*((pow(M,2))*(pow(r,4))))+(((754950)*((M)*(pow(r,5))))+((822765)*(pow(r,6))))))))))))))))))))))))+((-315)*((pow((pow(a,2))+(pow(r,2)),6))*((((3)*(pow(a,8)))+(((143)*(pow(r,8)))+(((24)*((pow(a,6))*((r)*(((5)*(M))+((3)*(r))))))+(((88)*((pow(a,2))*((pow(r,5))*(((5)*(M))+((4)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((160)*(pow(M,2)))+(((280)*((M)*(r)))+((139)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_133(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[133] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.005208333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((HighPrecisionScalar("0.7071067811865475244008443621048490392848359376884740365883398689953662392310535194251937671638207864"))*((pow(a,-9))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((a)*((r)*(((45045)*((((2)*(M))+((-1)*(r)))*(pow(r,20))))+(((-9295)*((pow(a,20))*(((2)*(M))+(r))))+(((4620)*((pow(a,2))*((pow(r,17))*(((73)*(pow(M,2)))+(((122)*((M)*(r)))+((-89)*(pow(r,2))))))))+(((-20)*((pow(a,18))*((r)*(((4475)*(pow(M,2)))+(((13770)*((M)*(r)))+((6231)*(pow(r,2))))))))+(((21)*((pow(a,4))*((pow(r,14))*(((16112)*(pow(M,3)))+(((104312)*((pow(M,2))*(r)))+(((60594)*((M)*(pow(r,2))))+((-79839)*(pow(r,3)))))))))+(((-1)*((pow(a,16))*((pow(r,2))*(((-215728)*(pow(M,3)))+(((392408)*((pow(M,2))*(r)))+(((1480254)*((M)*(pow(r,2))))+((708009)*(pow(r,3)))))))))+(((24)*((pow(a,6))*((pow(r,11))*(((1728)*(pow(M,4)))+(((81132)*((pow(M,3))*(r)))+(((248033)*((pow(M,2))*(pow(r,2))))+(((28284)*((M)*(pow(r,3))))+((-167346)*(pow(r,4))))))))))+(((-8)*((pow(a,14))*((pow(r,3))*(((-10784)*(pow(M,4)))+(((-183364)*((pow(M,3))*(r)))+(((13931)*((pow(M,2))*(pow(r,2))))+(((514412)*((M)*(pow(r,3))))+((286558)*(pow(r,4))))))))))+(((-2)*((pow(a,8))*((pow(r,8))*(((5888)*(pow(M,5)))+(((-97664)*((pow(M,4))*(r)))+(((-2315560)*((pow(M,3))*(pow(r,2))))+(((-4308220)*((pow(M,2))*(pow(r,3))))+(((1227190)*((M)*(pow(r,4))))+((3124265)*(pow(r,5)))))))))))+(((8)*((pow(a,10))*((pow(r,5))*(((512)*(pow(M,6)))+(((-4480)*((pow(M,5))*(r)))+(((44064)*((pow(M,4))*(pow(r,2))))+(((726200)*((pow(M,3))*(pow(r,3))))+(((856910)*((pow(M,2))*(pow(r,4))))+(((-754950)*((M)*(pow(r,5))))+((-822765)*(pow(r,6))))))))))))+((pow(a,12))*(((-24064)*((pow(M,5))*(pow(r,4))))+(((284928)*((pow(M,4))*(pow(r,5))))+(((4038480)*((pow(M,3))*(pow(r,6))))+(((2529800)*((pow(M,2))*(pow(r,7))))+(((-6597180)*((M)*(pow(r,8))))+((-4739190)*(pow(r,9)))))))))))))))))))))+((315)*((pow((pow(a,2))+(pow(r,2)),6))*((((3)*(pow(a,8)))+(((143)*(pow(r,8)))+(((24)*((pow(a,6))*((r)*(((5)*(M))+((3)*(r))))))+(((88)*((pow(a,2))*((pow(r,5))*(((5)*(M))+((4)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((160)*(pow(M,2)))+(((280)*((M)*(r)))+((139)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_134(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[134] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.002604166666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666667"))*((HighPrecisionScalar("0.7071067811865475244008443621048490392848359376884740365883398689953662392310535194251937671638207864"))*((pow(a,-11))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((a)*((r)*((pow((pow(a,2))+(pow(r,2)),2))*(((-45045)*((((2)*(M))+((-1)*(r)))*(pow(r,20))))+(((9295)*((pow(a,20))*(((2)*(M))+(r))))+(((4620)*((pow(a,2))*((pow(r,17))*(((-73)*(pow(M,2)))+(((-122)*((M)*(r)))+((89)*(pow(r,2))))))))+(((20)*((pow(a,18))*((r)*(((4475)*(pow(M,2)))+(((13770)*((M)*(r)))+((6231)*(pow(r,2))))))))+(((-21)*((pow(a,4))*((pow(r,14))*(((16112)*(pow(M,3)))+(((104312)*((pow(M,2))*(r)))+(((60594)*((M)*(pow(r,2))))+((-79839)*(pow(r,3)))))))))+(((pow(a,16))*((pow(r,2))*(((-215728)*(pow(M,3)))+(((392408)*((pow(M,2))*(r)))+(((1480254)*((M)*(pow(r,2))))+((708009)*(pow(r,3))))))))+(((-24)*((pow(a,6))*((pow(r,11))*(((1728)*(pow(M,4)))+(((81132)*((pow(M,3))*(r)))+(((248033)*((pow(M,2))*(pow(r,2))))+(((28284)*((M)*(pow(r,3))))+((-167346)*(pow(r,4))))))))))+(((8)*((pow(a,14))*((pow(r,3))*(((-10784)*(pow(M,4)))+(((-183364)*((pow(M,3))*(r)))+(((13931)*((pow(M,2))*(pow(r,2))))+(((514412)*((M)*(pow(r,3))))+((286558)*(pow(r,4))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((12032)*(pow(M,5)))+(((-142464)*((pow(M,4))*(r)))+(((-2019240)*((pow(M,3))*(pow(r,2))))+(((-1264900)*((pow(M,2))*(pow(r,3))))+(((3298590)*((M)*(pow(r,4))))+((2369595)*(pow(r,5)))))))))))+(((2)*((pow(a,8))*((pow(r,8))*(((5888)*(pow(M,5)))+(((-97664)*((pow(M,4))*(r)))+(((-2315560)*((pow(M,3))*(pow(r,2))))+(((-4308220)*((pow(M,2))*(pow(r,3))))+(((1227190)*((M)*(pow(r,4))))+((3124265)*(pow(r,5)))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((-512)*(pow(M,6)))+(((4480)*((pow(M,5))*(r)))+(((-44064)*((pow(M,4))*(pow(r,2))))+(((-726200)*((pow(M,3))*(pow(r,3))))+(((-856910)*((pow(M,2))*(pow(r,4))))+(((754950)*((M)*(pow(r,5))))+((822765)*(pow(r,6)))))))))))))))))))))))))+((-315)*((pow((pow(a,2))+(pow(r,2)),8))*((((3)*(pow(a,8)))+(((143)*(pow(r,8)))+(((24)*((pow(a,6))*((r)*(((5)*(M))+((3)*(r))))))+(((88)*((pow(a,2))*((pow(r,5))*(((5)*(M))+((4)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((160)*(pow(M,2)))+(((280)*((M)*(r)))+((139)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))).cast<double>());
}

}
