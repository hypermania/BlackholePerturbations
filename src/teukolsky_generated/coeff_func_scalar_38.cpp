
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_190(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[190] = std::complex<double>(0.0,1.0)*(((-7)*((pow(a,-6))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-4))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((8)*(pow(a,8)))+(((15)*(pow(r,8)))+(((5)*((pow(a,2))*((pow(r,5))*(((2)*(M))+((11)*(r))))))+(((pow(a,6))*((r)*(((18)*(M))+((41)*(r)))))+((pow(a,4))*((pow(r,2))*(((-8)*(pow(M,2)))+(((28)*((M)*(r)))+((73)*(pow(r,2)))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((15)*((r)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_191(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[191] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("3.316624790355399849114932736670686683927088545589353597058682146116484642609043846708843399128290651"))*((pow(a,-8))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((32)*(pow(a,12)))+(((315)*(pow(r,12)))+(((315)*((pow(a,2))*((pow(r,9))*(((2)*(M))+((5)*(r))))))+(((pow(a,10))*((r)*(((494)*(M))+((439)*(r)))))+(((14)*((pow(a,4))*((pow(r,6))*(((8)*(pow(M,2)))+(((172)*((M)*(r)))+((227)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((160)*(pow(M,2)))+(((2136)*((M)*(r)))+((1755)*(pow(r,2)))))))+((pow(a,6))*(((-32)*((pow(M,3))*(pow(r,3))))+(((272)*((pow(M,2))*(pow(r,4))))+(((3420)*((M)*(pow(r,5))))+((3266)*(pow(r,6)))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((105)*((r)*((pow((pow(a,2))+(pow(r,2)),4))*((((3)*(pow(r,7)))+(((pow(a,6))*(((2)*(M))+(r)))+(((pow(a,2))*((pow(r,4))*(((10)*(M))+((7)*(r)))))+((pow(a,4))*((r)*(((8)*(pow(M,2)))+(((12)*((M)*(r)))+((5)*(pow(r,2))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_192(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[192] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.1250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.4082482904638630163662140124509818986609912467761116880721154278751600629095525044233099055174400391"))*((pow(a,-10))*((M)*((r)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*(((1024)*(pow(a,19)))+(((-45045)*((a)*((((2)*(M))+((-1)*(r)))*(pow(r,17)))))+(((pow(a,17))*((r)*(((35606)*(M))+((28043)*(r)))))+(((2310)*((pow(a,3))*((pow(r,14))*(((-122)*(pow(M,2)))+(((-190)*((M)*(r)))+((145)*(pow(r,2))))))))+(((2)*((pow(a,15))*((pow(r,2))*(((10094)*(pow(M,2)))+(((152518)*((M)*(r)))+((105677)*(pow(r,2))))))))+(((-42)*((pow(a,5))*((pow(r,11))*(((5256)*(pow(M,3)))+(((32376)*((pow(M,2))*(r)))+(((17032)*((M)*(pow(r,2))))+((-25847)*(pow(r,3)))))))))+(((2)*((pow(a,13))*((pow(r,3))*(((-89896)*(pow(M,3)))+(((-74280)*((pow(M,2))*(r)))+(((501720)*((M)*(pow(r,2))))+((390845)*(pow(r,3)))))))))+(((-6)*((pow(a,7))*((pow(r,8))*(((2880)*(pow(M,4)))+(((141408)*((pow(M,3))*(r)))+(((432930)*((pow(M,2))*(pow(r,2))))+(((18594)*((M)*(pow(r,3))))+((-333853)*(pow(r,4))))))))))+(((2)*((pow(a,11))*((pow(r,4))*(((-11840)*(pow(M,4)))+(((-383264)*((pow(M,3))*(r)))+(((-540570)*((pow(M,2))*(pow(r,2))))+(((798490)*((M)*(pow(r,3))))+((846505)*(pow(r,4))))))))))+(((4)*((pow(a,9))*((pow(r,5))*(((640)*(pow(M,5)))+(((-10240)*((pow(M,4))*(r)))+(((-303608)*((pow(M,3))*(pow(r,2))))+(((-608000)*((pow(M,2))*(pow(r,3))))+(((279485)*((M)*(pow(r,4))))+((575776)*(pow(r,5)))))))))))+((-315)*((pow((pow(a,2))+(pow(r,2)),4))*((((15)*(pow(a,8)))+(((143)*(pow(r,8)))+(((20)*((pow(a,6))*((r)*(((8)*(M))+((7)*(r))))))+(((44)*((pow(a,2))*((pow(r,5))*(((8)*(M))+((9)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((96)*(pow(M,2)))+(((256)*((M)*(r)))+((189)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_193(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[193] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.06250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.2027943320843586238248738719973557936519602718347374605940645771521887162370722405710897048615946580"))*((pow(a,-12))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((4096)*(pow(a,20)))+(((765765)*(pow(r,20)))+(((15015)*((pow(a,2))*((pow(r,17))*(((214)*(M))+((403)*(r))))))+(((pow(a,18))*((r)*(((270978)*(M))+((176449)*(r)))))+(((24024)*((pow(a,4))*((pow(r,14))*(((178)*(pow(M,2)))+(((892)*((M)*(r)))+((877)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((1652096)*(pow(M,2)))+(((3819920)*((M)*(r)))+((1816745)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((3474)*(pow(M,3)))+(((43383)*((pow(M,2))*(r)))+(((116310)*((M)*(pow(r,2))))+((80260)*(pow(r,3)))))))))+(((8)*((pow(a,14))*((pow(r,3))*(((207332)*(pow(M,3)))+(((1550070)*((pow(M,2))*(r)))+(((2549506)*((M)*(pow(r,2))))+((1110081)*(pow(r,3)))))))))+(((16)*((pow(a,12))*((pow(r,4))*(((6048)*(pow(M,4)))+(((426760)*((pow(M,3))*(r)))+(((2335407)*((pow(M,2))*(pow(r,2))))+(((3586320)*((M)*(pow(r,3))))+((1578955)*(pow(r,4))))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((3584)*(pow(M,4)))+(((326336)*((pow(M,3))*(r)))+(((2295696)*((pow(M,2))*(pow(r,2))))+(((4470584)*((M)*(pow(r,3))))+((2463167)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,5))*(((-3584)*(pow(M,5)))+(((87808)*((pow(M,4))*(r)))+(((5257312)*((pow(M,3))*(pow(r,2))))+(((29246704)*((pow(M,2))*(pow(r,3))))+(((47845690)*((M)*(pow(r,4))))+((22811593)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((r)*((pow((pow(a,2))+(pow(r,2)),4))*((((221)*(pow(r,15)))+(((7)*((pow(a,14))*(((2)*(M))+(r))))+(((13)*((pow(a,2))*((pow(r,12))*(((94)*(M))+((89)*(r))))))+(((7)*((pow(a,12))*((r)*(((40)*(pow(M,2)))+(((52)*((M)*(r)))+((17)*(pow(r,2))))))))+(((13)*((pow(a,4))*((pow(r,9))*(((184)*(pow(M,2)))+(((380)*((M)*(r)))+((193)*(pow(r,2))))))))+(((7)*((pow(a,10))*((pow(r,2))*(((128)*(pow(M,3)))+(((352)*((pow(M,2))*(r)))+(((326)*((M)*(pow(r,2))))+((97)*(pow(r,3)))))))))+(((pow(a,6))*((pow(r,6))*(((1920)*(pow(M,3)))+(((6688)*((pow(M,2))*(r)))+(((7810)*((M)*(pow(r,2))))+((2893)*(pow(r,3))))))))+((pow(a,8))*((pow(r,3))*(((512)*(pow(M,4)))+(((2816)*((pow(M,3))*(r)))+(((6480)*((pow(M,2))*(pow(r,2))))+(((6024)*((M)*(pow(r,3))))+((1887)*(pow(r,4))))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_194(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[194] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("1.750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-6))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-4))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((-1)*((a)*((r)*(((15)*((pow(r,12))*(((-2)*(M))+(r))))+(((33)*((pow(a,12))*(((2)*(M))+(r))))+(((-20)*((pow(a,2))*((pow(r,9))*((pow(M,2))+(((8)*((M)*(r)))+((-5)*(pow(r,2))))))))+(((4)*((pow(a,10))*((r)*(((-59)*(pow(M,2)))+(((40)*((M)*(r)))+((43)*(pow(r,2))))))))+(((pow(a,4))*((pow(r,6))*(((16)*(pow(M,3)))+(((-104)*((pow(M,2))*(r)))+(((-338)*((M)*(pow(r,2))))+((283)*(pow(r,3))))))))+(((pow(a,8))*((pow(r,2))*(((272)*(pow(M,3)))+(((-536)*((pow(M,2))*(r)))+(((14)*((M)*(pow(r,2))))+((373)*(pow(r,3))))))))+((16)*((pow(a,6))*((pow(r,3))*(((-8)*(pow(M,4)))+(((18)*((pow(M,3))*(r)))+(((-24)*((pow(M,2))*(pow(r,2))))+(((-18)*((M)*(pow(r,3))))+((27)*(pow(r,4)))))))))))))))))))+((15)*((pow((pow(a,2))+(pow(r,2)),6))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))).cast<double>());
}

}
