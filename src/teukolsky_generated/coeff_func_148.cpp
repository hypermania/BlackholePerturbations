
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_740(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[740] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0001736111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"))*((HighPrecisionScalar("1.647508942095827984193454748402553214369009835891626690475411153733610205924983224578986075667766621"))*((pow(a,-13))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((3)*(pow(a,6)))+(((pow(a,4))*(((M)+((-127)*(r)))*(r)))+(((-5)*((pow(r,5))*((M)+((45)*(r)))))+((-1)*((pow(a,2))*((pow(r,2))*(((4)*(pow(M,2)))+(((188)*((M)*(r)))+((355)*(pow(r,2)))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((16384)*(pow(a,16)))+(((3828825)*(pow(r,16)))+(((75075)*((pow(a,2))*((pow(r,13))*(((226)*(M))+((295)*(r))))))+(((pow(a,14))*((r)*(((1145038)*(M))+((703591)*(r)))))+(((15015)*((pow(a,4))*((pow(r,10))*(((1656)*(pow(M,2)))+(((5124)*((M)*(r)))+((3599)*(pow(r,2))))))))+(((3)*((pow(a,12))*((pow(r,2))*(((2563832)*(pow(M,2)))+(((4853908)*((M)*(r)))+((2129753)*(pow(r,2))))))))+(((495)*((pow(a,6))*((pow(r,7))*(((26816)*(pow(M,3)))+(((160704)*((pow(M,2))*(r)))+(((283102)*((M)*(pow(r,2))))+((145251)*(pow(r,3)))))))))+(((pow(a,10))*((pow(r,3))*(((9623872)*(pow(M,3)))+(((45201792)*((pow(M,2))*(r)))+(((62850954)*((M)*(pow(r,2))))+((25680631)*(pow(r,3))))))))+((pow(a,8))*((pow(r,4))*(((1825024)*(pow(M,4)))+(((22897792)*((pow(M,3))*(r)))+(((92193936)*((pow(M,2))*(pow(r,2))))+(((129599848)*((M)*(pow(r,3))))+((56157139)*(pow(r,4)))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((r)*((((12155)*(pow(r,19)))+(((315)*((pow(a,18))*(((2)*(M))+(r))))+(((715)*((pow(a,2))*((pow(r,16))*(((98)*(M))+((121)*(r))))))+(((105)*((pow(a,16))*((r)*(((128)*(pow(M,2)))+(((176)*((M)*(r)))+((59)*(pow(r,2))))))))+(((572)*((pow(a,4))*((pow(r,13))*(((256)*(pow(M,2)))+(((724)*((M)*(r)))+((469)*(pow(r,2))))))))+(((84)*((pow(a,14))*((pow(r,2))*(((576)*(pow(M,3)))+(((1824)*((pow(M,2))*(r)))+(((1762)*((M)*(pow(r,2))))+((527)*(pow(r,3)))))))))+(((44)*((pow(a,6))*((pow(r,10))*(((3008)*(pow(M,3)))+(((15456)*((pow(M,2))*(r)))+(((23550)*((M)*(pow(r,2))))+((10765)*(pow(r,3)))))))))+(((12)*((pow(a,12))*((pow(r,3))*(((3072)*(pow(M,4)))+(((22272)*((pow(M,3))*(r)))+(((51648)*((pow(M,2))*(pow(r,2))))+(((46140)*((M)*(pow(r,3))))+((13765)*(pow(r,4))))))))))+(((2)*((pow(a,8))*((pow(r,7))*(((23552)*(pow(M,4)))+(((217600)*((pow(M,3))*(r)))+(((637248)*((pow(M,2))*(pow(r,2))))+(((710440)*((M)*(pow(r,3))))+((260885)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,4))*(((2048)*(pow(M,5)))+(((41984)*((pow(M,4))*(r)))+(((260864)*((pow(M,3))*(pow(r,2))))+(((610432)*((pow(M,2))*(pow(r,3))))+(((576130)*((M)*(pow(r,4))))+((184405)*(pow(r,5))))))))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_741(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[741] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.000006200396825396825396825396825396825396825396825396825396825396825396825396825396825396825396825396825"))*((HighPrecisionScalar("14.45683229480096030348812949272759280090342422926999516309349406590707742638136986899926938939715396"))*((pow(a,-15))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((15)*(pow(a,10)))+(((5)*((pow(a,8))*((((13)*(M))+((-115)*(r)))*(r))))+(((-63)*((pow(r,9))*((M)+((45)*(r)))))+(((-7)*((pow(a,2))*((pow(r,6))*(((16)*(pow(M,2)))+(((748)*((M)*(r)))+((1251)*(pow(r,2))))))))+(((-2)*((pow(a,6))*((pow(r,2))*(((24)*(pow(M,2)))+(((1754)*((M)*(r)))+((2141)*(pow(r,2))))))))+((-2)*((pow(a,4))*((pow(r,3))*(((16)*(pow(M,3)))+(((816)*((pow(M,2))*(r)))+(((4373)*((M)*(pow(r,2))))+((4807)*(pow(r,3))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((16384)*(pow(a,16)))+(((3828825)*(pow(r,16)))+(((75075)*((pow(a,2))*((pow(r,13))*(((226)*(M))+((295)*(r))))))+(((pow(a,14))*((r)*(((1145038)*(M))+((703591)*(r)))))+(((15015)*((pow(a,4))*((pow(r,10))*(((1656)*(pow(M,2)))+(((5124)*((M)*(r)))+((3599)*(pow(r,2))))))))+(((3)*((pow(a,12))*((pow(r,2))*(((2563832)*(pow(M,2)))+(((4853908)*((M)*(r)))+((2129753)*(pow(r,2))))))))+(((495)*((pow(a,6))*((pow(r,7))*(((26816)*(pow(M,3)))+(((160704)*((pow(M,2))*(r)))+(((283102)*((M)*(pow(r,2))))+((145251)*(pow(r,3)))))))))+(((pow(a,10))*((pow(r,3))*(((9623872)*(pow(M,3)))+(((45201792)*((pow(M,2))*(r)))+(((62850954)*((M)*(pow(r,2))))+((25680631)*(pow(r,3))))))))+((pow(a,8))*((pow(r,4))*(((1825024)*(pow(M,4)))+(((22897792)*((pow(M,3))*(r)))+(((92193936)*((pow(M,2))*(pow(r,2))))+(((129599848)*((M)*(pow(r,3))))+((56157139)*(pow(r,4)))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((r)*((((12155)*(pow(r,19)))+(((315)*((pow(a,18))*(((2)*(M))+(r))))+(((715)*((pow(a,2))*((pow(r,16))*(((98)*(M))+((121)*(r))))))+(((105)*((pow(a,16))*((r)*(((128)*(pow(M,2)))+(((176)*((M)*(r)))+((59)*(pow(r,2))))))))+(((572)*((pow(a,4))*((pow(r,13))*(((256)*(pow(M,2)))+(((724)*((M)*(r)))+((469)*(pow(r,2))))))))+(((84)*((pow(a,14))*((pow(r,2))*(((576)*(pow(M,3)))+(((1824)*((pow(M,2))*(r)))+(((1762)*((M)*(pow(r,2))))+((527)*(pow(r,3)))))))))+(((44)*((pow(a,6))*((pow(r,10))*(((3008)*(pow(M,3)))+(((15456)*((pow(M,2))*(r)))+(((23550)*((M)*(pow(r,2))))+((10765)*(pow(r,3)))))))))+(((12)*((pow(a,12))*((pow(r,3))*(((3072)*(pow(M,4)))+(((22272)*((pow(M,3))*(r)))+(((51648)*((pow(M,2))*(pow(r,2))))+(((46140)*((M)*(pow(r,3))))+((13765)*(pow(r,4))))))))))+(((2)*((pow(a,8))*((pow(r,7))*(((23552)*(pow(M,4)))+(((217600)*((pow(M,3))*(r)))+(((637248)*((pow(M,2))*(pow(r,2))))+(((710440)*((M)*(pow(r,3))))+((260885)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,4))*(((2048)*(pow(M,5)))+(((41984)*((pow(M,4))*(r)))+(((260864)*((pow(M,3))*(pow(r,2))))+(((610432)*((pow(M,2))*(pow(r,3))))+(((576130)*((M)*(pow(r,4))))+((184405)*(pow(r,5))))))))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_742(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[742] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00004650297619047619047619047619047619047619047619047619047619047619047619047619047619047619047619047619"))*((HighPrecisionScalar("1.125462867742275478874459293968140665923231810508323596843320248528839743353187215104283798292690589"))*((pow(a,-17))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((35)*(pow(a,14)))+(((385)*((pow(a,12))*(((M)+((-3)*(r)))*(r))))+(((-429)*((pow(r,13))*((M)+((45)*(r)))))+(((-21)*((pow(a,10))*((pow(r,2))*(((-12)*(pow(M,2)))+(((808)*((M)*(r)))+((817)*(pow(r,2))))))))+(((-33)*((pow(a,2))*((pow(r,10))*(((36)*(pow(M,2)))+(((1680)*((M)*(r)))+((2687)*(pow(r,2))))))))+(((-9)*((pow(a,4))*((pow(r,7))*(((96)*(pow(M,3)))+(((4752)*((pow(M,2))*(r)))+(((19717)*((M)*(pow(r,2))))+((18185)*(pow(r,3)))))))))+(((-1)*((pow(a,8))*((pow(r,3))*(((544)*(pow(M,3)))+(((31056)*((pow(M,2))*(r)))+(((102951)*((M)*(pow(r,2))))+((74947)*(pow(r,3)))))))))+((-1)*((pow(a,6))*((pow(r,4))*(((128)*(pow(M,4)))+(((7296)*((pow(M,3))*(r)))+(((72888)*((pow(M,2))*(pow(r,2))))+(((208040)*((M)*(pow(r,3))))+((153279)*(pow(r,4)))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((16384)*(pow(a,16)))+(((3828825)*(pow(r,16)))+(((75075)*((pow(a,2))*((pow(r,13))*(((226)*(M))+((295)*(r))))))+(((pow(a,14))*((r)*(((1145038)*(M))+((703591)*(r)))))+(((15015)*((pow(a,4))*((pow(r,10))*(((1656)*(pow(M,2)))+(((5124)*((M)*(r)))+((3599)*(pow(r,2))))))))+(((3)*((pow(a,12))*((pow(r,2))*(((2563832)*(pow(M,2)))+(((4853908)*((M)*(r)))+((2129753)*(pow(r,2))))))))+(((495)*((pow(a,6))*((pow(r,7))*(((26816)*(pow(M,3)))+(((160704)*((pow(M,2))*(r)))+(((283102)*((M)*(pow(r,2))))+((145251)*(pow(r,3)))))))))+(((pow(a,10))*((pow(r,3))*(((9623872)*(pow(M,3)))+(((45201792)*((pow(M,2))*(r)))+(((62850954)*((M)*(pow(r,2))))+((25680631)*(pow(r,3))))))))+((pow(a,8))*((pow(r,4))*(((1825024)*(pow(M,4)))+(((22897792)*((pow(M,3))*(r)))+(((92193936)*((pow(M,2))*(pow(r,2))))+(((129599848)*((M)*(pow(r,3))))+((56157139)*(pow(r,4)))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((r)*((((12155)*(pow(r,19)))+(((315)*((pow(a,18))*(((2)*(M))+(r))))+(((715)*((pow(a,2))*((pow(r,16))*(((98)*(M))+((121)*(r))))))+(((105)*((pow(a,16))*((r)*(((128)*(pow(M,2)))+(((176)*((M)*(r)))+((59)*(pow(r,2))))))))+(((572)*((pow(a,4))*((pow(r,13))*(((256)*(pow(M,2)))+(((724)*((M)*(r)))+((469)*(pow(r,2))))))))+(((84)*((pow(a,14))*((pow(r,2))*(((576)*(pow(M,3)))+(((1824)*((pow(M,2))*(r)))+(((1762)*((M)*(pow(r,2))))+((527)*(pow(r,3)))))))))+(((44)*((pow(a,6))*((pow(r,10))*(((3008)*(pow(M,3)))+(((15456)*((pow(M,2))*(r)))+(((23550)*((M)*(pow(r,2))))+((10765)*(pow(r,3)))))))))+(((12)*((pow(a,12))*((pow(r,3))*(((3072)*(pow(M,4)))+(((22272)*((pow(M,3))*(r)))+(((51648)*((pow(M,2))*(pow(r,2))))+(((46140)*((M)*(pow(r,3))))+((13765)*(pow(r,4))))))))))+(((2)*((pow(a,8))*((pow(r,7))*(((23552)*(pow(M,4)))+(((217600)*((pow(M,3))*(r)))+(((637248)*((pow(M,2))*(pow(r,2))))+(((710440)*((M)*(pow(r,3))))+((260885)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,4))*(((2048)*(pow(M,5)))+(((41984)*((pow(M,4))*(r)))+(((260864)*((pow(M,3))*(pow(r,2))))+(((610432)*((pow(M,2))*(pow(r,3))))+(((576130)*((M)*(pow(r,4))))+((184405)*(pow(r,5))))))))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_743(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[743] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.000007362971230158730158730158730158730158730158730158730158730158730158730158730158730158730158730158730"))*((pow(a,-19))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((((315)*(pow(a,18)))+(((105)*((pow(a,16))*((((61)*(M))+((-79)*(r)))*(r))))+(((-12155)*((pow(r,17))*((M)+((45)*(r)))))+(((-84)*((pow(a,14))*((pow(r,2))*(((-208)*(pow(M,2)))+(((2902)*((M)*(r)))+((2693)*(pow(r,2))))))))+(((-715)*((pow(a,2))*((pow(r,14))*(((64)*(pow(M,2)))+(((2984)*((M)*(r)))+((4663)*(pow(r,2))))))))+(((-572)*((pow(a,4))*((pow(r,11))*(((96)*(pow(M,3)))+(((4704)*((pow(M,2))*(r)))+(((17539)*((M)*(pow(r,2))))+((15125)*(pow(r,3)))))))))+(((-12)*((pow(a,12))*((pow(r,3))*(((480)*(pow(M,3)))+(((85728)*((pow(M,2))*(r)))+(((225487)*((M)*(pow(r,2))))+((133389)*(pow(r,3)))))))))+(((-44)*((pow(a,6))*((pow(r,8))*(((512)*(pow(M,4)))+(((27264)*((pow(M,3))*(r)))+(((198576)*((pow(M,2))*(pow(r,2))))+(((439846)*((M)*(pow(r,3))))+((281703)*(pow(r,4))))))))))+(((-2)*((pow(a,10))*((pow(r,4))*(((8192)*(pow(M,4)))+(((456448)*((pow(M,3))*(r)))+(((2801568)*((pow(M,2))*(pow(r,2))))+(((5147716)*((M)*(pow(r,3))))+((2731811)*(pow(r,4))))))))))+((-2)*((pow(a,8))*((pow(r,5))*(((1024)*(pow(M,5)))+(((66560)*((pow(M,4))*(r)))+(((1025920)*((pow(M,3))*(pow(r,2))))+(((5324672)*((pow(M,2))*(pow(r,3))))+(((9641041)*((M)*(pow(r,4))))+((5305529)*(pow(r,5))))))))))))))))))))*((expr[0])*(((((16384)*(pow(a,17)))+(((3828825)*((a)*(pow(r,16))))+(((75075)*((pow(a,3))*((pow(r,13))*(((226)*(M))+((295)*(r))))))+(((pow(a,15))*((r)*(((1145038)*(M))+((703591)*(r)))))+(((15015)*((pow(a,5))*((pow(r,10))*(((1656)*(pow(M,2)))+(((5124)*((M)*(r)))+((3599)*(pow(r,2))))))))+(((3)*((pow(a,13))*((pow(r,2))*(((2563832)*(pow(M,2)))+(((4853908)*((M)*(r)))+((2129753)*(pow(r,2))))))))+(((495)*((pow(a,7))*((pow(r,7))*(((26816)*(pow(M,3)))+(((160704)*((pow(M,2))*(r)))+(((283102)*((M)*(pow(r,2))))+((145251)*(pow(r,3)))))))))+(((pow(a,11))*((pow(r,3))*(((9623872)*(pow(M,3)))+(((45201792)*((pow(M,2))*(r)))+(((62850954)*((M)*(pow(r,2))))+((25680631)*(pow(r,3))))))))+((pow(a,9))*((pow(r,4))*(((1825024)*(pow(M,4)))+(((22897792)*((pow(M,3))*(r)))+(((92193936)*((pow(M,2))*(pow(r,2))))+(((129599848)*((M)*(pow(r,3))))+((56157139)*(pow(r,4)))))))))))))))))*(expr[0]))+((-315)*((((315)*(pow(a,16)))+(((12155)*(pow(r,16)))+(((840)*((pow(a,14))*((r)*(((8)*(M))+((7)*(r))))))+(((5720)*((pow(a,2))*((pow(r,13))*(((8)*(M))+((13)*(r))))))+(((1716)*((pow(a,4))*((pow(r,10))*(((32)*(pow(M,2)))+(((128)*((M)*(r)))+((113)*(pow(r,2))))))))+(((84)*((pow(a,12))*((pow(r,2))*(((288)*(pow(M,2)))+(((768)*((M)*(r)))+((457)*(pow(r,2))))))))+(((72)*((pow(a,10))*((pow(r,3))*(((256)*(pow(M,3)))+(((1728)*((pow(M,2))*(r)))+(((3272)*((M)*(pow(r,2))))+((1761)*(pow(r,3)))))))))+(((88)*((pow(a,6))*((pow(r,7))*(((256)*(pow(M,3)))+(((2112)*((pow(M,2))*(r)))+(((4872)*((M)*(pow(r,2))))+((3179)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((20480)*((pow(M,3))*(r)))+(((115584)*((pow(M,2))*(pow(r,2))))+(((216320)*((M)*(pow(r,3))))+((121009)*(pow(r,4))))))))))))))))))*((expr[1])*((expr[2])*(expr[3])))))))))))).cast<double>());
}

void compute_coeffs_744(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[744] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.000007362971230158730158730158730158730158730158730158730158730158730158730158730158730158730158730158730"))*((pow(a,-17))*((pow(r,-1))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((((315)*(pow(a,16)))+(((12155)*(pow(r,16)))+(((840)*((pow(a,14))*((r)*(((8)*(M))+((7)*(r))))))+(((5720)*((pow(a,2))*((pow(r,13))*(((8)*(M))+((13)*(r))))))+(((1716)*((pow(a,4))*((pow(r,10))*(((32)*(pow(M,2)))+(((128)*((M)*(r)))+((113)*(pow(r,2))))))))+(((84)*((pow(a,12))*((pow(r,2))*(((288)*(pow(M,2)))+(((768)*((M)*(r)))+((457)*(pow(r,2))))))))+(((72)*((pow(a,10))*((pow(r,3))*(((256)*(pow(M,3)))+(((1728)*((pow(M,2))*(r)))+(((3272)*((M)*(pow(r,2))))+((1761)*(pow(r,3)))))))))+(((88)*((pow(a,6))*((pow(r,7))*(((256)*(pow(M,3)))+(((2112)*((pow(M,2))*(r)))+(((4872)*((M)*(pow(r,2))))+((3179)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((20480)*((pow(M,3))*(r)))+(((115584)*((pow(M,2))*(pow(r,2))))+(((216320)*((M)*(pow(r,3))))+((121009)*(pow(r,4))))))))))))))))))*((expr[0])*(((((16384)*(pow(a,17)))+(((3828825)*((a)*(pow(r,16))))+(((75075)*((pow(a,3))*((pow(r,13))*(((226)*(M))+((295)*(r))))))+(((pow(a,15))*((r)*(((1145038)*(M))+((703591)*(r)))))+(((15015)*((pow(a,5))*((pow(r,10))*(((1656)*(pow(M,2)))+(((5124)*((M)*(r)))+((3599)*(pow(r,2))))))))+(((3)*((pow(a,13))*((pow(r,2))*(((2563832)*(pow(M,2)))+(((4853908)*((M)*(r)))+((2129753)*(pow(r,2))))))))+(((495)*((pow(a,7))*((pow(r,7))*(((26816)*(pow(M,3)))+(((160704)*((pow(M,2))*(r)))+(((283102)*((M)*(pow(r,2))))+((145251)*(pow(r,3)))))))))+(((pow(a,11))*((pow(r,3))*(((9623872)*(pow(M,3)))+(((45201792)*((pow(M,2))*(r)))+(((62850954)*((M)*(pow(r,2))))+((25680631)*(pow(r,3))))))))+((pow(a,9))*((pow(r,4))*(((1825024)*(pow(M,4)))+(((22897792)*((pow(M,3))*(r)))+(((92193936)*((pow(M,2))*(pow(r,2))))+(((129599848)*((M)*(pow(r,3))))+((56157139)*(pow(r,4)))))))))))))))))*(expr[0]))+((-315)*((((315)*(pow(a,16)))+(((12155)*(pow(r,16)))+(((840)*((pow(a,14))*((r)*(((8)*(M))+((7)*(r))))))+(((5720)*((pow(a,2))*((pow(r,13))*(((8)*(M))+((13)*(r))))))+(((1716)*((pow(a,4))*((pow(r,10))*(((32)*(pow(M,2)))+(((128)*((M)*(r)))+((113)*(pow(r,2))))))))+(((84)*((pow(a,12))*((pow(r,2))*(((288)*(pow(M,2)))+(((768)*((M)*(r)))+((457)*(pow(r,2))))))))+(((72)*((pow(a,10))*((pow(r,3))*(((256)*(pow(M,3)))+(((1728)*((pow(M,2))*(r)))+(((3272)*((M)*(pow(r,2))))+((1761)*(pow(r,3)))))))))+(((88)*((pow(a,6))*((pow(r,7))*(((256)*(pow(M,3)))+(((2112)*((pow(M,2))*(r)))+(((4872)*((M)*(pow(r,2))))+((3179)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((20480)*((pow(M,3))*(r)))+(((115584)*((pow(M,2))*(pow(r,2))))+(((216320)*((M)*(pow(r,3))))+((121009)*(pow(r,4))))))))))))))))))*((expr[1])*((expr[2])*(expr[3])))))))))))).cast<double>());
}
