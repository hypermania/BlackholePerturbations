
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_280(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[280] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.1250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.7464200272921789327684895627734299784925191931283115959083948141392236061114902086988149554958611532"))*((pow(a,-10))*((M)*((r)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((((3)*(pow(a,4)))+(((7)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((5)*(r))))))))*(((-128)*(pow(a,15)))+(((3465)*((a)*((((2)*(M))+((-1)*(r)))*(pow(r,13)))))+(((-1)*((pow(a,13))*((r)*(((3302)*(M))+((2675)*(r))))))+(((420)*((pow(a,3))*((pow(r,10))*(((47)*(pow(M,2)))+(((52)*((M)*(r)))+((-46)*(pow(r,2))))))))+(((-12)*((pow(a,11))*((pow(r,2))*(((-87)*(pow(M,2)))+(((1564)*((M)*(r)))+((1240)*(pow(r,2))))))))+(((pow(a,9))*((pow(r,3))*(((11824)*(pow(M,3)))+(((21912)*((pow(M,2))*(r)))+(((-35442)*((M)*(pow(r,2))))+((-38795)*(pow(r,3))))))))+(((21)*((pow(a,5))*((pow(r,7))*(((624)*(pow(M,3)))+(((2824)*((pow(M,2))*(r)))+(((718)*((M)*(pow(r,2))))+((-2133)*(pow(r,3)))))))))+(((8)*((pow(a,7))*((pow(r,4))*(((80)*(pow(M,4)))+(((3116)*((pow(M,3))*(r)))+(((7554)*((pow(M,2))*(pow(r,2))))+(((-2476)*((M)*(pow(r,3))))+((-6925)*(pow(r,4))))))))))+((105)*((pow((pow(a,2))+(pow(r,2)),2))*((((5)*(pow(a,8)))+(((33)*(pow(r,8)))+(((40)*((pow(a,6))*((r)*((M)+(r)))))+(((24)*((pow(a,2))*((pow(r,5))*(((3)*(M))+((4)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(pow(((4)*(M))+((7)*(r)),2)))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_281(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[281] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.004464285714285714285714285714285714285714285714285714285714285714285714285714285714285714285714285714"))*((HighPrecisionScalar("1.303840481040529742916594311485836883305618755782013091790079369896765385576397896545183528886788498"))*((pow(a,-12))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((3)*(pow(a,4)))+(((7)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((5)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((2048)*(pow(a,16)))+(((225225)*(pow(r,16)))+(((15015)*((pow(a,2))*((pow(r,13))*(((58)*(M))+((91)*(r))))))+(((pow(a,14))*((r)*(((109022)*(M))+((70895)*(r)))))+(((1155)*((pow(a,4))*((pow(r,10))*(((888)*(pow(M,2)))+(((3636)*((M)*(r)))+((3043)*(pow(r,2))))))))+(((3)*((pow(a,12))*((pow(r,2))*(((167512)*(pow(M,2)))+(((385556)*((M)*(r)))+((188185)*(pow(r,2))))))))+(((9)*((pow(a,6))*((pow(r,7))*(((39744)*(pow(M,3)))+(((396224)*((pow(M,2))*(r)))+(((911458)*((M)*(pow(r,2))))+((551357)*(pow(r,3)))))))))+(((pow(a,10))*((pow(r,3))*(((339776)*(pow(M,3)))+(((2519808)*((pow(M,2))*(r)))+(((4402842)*((M)*(pow(r,2))))+((2055695)*(pow(r,3))))))))+((pow(a,8))*((pow(r,4))*(((8960)*(pow(M,4)))+(((697472)*((pow(M,3))*(r)))+(((4557648)*((pow(M,2))*(pow(r,2))))+(((8229608)*((M)*(pow(r,3))))+((4148675)*(pow(r,4)))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((r)*((pow((pow(a,2))+(pow(r,2)),2))*((((715)*(pow(r,15)))+(((35)*((pow(a,14))*(((2)*(M))+(r))))+(((143)*((pow(a,2))*((pow(r,12))*(((26)*(M))+((27)*(r))))))+(((35)*((pow(a,12))*((r)*(((32)*(pow(M,2)))+(((44)*((M)*(r)))+((15)*(pow(r,2))))))))+(((11)*((pow(a,4))*((pow(r,9))*(((608)*(pow(M,2)))+(((1420)*((M)*(r)))+((789)*(pow(r,2))))))))+(((7)*((pow(a,10))*((pow(r,2))*(((384)*(pow(M,3)))+(((1216)*((pow(M,2))*(r)))+(((1238)*((M)*(pow(r,2))))+((393)*(pow(r,3)))))))))+(((pow(a,6))*((pow(r,6))*(((4736)*(pow(M,3)))+(((19648)*((pow(M,2))*(r)))+(((25882)*((M)*(pow(r,2))))+((10441)*(pow(r,3))))))))+((pow(a,8))*((pow(r,3))*(((1024)*(pow(M,4)))+(((7424)*((pow(M,3))*(r)))+(((20352)*((pow(M,2))*(pow(r,2))))+(((21176)*((M)*(pow(r,3))))+((7169)*(pow(r,4))))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_282(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[282] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.007812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.04652421051992354337498703587766604544580913088278088835270993504928320039737946524516015724582979050"))*((pow(a,-14))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((3)*(pow(a,4)))+(((7)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((5)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((32768)*(pow(a,20)))+(((14549535)*(pow(r,20)))+(((255255)*((pow(a,2))*((pow(r,17))*(((278)*(M))+((431)*(r))))))+(((5)*((pow(a,18))*((r)*(((568042)*(M))+((349557)*(r))))))+(((12012)*((pow(a,4))*((pow(r,14))*(((9954)*(pow(M,2)))+(((37306)*((M)*(r)))+((30411)*(pow(r,2))))))))+(((5)*((pow(a,16))*((pow(r,2))*(((5026200)*(pow(M,2)))+(((9570536)*((M)*(r)))+((4107651)*(pow(r,2))))))))+(((1716)*((pow(a,6))*((pow(r,11))*(((46608)*(pow(M,3)))+(((348156)*((pow(M,2))*(r)))+(((705080)*((M)*(pow(r,2))))+((406635)*(pow(r,3)))))))))+(((4)*((pow(a,14))*((pow(r,3))*(((11537744)*(pow(M,3)))+(((55003116)*((pow(M,2))*(r)))+(((72514028)*((M)*(pow(r,2))))+((27771703)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((783488)*(pow(M,4)))+(((12974720)*((pow(M,3))*(r)))+(((55432812)*((pow(M,2))*(pow(r,2))))+(((82462820)*((M)*(pow(r,3))))+((38323295)*(pow(r,4))))))))))+(((4)*((pow(a,12))*((pow(r,4))*(((4147904)*(pow(M,4)))+(((54446784)*((pow(M,3))*(r)))+(((186996186)*((pow(M,2))*(pow(r,2))))+(((225694490)*((M)*(pow(r,3))))+((85876545)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,5))*(((129024)*(pow(M,5)))+(((16914176)*((pow(M,4))*(r)))+(((188550336)*((pow(M,3))*(pow(r,2))))+(((647378448)*((pow(M,2))*(pow(r,3))))+(((819578930)*((M)*(pow(r,4))))+((333200499)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((r)*((pow((pow(a,2))+(pow(r,2)),2))*((((4199)*(pow(r,19)))+(((63)*((pow(a,18))*(((2)*(M))+(r))))+(((221)*((pow(a,2))*((pow(r,16))*(((118)*(M))+((131)*(r))))))+(((21)*((pow(a,16))*((r)*(((160)*(pow(M,2)))+(((208)*((M)*(r)))+((67)*(pow(r,2))))))))+(((52)*((pow(a,4))*((pow(r,13))*(((1160)*(pow(M,2)))+(((2852)*((M)*(r)))+((1667)*(pow(r,2))))))))+(((84)*((pow(a,14))*((pow(r,2))*(((192)*(pow(M,3)))+(((528)*((pow(M,2))*(r)))+(((466)*((M)*(pow(r,2))))+((131)*(pow(r,3)))))))))+(((52)*((pow(a,6))*((pow(r,10))*(((1216)*(pow(M,3)))+(((5136)*((pow(M,2))*(r)))+(((6834)*((M)*(pow(r,2))))+((2831)*(pow(r,3)))))))))+(((12)*((pow(a,12))*((pow(r,3))*(((1536)*(pow(M,4)))+(((8448)*((pow(M,3))*(r)))+(((16584)*((pow(M,2))*(pow(r,2))))+(((13284)*((M)*(pow(r,3))))+((3673)*(pow(r,4))))))))))+(((2)*((pow(a,8))*((pow(r,7))*(((14336)*(pow(M,4)))+(((97792)*((pow(M,3))*(r)))+(((236784)*((pow(M,2))*(pow(r,2))))+(((231928)*((M)*(pow(r,3))))+((77609)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,4))*(((2048)*(pow(M,5)))+(((23552)*((pow(M,4))*(r)))+(((108800)*((pow(M,3))*(pow(r,2))))+(((212416)*((pow(M,2))*(pow(r,3))))+(((177610)*((M)*(pow(r,4))))+((52177)*(pow(r,5))))))))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_283(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[283] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.7500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-8))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((7)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((3)*(M))+((2)*(r))))))))*(((a)*((r)*(((105)*((pow(r,12))*(((-2)*(M))+(r))))+(((81)*((pow(a,12))*(((2)*(M))+(r))))+(((10)*((pow(a,2))*((pow(r,9))*(((-50)*(pow(M,2)))+(((-76)*((M)*(r)))+((61)*(pow(r,2))))))))+(((pow(a,10))*(((-212)*((pow(M,2))*(r)))+(((760)*((M)*(pow(r,2))))+((514)*(pow(r,3))))))+(((pow(a,8))*((pow(r,2))*(((-256)*(pow(M,3)))+(((-1232)*((pow(M,2))*(r)))+(((1178)*((M)*(pow(r,2))))+((1351)*(pow(r,3))))))))+(((pow(a,4))*((pow(r,6))*(((-128)*(pow(M,3)))+(((-1808)*((pow(M,2))*(r)))+(((-746)*((M)*(pow(r,2))))+((1471)*(pow(r,3))))))))+((4)*((pow(a,6))*((pow(r,3))*(((16)*(pow(M,4)))+(((-96)*((pow(M,3))*(r)))+(((-582)*((pow(M,2))*(pow(r,2))))+(((96)*((M)*(pow(r,3))))+((471)*(pow(r,4))))))))))))))))))+((-15)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,4))+(((7)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((3)*(M))+((2)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_284(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[284] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.06250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.669045920792560372951740698944006107565542879767808631529961041172119508474714341804554631752452914"))*((pow(a,-10))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((7)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((3)*(M))+((2)*(r))))))))*(((a)*((r)*(((3465)*((pow(r,16))*(((-2)*(M))+(r))))+(((919)*((pow(a,16))*(((2)*(M))+(r))))+(((210)*((pow(a,2))*((pow(r,13))*(((-118)*(pow(M,2)))+(((-146)*((M)*(r)))+((119)*(pow(r,2))))))))+(((2)*((pow(a,14))*((r)*(((2854)*(pow(M,2)))+(((10206)*((M)*(r)))+((4849)*(pow(r,2))))))))+(((-42)*((pow(a,4))*((pow(r,10))*(((552)*(pow(M,3)))+(((2712)*((pow(M,2))*(r)))+(((904)*((M)*(pow(r,2))))+((-1859)*(pow(r,3)))))))))+(((2)*((pow(a,12))*((pow(r,2))*(((-8520)*(pow(M,3)))+(((4344)*((pow(M,2))*(r)))+(((39320)*((M)*(pow(r,2))))+((21185)*(pow(r,3)))))))))+(((2)*((pow(a,10))*((pow(r,3))*(((-1856)*(pow(M,4)))+(((-37792)*((pow(M,3))*(r)))+(((-23874)*((pow(M,2))*(pow(r,2))))+(((72130)*((M)*(pow(r,3))))+((51005)*(pow(r,4))))))))))+(((2)*((pow(a,6))*((pow(r,7))*(((-1216)*(pow(M,4)))+(((-43936)*((pow(M,3))*(r)))+(((-100734)*((pow(M,2))*(pow(r,2))))+(((14594)*((M)*(pow(r,3))))+((68867)*(pow(r,4))))))))))+((4)*((pow(a,8))*((pow(r,4))*(((128)*(pow(M,5)))+(((-1536)*((pow(M,4))*(r)))+(((-30808)*((pow(M,3))*(pow(r,2))))+(((-40768)*((pow(M,2))*(pow(r,3))))+(((31905)*((M)*(pow(r,4))))+((37400)*(pow(r,5)))))))))))))))))))))+((-105)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,8))+(((33)*(pow(r,8)))+(((4)*((pow(a,6))*((r)*(((8)*(M))+((5)*(r))))))+(((12)*((pow(a,2))*((pow(r,5))*(((8)*(M))+((7)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((35)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

}
