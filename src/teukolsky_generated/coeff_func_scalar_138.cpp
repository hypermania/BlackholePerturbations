
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_690(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[690] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0001656668526785714285714285714285714285714285714285714285714285714285714285714285714285714285714285714"))*((pow(a,-17))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((229376)*(pow(a,32)))+(((765765)*(pow(r,32)))+(((255255)*((pow(a,2))*((pow(r,29))*(((2)*(M))+((47)*(r))))))+(((7)*((pow(a,30))*((r)*(((371034)*(M))+((709805)*(r))))))+(((51051)*((pow(a,4))*((pow(r,26))*(((-8)*(pow(M,2)))+(((148)*((M)*(r)))+((1723)*(pow(r,2))))))))+(((21)*((pow(a,28))*((pow(r,2))*(((-359384)*(pow(M,2)))+(((1372108)*((M)*(r)))+((2148459)*(pow(r,2))))))))+(((7293)*((pow(a,6))*((pow(r,23))*(((64)*(pow(M,3)))+(((-768)*((pow(M,2))*(r)))+(((7146)*((M)*(pow(r,2))))+((54921)*(pow(r,3)))))))))+(((7)*((pow(a,26))*((pow(r,3))*(((2678976)*(pow(M,3)))+(((-8919360)*((pow(M,2))*(r)))+(((21757350)*((M)*(pow(r,2))))+((34390705)*(pow(r,3)))))))))+(((2431)*((pow(a,8))*((pow(r,20))*(((-256)*(pow(M,4)))+(((2432)*((pow(M,3))*(r)))+(((-14640)*((pow(M,2))*(pow(r,2))))+(((91400)*((M)*(pow(r,3))))+((521375)*(pow(r,4))))))))))+(((pow(a,24))*((pow(r,4))*(((-33912576)*(pow(M,4)))+(((119703168)*((pow(M,3))*(r)))+(((-239553360)*((pow(M,2))*(pow(r,2))))+(((508542840)*((M)*(pow(r,3))))+((864994075)*(pow(r,4)))))))))+(((221)*((pow(a,10))*((pow(r,17))*(((4096)*(pow(M,5)))+(((-32768)*((pow(M,4))*(r)))+(((155968)*((pow(M,3))*(pow(r,2))))+(((-628160)*((pow(M,2))*(pow(r,3))))+(((2962150)*((M)*(pow(r,4))))+((13367545)*(pow(r,5)))))))))))+(((pow(a,22))*((pow(r,5))*(((42471424)*(pow(M,5)))+(((-165122048)*((pow(M,4))*(r)))+(((339629632)*((pow(M,3))*(pow(r,2))))+(((-568844800)*((pow(M,2))*(pow(r,3))))+(((1196393270)*((M)*(pow(r,4))))+((2246479391)*(pow(r,5))))))))))+(((17)*((pow(a,12))*((pow(r,14))*(((-81920)*(pow(M,6)))+(((565248)*((pow(M,5))*(r)))+(((-2264064)*((pow(M,4))*(pow(r,2))))+(((7200256)*((pow(M,3))*(pow(r,3))))+(((-21834120)*((pow(M,2))*(pow(r,4))))+(((83015940)*((M)*(pow(r,5))))+((308466165)*(pow(r,6))))))))))))+(((pow(a,20))*((pow(r,6))*(((-34881536)*(pow(M,6)))+(((150183936)*((pow(M,5))*(r)))+(((-337107968)*((pow(M,4))*(pow(r,2))))+(((570859008)*((pow(M,3))*(pow(r,3))))+(((-938467560)*((pow(M,2))*(pow(r,4))))+(((2091324068)*((M)*(pow(r,5))))+((4392521995)*(pow(r,6)))))))))))+(((17)*((pow(a,14))*((pow(r,11))*(((131072)*(pow(M,7)))+(((-786432)*((pow(M,6))*(r)))+(((2715648)*((pow(M,5))*(pow(r,2))))+(((-7262208)*((pow(M,4))*(pow(r,3))))+(((17363584)*((pow(M,3))*(pow(r,4))))+(((-42303744)*((pow(M,2))*(pow(r,5))))+(((135213554)*((M)*(pow(r,6))))+((425078129)*(pow(r,7)))))))))))))+(((pow(a,18))*((pow(r,7))*(((16908288)*(pow(M,7)))+(((-80347136)*((pow(M,6))*(r)))+(((202616832)*((pow(M,5))*(pow(r,2))))+(((-380215296)*((pow(M,4))*(pow(r,3))))+(((640341632)*((pow(M,3))*(pow(r,4))))+(((-1138187904)*((pow(M,2))*(pow(r,5))))+(((2790876858)*((M)*(pow(r,6))))+((6623760059)*(pow(r,7))))))))))))+((pow(a,16))*((pow(r,8))*(((-3670016)*(pow(M,8)))+(((19136512)*((pow(M,7))*(r)))+(((-57442304)*((pow(M,6))*(pow(r,2))))+(((132366336)*((pow(M,5))*(pow(r,3))))+(((-265904640)*((pow(M,4))*(pow(r,4))))+(((509961984)*((pow(M,3))*(pow(r,5))))+(((-1040309984)*((pow(M,2))*(pow(r,6))))+(((2878359568)*((M)*(pow(r,7))))+((7806057343)*(pow(r,8)))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((765765)*((r)*((pow((pow(a,2))+(pow(r,2)),16))*(((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_691(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[691] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00008283342633928571428571428571428571428571428571428571428571428571428571428571428571428571428571428571"))*((pow(a,-19))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((229376)*(pow(a,32)))+(((765765)*(pow(r,32)))+(((255255)*((pow(a,2))*((pow(r,29))*(((2)*(M))+((47)*(r))))))+(((7)*((pow(a,30))*((r)*(((371034)*(M))+((709805)*(r))))))+(((51051)*((pow(a,4))*((pow(r,26))*(((-8)*(pow(M,2)))+(((148)*((M)*(r)))+((1723)*(pow(r,2))))))))+(((21)*((pow(a,28))*((pow(r,2))*(((-359384)*(pow(M,2)))+(((1372108)*((M)*(r)))+((2148459)*(pow(r,2))))))))+(((7293)*((pow(a,6))*((pow(r,23))*(((64)*(pow(M,3)))+(((-768)*((pow(M,2))*(r)))+(((7146)*((M)*(pow(r,2))))+((54921)*(pow(r,3)))))))))+(((7)*((pow(a,26))*((pow(r,3))*(((2678976)*(pow(M,3)))+(((-8919360)*((pow(M,2))*(r)))+(((21757350)*((M)*(pow(r,2))))+((34390705)*(pow(r,3)))))))))+(((2431)*((pow(a,8))*((pow(r,20))*(((-256)*(pow(M,4)))+(((2432)*((pow(M,3))*(r)))+(((-14640)*((pow(M,2))*(pow(r,2))))+(((91400)*((M)*(pow(r,3))))+((521375)*(pow(r,4))))))))))+(((pow(a,24))*((pow(r,4))*(((-33912576)*(pow(M,4)))+(((119703168)*((pow(M,3))*(r)))+(((-239553360)*((pow(M,2))*(pow(r,2))))+(((508542840)*((M)*(pow(r,3))))+((864994075)*(pow(r,4)))))))))+(((221)*((pow(a,10))*((pow(r,17))*(((4096)*(pow(M,5)))+(((-32768)*((pow(M,4))*(r)))+(((155968)*((pow(M,3))*(pow(r,2))))+(((-628160)*((pow(M,2))*(pow(r,3))))+(((2962150)*((M)*(pow(r,4))))+((13367545)*(pow(r,5)))))))))))+(((pow(a,22))*((pow(r,5))*(((42471424)*(pow(M,5)))+(((-165122048)*((pow(M,4))*(r)))+(((339629632)*((pow(M,3))*(pow(r,2))))+(((-568844800)*((pow(M,2))*(pow(r,3))))+(((1196393270)*((M)*(pow(r,4))))+((2246479391)*(pow(r,5))))))))))+(((17)*((pow(a,12))*((pow(r,14))*(((-81920)*(pow(M,6)))+(((565248)*((pow(M,5))*(r)))+(((-2264064)*((pow(M,4))*(pow(r,2))))+(((7200256)*((pow(M,3))*(pow(r,3))))+(((-21834120)*((pow(M,2))*(pow(r,4))))+(((83015940)*((M)*(pow(r,5))))+((308466165)*(pow(r,6))))))))))))+(((pow(a,20))*((pow(r,6))*(((-34881536)*(pow(M,6)))+(((150183936)*((pow(M,5))*(r)))+(((-337107968)*((pow(M,4))*(pow(r,2))))+(((570859008)*((pow(M,3))*(pow(r,3))))+(((-938467560)*((pow(M,2))*(pow(r,4))))+(((2091324068)*((M)*(pow(r,5))))+((4392521995)*(pow(r,6)))))))))))+(((17)*((pow(a,14))*((pow(r,11))*(((131072)*(pow(M,7)))+(((-786432)*((pow(M,6))*(r)))+(((2715648)*((pow(M,5))*(pow(r,2))))+(((-7262208)*((pow(M,4))*(pow(r,3))))+(((17363584)*((pow(M,3))*(pow(r,4))))+(((-42303744)*((pow(M,2))*(pow(r,5))))+(((135213554)*((M)*(pow(r,6))))+((425078129)*(pow(r,7)))))))))))))+(((pow(a,18))*((pow(r,7))*(((16908288)*(pow(M,7)))+(((-80347136)*((pow(M,6))*(r)))+(((202616832)*((pow(M,5))*(pow(r,2))))+(((-380215296)*((pow(M,4))*(pow(r,3))))+(((640341632)*((pow(M,3))*(pow(r,4))))+(((-1138187904)*((pow(M,2))*(pow(r,5))))+(((2790876858)*((M)*(pow(r,6))))+((6623760059)*(pow(r,7))))))))))))+((pow(a,16))*((pow(r,8))*(((-3670016)*(pow(M,8)))+(((19136512)*((pow(M,7))*(r)))+(((-57442304)*((pow(M,6))*(pow(r,2))))+(((132366336)*((pow(M,5))*(pow(r,3))))+(((-265904640)*((pow(M,4))*(pow(r,4))))+(((509961984)*((pow(M,3))*(pow(r,5))))+(((-1040309984)*((pow(M,2))*(pow(r,6))))+(((2878359568)*((M)*(pow(r,7))))+((7806057343)*(pow(r,8)))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((765765)*((r)*((pow((pow(a,2))+(pow(r,2)),16))*(((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_692(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[692] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.002650669642857142857142857142857142857142857142857142857142857142857142857142857142857142857142857143"))*((pow(a,-18))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((229376)*(pow(a,32)))+(((765765)*(pow(r,32)))+(((255255)*((pow(a,2))*((pow(r,29))*(((2)*(M))+((47)*(r))))))+(((7)*((pow(a,30))*((r)*(((371034)*(M))+((709805)*(r))))))+(((51051)*((pow(a,4))*((pow(r,26))*(((-8)*(pow(M,2)))+(((148)*((M)*(r)))+((1723)*(pow(r,2))))))))+(((21)*((pow(a,28))*((pow(r,2))*(((-359384)*(pow(M,2)))+(((1372108)*((M)*(r)))+((2148459)*(pow(r,2))))))))+(((7293)*((pow(a,6))*((pow(r,23))*(((64)*(pow(M,3)))+(((-768)*((pow(M,2))*(r)))+(((7146)*((M)*(pow(r,2))))+((54921)*(pow(r,3)))))))))+(((7)*((pow(a,26))*((pow(r,3))*(((2678976)*(pow(M,3)))+(((-8919360)*((pow(M,2))*(r)))+(((21757350)*((M)*(pow(r,2))))+((34390705)*(pow(r,3)))))))))+(((2431)*((pow(a,8))*((pow(r,20))*(((-256)*(pow(M,4)))+(((2432)*((pow(M,3))*(r)))+(((-14640)*((pow(M,2))*(pow(r,2))))+(((91400)*((M)*(pow(r,3))))+((521375)*(pow(r,4))))))))))+(((pow(a,24))*((pow(r,4))*(((-33912576)*(pow(M,4)))+(((119703168)*((pow(M,3))*(r)))+(((-239553360)*((pow(M,2))*(pow(r,2))))+(((508542840)*((M)*(pow(r,3))))+((864994075)*(pow(r,4)))))))))+(((221)*((pow(a,10))*((pow(r,17))*(((4096)*(pow(M,5)))+(((-32768)*((pow(M,4))*(r)))+(((155968)*((pow(M,3))*(pow(r,2))))+(((-628160)*((pow(M,2))*(pow(r,3))))+(((2962150)*((M)*(pow(r,4))))+((13367545)*(pow(r,5)))))))))))+(((pow(a,22))*((pow(r,5))*(((42471424)*(pow(M,5)))+(((-165122048)*((pow(M,4))*(r)))+(((339629632)*((pow(M,3))*(pow(r,2))))+(((-568844800)*((pow(M,2))*(pow(r,3))))+(((1196393270)*((M)*(pow(r,4))))+((2246479391)*(pow(r,5))))))))))+(((17)*((pow(a,12))*((pow(r,14))*(((-81920)*(pow(M,6)))+(((565248)*((pow(M,5))*(r)))+(((-2264064)*((pow(M,4))*(pow(r,2))))+(((7200256)*((pow(M,3))*(pow(r,3))))+(((-21834120)*((pow(M,2))*(pow(r,4))))+(((83015940)*((M)*(pow(r,5))))+((308466165)*(pow(r,6))))))))))))+(((pow(a,20))*((pow(r,6))*(((-34881536)*(pow(M,6)))+(((150183936)*((pow(M,5))*(r)))+(((-337107968)*((pow(M,4))*(pow(r,2))))+(((570859008)*((pow(M,3))*(pow(r,3))))+(((-938467560)*((pow(M,2))*(pow(r,4))))+(((2091324068)*((M)*(pow(r,5))))+((4392521995)*(pow(r,6)))))))))))+(((17)*((pow(a,14))*((pow(r,11))*(((131072)*(pow(M,7)))+(((-786432)*((pow(M,6))*(r)))+(((2715648)*((pow(M,5))*(pow(r,2))))+(((-7262208)*((pow(M,4))*(pow(r,3))))+(((17363584)*((pow(M,3))*(pow(r,4))))+(((-42303744)*((pow(M,2))*(pow(r,5))))+(((135213554)*((M)*(pow(r,6))))+((425078129)*(pow(r,7)))))))))))))+(((pow(a,18))*((pow(r,7))*(((16908288)*(pow(M,7)))+(((-80347136)*((pow(M,6))*(r)))+(((202616832)*((pow(M,5))*(pow(r,2))))+(((-380215296)*((pow(M,4))*(pow(r,3))))+(((640341632)*((pow(M,3))*(pow(r,4))))+(((-1138187904)*((pow(M,2))*(pow(r,5))))+(((2790876858)*((M)*(pow(r,6))))+((6623760059)*(pow(r,7))))))))))))+((pow(a,16))*((pow(r,8))*(((-3670016)*(pow(M,8)))+(((19136512)*((pow(M,7))*(r)))+(((-57442304)*((pow(M,6))*(pow(r,2))))+(((132366336)*((pow(M,5))*(pow(r,3))))+(((-265904640)*((pow(M,4))*(pow(r,4))))+(((509961984)*((pow(M,3))*(pow(r,5))))+(((-1040309984)*((pow(M,2))*(pow(r,6))))+(((2878359568)*((M)*(pow(r,7))))+((7806057343)*(pow(r,8)))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((765765)*((r)*((pow((pow(a,2))+(pow(r,2)),16))*(((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_693(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[693] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00001743861607142857142857142857142857142857142857142857142857142857142857142857142857142857142857142857"))*((HighPrecisionScalar("3.082207001484488225125096190727122112617812011722287272437286036229199825131832106483364899599449973"))*((pow(a,-17))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,4)))+(((-3)*((pow(a,2))*((r)*(((2)*(M))+((13)*(r))))))+((2)*((pow(r,2))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2)))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((413707)*(pow(a,28)))+(((765765)*(pow(r,28)))+(((420420)*((pow(a,2))*((pow(r,25))*((M)+((25)*(r))))))+(((28)*((pow(a,26))*((r)*(((44679)*(M))+((229193)*(r))))))+(((3003)*((pow(a,4))*((pow(r,22))*(((-96)*(pow(M,2)))+(((1776)*((M)*(r)))+((22271)*(pow(r,2))))))))+(((7)*((pow(a,24))*((pow(r,2))*(((-288288)*(pow(M,2)))+(((1856304)*((M)*(r)))+((6467773)*(pow(r,2))))))))+(((3432)*((pow(a,6))*((pow(r,19))*(((80)*(pow(M,3)))+(((-960)*((pow(M,2))*(r)))+(((9069)*((M)*(pow(r,2))))+((76178)*(pow(r,3)))))))))+(((8)*((pow(a,22))*((pow(r,3))*(((381456)*(pow(M,3)))+(((-1950336)*((pow(M,2))*(r)))+(((7832169)*((M)*(pow(r,2))))+((24213278)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((-2048)*(pow(M,4)))+(((19456)*((pow(M,3))*(r)))+(((-119712)*((pow(M,2))*(pow(r,2))))+(((773104)*((M)*(pow(r,3))))+((4903903)*(pow(r,4))))))))))+(((pow(a,20))*((pow(r,4))*(((-3467264)*(pow(M,4)))+(((17478656)*((pow(M,3))*(r)))+(((-54814368)*((pow(M,2))*(pow(r,2))))+(((185385488)*((M)*(pow(r,3))))+((563697471)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,13))*(((6144)*(pow(M,5)))+(((-49152)*((pow(M,4))*(r)))+(((242048)*((pow(M,3))*(pow(r,2))))+(((-1025664)*((pow(M,2))*(pow(r,3))))+(((5122299)*((M)*(pow(r,4))))+((26246633)*(pow(r,5)))))))))))+(((4)*((pow(a,18))*((pow(r,5))*(((669696)*(pow(M,5)))+(((-3526656)*((pow(M,4))*(r)))+(((10900352)*((pow(M,3))*(pow(r,2))))+(((-28907904)*((pow(M,2))*(pow(r,3))))+(((93626463)*((M)*(pow(r,4))))+((295846019)*(pow(r,5)))))))))))+(((pow(a,16))*((pow(r,6))*(((-1245184)*(pow(M,6)))+(((6979584)*((pow(M,5))*(r)))+(((-23193600)*((pow(M,4))*(pow(r,2))))+(((62336000)*((pow(M,3))*(pow(r,3))))+(((-162628800)*((pow(M,2))*(pow(r,4))))+(((543557280)*((M)*(pow(r,5))))+((1851581375)*(pow(r,6)))))))))))+(((pow(a,12))*((pow(r,10))*(((-327680)*(pow(M,6)))+(((2260992)*((pow(M,5))*(r)))+(((-9615360)*((pow(M,4))*(pow(r,2))))+(((33287168)*((pow(M,3))*(pow(r,3))))+(((-110538048)*((pow(M,2))*(pow(r,4))))+(((458949792)*((M)*(pow(r,5))))+((1986794929)*(pow(r,6)))))))))))+((16)*((pow(a,14))*((pow(r,7))*(((16384)*(pow(M,7)))+(((-98304)*((pow(M,6))*(r)))+(((390144)*((pow(M,5))*(pow(r,2))))+(((-1244160)*((pow(M,4))*(pow(r,3))))+(((3523120)*((pow(M,3))*(pow(r,4))))+(((-9971424)*((pow(M,2))*(pow(r,5))))+(((36278431)*((M)*(pow(r,6))))+((137273724)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),14))*(((pow(a,4))+(((17)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((16)*(M))+((9)*(r))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_694(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[694] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00004141671316964285714285714285714285714285714285714285714285714285714285714285714285714285714285714286"))*((pow(a,-19))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,8)))+(((pow(a,6))*((((58)*(M))+((-3)*(r)))*(r)))+(((34)*((pow(r,6))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2)))))))+(((-2)*((pow(a,4))*((pow(r,2))*(((94)*(pow(M,2)))+(((589)*((M)*(r)))+((379)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((128)*(pow(M,3)))+(((5768)*((pow(M,2))*(r)))+(((222)*((M)*(pow(r,2))))+((-2283)*(pow(r,3))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((413707)*(pow(a,28)))+(((765765)*(pow(r,28)))+(((420420)*((pow(a,2))*((pow(r,25))*((M)+((25)*(r))))))+(((28)*((pow(a,26))*((r)*(((44679)*(M))+((229193)*(r))))))+(((3003)*((pow(a,4))*((pow(r,22))*(((-96)*(pow(M,2)))+(((1776)*((M)*(r)))+((22271)*(pow(r,2))))))))+(((7)*((pow(a,24))*((pow(r,2))*(((-288288)*(pow(M,2)))+(((1856304)*((M)*(r)))+((6467773)*(pow(r,2))))))))+(((3432)*((pow(a,6))*((pow(r,19))*(((80)*(pow(M,3)))+(((-960)*((pow(M,2))*(r)))+(((9069)*((M)*(pow(r,2))))+((76178)*(pow(r,3)))))))))+(((8)*((pow(a,22))*((pow(r,3))*(((381456)*(pow(M,3)))+(((-1950336)*((pow(M,2))*(r)))+(((7832169)*((M)*(pow(r,2))))+((24213278)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((-2048)*(pow(M,4)))+(((19456)*((pow(M,3))*(r)))+(((-119712)*((pow(M,2))*(pow(r,2))))+(((773104)*((M)*(pow(r,3))))+((4903903)*(pow(r,4))))))))))+(((pow(a,20))*((pow(r,4))*(((-3467264)*(pow(M,4)))+(((17478656)*((pow(M,3))*(r)))+(((-54814368)*((pow(M,2))*(pow(r,2))))+(((185385488)*((M)*(pow(r,3))))+((563697471)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,13))*(((6144)*(pow(M,5)))+(((-49152)*((pow(M,4))*(r)))+(((242048)*((pow(M,3))*(pow(r,2))))+(((-1025664)*((pow(M,2))*(pow(r,3))))+(((5122299)*((M)*(pow(r,4))))+((26246633)*(pow(r,5)))))))))))+(((4)*((pow(a,18))*((pow(r,5))*(((669696)*(pow(M,5)))+(((-3526656)*((pow(M,4))*(r)))+(((10900352)*((pow(M,3))*(pow(r,2))))+(((-28907904)*((pow(M,2))*(pow(r,3))))+(((93626463)*((M)*(pow(r,4))))+((295846019)*(pow(r,5)))))))))))+(((pow(a,16))*((pow(r,6))*(((-1245184)*(pow(M,6)))+(((6979584)*((pow(M,5))*(r)))+(((-23193600)*((pow(M,4))*(pow(r,2))))+(((62336000)*((pow(M,3))*(pow(r,3))))+(((-162628800)*((pow(M,2))*(pow(r,4))))+(((543557280)*((M)*(pow(r,5))))+((1851581375)*(pow(r,6)))))))))))+(((pow(a,12))*((pow(r,10))*(((-327680)*(pow(M,6)))+(((2260992)*((pow(M,5))*(r)))+(((-9615360)*((pow(M,4))*(pow(r,2))))+(((33287168)*((pow(M,3))*(pow(r,3))))+(((-110538048)*((pow(M,2))*(pow(r,4))))+(((458949792)*((M)*(pow(r,5))))+((1986794929)*(pow(r,6)))))))))))+((16)*((pow(a,14))*((pow(r,7))*(((16384)*(pow(M,7)))+(((-98304)*((pow(M,6))*(r)))+(((390144)*((pow(M,5))*(pow(r,2))))+(((-1244160)*((pow(M,4))*(pow(r,3))))+(((3523120)*((pow(M,3))*(pow(r,4))))+(((-9971424)*((pow(M,2))*(pow(r,5))))+(((36278431)*((M)*(pow(r,6))))+((137273724)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),14))*(((pow(a,4))+(((17)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((16)*(M))+((9)*(r))))))))*(expr[3])))))))))))))).cast<double>());
}

}
