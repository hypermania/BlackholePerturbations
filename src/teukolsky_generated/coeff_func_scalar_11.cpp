
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_55(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[55] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.2500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.483239697419132589742279488160142612195980863819500319746524652868766036862770048550601842639164989"))*((pow(a,-6))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-4))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((a)*((r)*(((315)*((((2)*(M))+((-1)*(r)))*(pow(r,12))))+(((-113)*((pow(a,12))*(((2)*(M))+(r))))+(((420)*((pow(a,2))*((pow(r,9))*(((5)*(pow(M,2)))+(((4)*((M)*(r)))+((-4)*(pow(r,2))))))))+(((-4)*((pow(a,10))*((r)*(((81)*(pow(M,2)))+(((420)*((M)*(r)))+((218)*(pow(r,2))))))))+(((pow(a,4))*((pow(r,6))*(((1744)*(pow(M,3)))+(((5784)*((pow(M,2))*(r)))+(((258)*((M)*(pow(r,2))))+((-3683)*(pow(r,3))))))))+(((3)*((pow(a,8))*((pow(r,2))*(((496)*(pow(M,3)))+(((312)*((pow(M,2))*(r)))+(((-1298)*((M)*(pow(r,2))))+((-891)*(pow(r,3)))))))))+((8)*((pow(a,6))*((pow(r,3))*(((16)*(pow(M,4)))+(((404)*((pow(M,3))*(r)))+(((618)*((pow(M,2))*(pow(r,2))))+(((-404)*((M)*(pow(r,3))))+((-529)*(pow(r,4))))))))))))))))))+((15)*((pow((pow(a,2))+(pow(r,2)),2))*(((pow(a,8))+(((21)*(pow(r,8)))+(((56)*((pow(a,2))*((pow(r,5))*((M)+(r)))))+(((8)*((pow(a,6))*((r)*(((3)*(M))+((2)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(pow(((4)*(M))+((5)*(r)),2)))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_56(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[56] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.1875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.1690308509457033155019236654731890585261571780226954377965634191183663559744472296218786436338031194"))*((pow(a,-8))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[2])*(((-1)*((((-15015)*((a)*((((2)*(M))+((-1)*(r)))*(pow(r,16)))))+(((1873)*((pow(a,17))*(((2)*(M))+(r))))+(((770)*((pow(a,3))*((pow(r,13))*(((-170)*(pow(M,2)))+(((-142)*((M)*(r)))+((133)*(pow(r,2))))))))+(((2)*((pow(a,15))*((r)*(((13562)*(pow(M,2)))+(((28546)*((M)*(r)))+((11819)*(pow(r,2))))))))+(((-14)*((pow(a,5))*((pow(r,10))*(((12776)*(pow(M,3)))+(((36936)*((pow(M,2))*(r)))+(((4192)*((M)*(pow(r,2))))+((-21507)*(pow(r,3)))))))))+(((2)*((pow(a,13))*((pow(r,2))*(((-16984)*(pow(M,3)))+(((55896)*((pow(M,2))*(r)))+(((134640)*((M)*(pow(r,2))))+((58715)*(pow(r,3)))))))))+(((2)*((pow(a,7))*((pow(r,7))*(((-37824)*(pow(M,4)))+(((-282080)*((pow(M,3))*(r)))+(((-367746)*((pow(M,2))*(pow(r,2))))+(((150078)*((M)*(pow(r,3))))+((248369)*(pow(r,4))))))))))+(((-4)*((pow(a,9))*((pow(r,4))*(((640)*(pow(M,5)))+(((36224)*((pow(M,4))*(r)))+(((156424)*((pow(M,3))*(pow(r,2))))+(((96432)*((pow(M,2))*(pow(r,3))))+(((-163875)*((M)*(pow(r,4))))+((-125130)*(pow(r,5)))))))))))+((pow(a,11))*(((-69248)*((pow(M,4))*(pow(r,3))))+(((-274368)*((pow(M,3))*(pow(r,4))))+(((48228)*((pow(M,2))*(pow(r,5))))+(((591900)*((M)*(pow(r,6))))+((313150)*(pow(r,7))))))))))))))))*(expr[2])))+((35)*((pow((pow(a,2))+(pow(r,2)),2))*((((5)*(pow(a,12)))+(((429)*(pow(r,12)))+(((30)*((pow(a,10))*((r)*(((8)*(M))+((5)*(r))))))+(((198)*((pow(a,2))*((pow(r,9))*(((8)*(M))+((9)*(r))))))+(((15)*((pow(a,8))*((pow(r,2))*(((64)*(pow(M,2)))+(((128)*((M)*(r)))+((61)*(pow(r,2))))))))+(((9)*((pow(a,4))*((pow(r,6))*(((192)*(pow(M,2)))+(((512)*((M)*(r)))+((323)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((672)*((pow(M,2))*(r)))+(((1176)*((M)*(pow(r,2))))+((581)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_57(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[57] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.002232142857142857142857142857142857142857142857142857142857142857142857142857142857142857142857142857"))*((HighPrecisionScalar("1.125462867742275478874459293968140665923231810508323596843320248528839743353187215104283798292690589"))*((pow(a,-10))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((a)*((r)*(((765765)*((((2)*(M))+((-1)*(r)))*(pow(r,20))))+(((-30563)*((pow(a,20))*(((2)*(M))+(r))))+(((60060)*((pow(a,2))*((pow(r,17))*(((137)*(pow(M,2)))+(((118)*((M)*(r)))+((-106)*(pow(r,2))))))))+(((-4)*((pow(a,18))*((r)*(((240215)*(pow(M,2)))+(((393030)*((M)*(r)))+((144102)*(pow(r,2))))))))+(((3003)*((pow(a,4))*((pow(r,14))*(((5168)*(pow(M,3)))+(((14168)*((pow(M,2))*(r)))+(((2166)*((M)*(pow(r,2))))+((-7821)*(pow(r,3)))))))))+(((-1)*((pow(a,16))*((pow(r,2))*(((823024)*(pow(M,3)))+(((8921416)*((pow(M,2))*(r)))+(((12015678)*((M)*(pow(r,2))))+((4185993)*(pow(r,3)))))))))+(((264)*((pow(a,6))*((pow(r,11))*(((44976)*(pow(M,4)))+(((262764)*((pow(M,3))*(r)))+(((322901)*((pow(M,2))*(pow(r,2))))+(((-95652)*((M)*(pow(r,3))))+((-191292)*(pow(r,4))))))))))+(((-8)*((pow(a,14))*((pow(r,3))*(((-567568)*(pow(M,4)))+(((-517868)*((pow(M,3))*(r)))+(((3591877)*((pow(M,2))*(pow(r,2))))+(((5574244)*((M)*(pow(r,3))))+((2061836)*(pow(r,4))))))))))+(((2)*((pow(a,8))*((pow(r,8))*(((1509632)*(pow(M,5)))+(((19973248)*((pow(M,4))*(r)))+(((60802040)*((pow(M,3))*(pow(r,2))))+(((37502420)*((pow(M,2))*(pow(r,3))))+(((-42126950)*((M)*(pow(r,4))))+((-34925569)*(pow(r,5)))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((1423616)*(pow(M,5)))+(((12640128)*((pow(M,4))*(r)))+(((20089080)*((pow(M,3))*(pow(r,2))))+(((-17654740)*((pow(M,2))*(pow(r,3))))+(((-47025270)*((M)*(pow(r,4))))+((-20127975)*(pow(r,5)))))))))))+((16)*((pow(a,10))*((pow(r,5))*(((3584)*(pow(M,6)))+(((366656)*((pow(M,5))*(r)))+(((3050784)*((pow(M,4))*(pow(r,2))))+(((6435380)*((pow(M,3))*(pow(r,3))))+(((596390)*((pow(M,2))*(pow(r,4))))+(((-7375881)*((M)*(pow(r,5))))+((-4039833)*(pow(r,6))))))))))))))))))))))))+((315)*((pow((pow(a,2))+(pow(r,2)),2))*((((7)*(pow(a,16)))+(((2431)*(pow(r,16)))+(((112)*((pow(a,14))*((r)*(((5)*(M))+((3)*(r))))))+(((2288)*((pow(a,2))*((pow(r,13))*(((5)*(M))+((6)*(r))))))+(((572)*((pow(a,4))*((pow(r,10))*(((32)*(pow(M,2)))+(((88)*((M)*(r)))+((57)*(pow(r,2))))))))+(((28)*((pow(a,12))*((pow(r,2))*(((160)*(pow(M,2)))+(((280)*((M)*(r)))+((117)*(pow(r,2))))))))+(((112)*((pow(a,10))*((pow(r,3))*(((64)*(pow(M,3)))+(((256)*((pow(M,2))*(r)))+(((323)*((M)*(pow(r,2))))+((124)*(pow(r,3)))))))))+(((176)*((pow(a,6))*((pow(r,7))*(((64)*(pow(M,3)))+(((320)*((pow(M,2))*(r)))+(((503)*((M)*(pow(r,2))))+((239)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((9216)*((pow(M,3))*(r)))+(((31104)*((pow(M,2))*(pow(r,2))))+(((39264)*((M)*(pow(r,3))))+((15849)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_58(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[58] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("1.250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-5))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-3))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((-3)*((pow(a,2))*((M)*(r))))+((pow(r,2))*(((2)*(pow(M,2)))+(((5)*((M)*(r)))+((-3)*(pow(r,2))))))))*(((a)*((r)*(((3)*((pow(r,8))*(((-2)*(M))+(r))))+(((5)*((pow(a,8))*(((2)*(M))+(r))))+(((2)*((pow(a,2))*((pow(r,5))*(((-2)*(pow(M,2)))+(((-10)*((M)*(r)))+((7)*(pow(r,2))))))))+(((2)*((pow(a,6))*((r)*(((-14)*(pow(M,2)))+(((6)*((M)*(r)))+((9)*(pow(r,2))))))))+((4)*((pow(a,4))*((pow(r,2))*(((4)*(pow(M,3)))+(((-8)*((pow(M,2))*(r)))+(((-3)*((M)*(pow(r,2))))+((6)*(pow(r,3)))))))))))))))+((-3)*((pow((pow(a,2))+(pow(r,2)),4))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))).cast<double>());
}

void compute_coeffs_scalar_59(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[59] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.2500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-3))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-2))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((-5)*((a)*((r)*(((3)*((pow(r,8))*(((-2)*(M))+(r))))+(((5)*((pow(a,8))*(((2)*(M))+(r))))+(((2)*((pow(a,2))*((pow(r,5))*(((-2)*(pow(M,2)))+(((-10)*((M)*(r)))+((7)*(pow(r,2))))))))+(((2)*((pow(a,6))*((r)*(((-14)*(pow(M,2)))+(((6)*((M)*(r)))+((9)*(pow(r,2))))))))+((4)*((pow(a,4))*((pow(r,2))*(((4)*(pow(M,3)))+(((-8)*((pow(M,2))*(r)))+(((-3)*((M)*(pow(r,2))))+((6)*(pow(r,3))))))))))))))))+((15)*((pow((pow(a,2))+(pow(r,2)),4))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))).cast<double>());
}

}
