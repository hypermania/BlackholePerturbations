
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_765(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[765] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.000005086263020833333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((pow(a,-19))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((19)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((9)*(M))+((5)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((7491771)*(pow(a,32)))+(((14549535)*(pow(r,32)))+(((8168160)*((pow(a,2))*((pow(r,29))*((M)+((28)*(r))))))+(((168)*((pow(a,30))*((r)*(((157510)*(M))+((792257)*(r))))))+(((204204)*((pow(a,4))*((pow(r,26))*(((-28)*(pow(M,2)))+(((588)*((M)*(r)))+((8243)*(pow(r,2))))))))+(((420)*((pow(a,28))*((pow(r,2))*(((-117620)*(pow(M,2)))+(((764436)*((M)*(r)))+((2583631)*(pow(r,2))))))))+(((58344)*((pow(a,6))*((pow(r,23))*(((96)*(pow(M,3)))+(((-1320)*((pow(M,2))*(r)))+(((14086)*((M)*(pow(r,2))))+((131945)*(pow(r,3)))))))))+(((240)*((pow(a,26))*((pow(r,3))*(((372432)*(pow(M,3)))+(((-1911372)*((pow(M,2))*(r)))+(((7636856)*((M)*(pow(r,2))))+((22595423)*(pow(r,3)))))))))+(((19448)*((pow(a,8))*((pow(r,20))*(((-320)*(pow(M,4)))+(((3520)*((pow(M,3))*(r)))+(((-24636)*((pow(M,2))*(pow(r,2))))+(((178564)*((M)*(pow(r,3))))+((1258861)*(pow(r,4))))))))))+(((160)*((pow(a,24))*((pow(r,4))*(((-792304)*(pow(M,4)))+(((4001872)*((pow(M,3))*(r)))+(((-12348429)*((pow(M,2))*(pow(r,2))))+(((40749307)*((M)*(pow(r,3))))+((116678261)*(pow(r,4))))))))))+(((3536)*((pow(a,10))*((pow(r,17))*(((2048)*(pow(M,5)))+(((-19200)*((pow(M,4))*(r)))+(((108080)*((pow(M,3))*(pow(r,2))))+(((-515380)*((pow(M,2))*(pow(r,3))))+(((2863500)*((M)*(pow(r,4))))+((16232405)*(pow(r,5)))))))))))+(((8)*((pow(a,22))*((pow(r,5))*(((16310272)*(pow(M,5)))+(((-85992960)*((pow(M,4))*(r)))+(((258329440)*((pow(M,3))*(pow(r,2))))+(((-654045160)*((pow(M,2))*(pow(r,3))))+(((2015958450)*((M)*(pow(r,4))))+((5883650987)*(pow(r,5)))))))))))+(((68)*((pow(a,12))*((pow(r,14))*(((-122880)*(pow(M,6)))+(((1007616)*((pow(M,5))*(r)))+(((-4887040)*((pow(M,4))*(pow(r,2))))+(((18910720)*((pow(M,3))*(pow(r,3))))+(((-69498540)*((pow(M,2))*(pow(r,4))))+(((317063660)*((M)*(pow(r,5))))+((1508658805)*(pow(r,6))))))))))))+(((4)*((pow(a,20))*((pow(r,6))*(((-22732800)*(pow(M,6)))+(((127524864)*((pow(M,5))*(r)))+(((-401768960)*((pow(M,4))*(pow(r,2))))+(((995253760)*((pow(M,3))*(pow(r,3))))+(((-2376235980)*((pow(M,2))*(pow(r,4))))+(((7326968540)*((M)*(pow(r,5))))+((22519960739)*(pow(r,6))))))))))))+(((136)*((pow(a,14))*((pow(r,11))*(((65536)*(pow(M,7)))+(((-475136)*((pow(M,6))*(r)))+(((2064384)*((pow(M,5))*(pow(r,2))))+(((-7027200)*((pow(M,4))*(pow(r,3))))+(((21282240)*((pow(M,3))*(pow(r,4))))+(((-64820112)*((pow(M,2))*(pow(r,5))))+(((254392642)*((M)*(pow(r,6))))+((1048118827)*(pow(r,7)))))))))))))+(((32)*((pow(a,18))*((pow(r,7))*(((1196032)*(pow(M,7)))+(((-7180288)*((pow(M,6))*(r)))+(((24818688)*((pow(M,5))*(pow(r,2))))+(((-66476160)*((pow(M,4))*(pow(r,3))))+(((159363120)*((pow(M,3))*(pow(r,4))))+(((-390116244)*((pow(M,2))*(pow(r,5))))+(((1259282311)*((M)*(pow(r,6))))+((4176789659)*(pow(r,7)))))))))))))+((2)*((pow(a,16))*((pow(r,8))*(((-3670016)*(pow(M,8)))+(((23592960)*((pow(M,7))*(r)))+(((-97550336)*((pow(M,6))*(pow(r,2))))+(((317030400)*((pow(M,5))*(pow(r,3))))+(((-883192320)*((pow(M,4))*(pow(r,4))))+(((2281047552)*((pow(M,3))*(pow(r,5))))+(((-6074455520)*((pow(M,2))*(pow(r,6))))+(((21267402912)*((M)*(pow(r,7))))+((77770708855)*(pow(r,8))))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((765765)*((pow((pow(a,2))+(pow(r,2)),16))*(((pow(a,4))+(((19)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((9)*(M))+((5)*(r))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_766(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[766] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.000002543131510416666666666666666666666666666666666666666666666666666666666666666666666666666666666666667"))*((pow(a,-21))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-11))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((pow(a,4))+(((19)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((9)*(M))+((5)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((7491771)*(pow(a,32)))+(((14549535)*(pow(r,32)))+(((8168160)*((pow(a,2))*((pow(r,29))*((M)+((28)*(r))))))+(((168)*((pow(a,30))*((r)*(((157510)*(M))+((792257)*(r))))))+(((204204)*((pow(a,4))*((pow(r,26))*(((-28)*(pow(M,2)))+(((588)*((M)*(r)))+((8243)*(pow(r,2))))))))+(((420)*((pow(a,28))*((pow(r,2))*(((-117620)*(pow(M,2)))+(((764436)*((M)*(r)))+((2583631)*(pow(r,2))))))))+(((58344)*((pow(a,6))*((pow(r,23))*(((96)*(pow(M,3)))+(((-1320)*((pow(M,2))*(r)))+(((14086)*((M)*(pow(r,2))))+((131945)*(pow(r,3)))))))))+(((240)*((pow(a,26))*((pow(r,3))*(((372432)*(pow(M,3)))+(((-1911372)*((pow(M,2))*(r)))+(((7636856)*((M)*(pow(r,2))))+((22595423)*(pow(r,3)))))))))+(((19448)*((pow(a,8))*((pow(r,20))*(((-320)*(pow(M,4)))+(((3520)*((pow(M,3))*(r)))+(((-24636)*((pow(M,2))*(pow(r,2))))+(((178564)*((M)*(pow(r,3))))+((1258861)*(pow(r,4))))))))))+(((160)*((pow(a,24))*((pow(r,4))*(((-792304)*(pow(M,4)))+(((4001872)*((pow(M,3))*(r)))+(((-12348429)*((pow(M,2))*(pow(r,2))))+(((40749307)*((M)*(pow(r,3))))+((116678261)*(pow(r,4))))))))))+(((3536)*((pow(a,10))*((pow(r,17))*(((2048)*(pow(M,5)))+(((-19200)*((pow(M,4))*(r)))+(((108080)*((pow(M,3))*(pow(r,2))))+(((-515380)*((pow(M,2))*(pow(r,3))))+(((2863500)*((M)*(pow(r,4))))+((16232405)*(pow(r,5)))))))))))+(((8)*((pow(a,22))*((pow(r,5))*(((16310272)*(pow(M,5)))+(((-85992960)*((pow(M,4))*(r)))+(((258329440)*((pow(M,3))*(pow(r,2))))+(((-654045160)*((pow(M,2))*(pow(r,3))))+(((2015958450)*((M)*(pow(r,4))))+((5883650987)*(pow(r,5)))))))))))+(((68)*((pow(a,12))*((pow(r,14))*(((-122880)*(pow(M,6)))+(((1007616)*((pow(M,5))*(r)))+(((-4887040)*((pow(M,4))*(pow(r,2))))+(((18910720)*((pow(M,3))*(pow(r,3))))+(((-69498540)*((pow(M,2))*(pow(r,4))))+(((317063660)*((M)*(pow(r,5))))+((1508658805)*(pow(r,6))))))))))))+(((4)*((pow(a,20))*((pow(r,6))*(((-22732800)*(pow(M,6)))+(((127524864)*((pow(M,5))*(r)))+(((-401768960)*((pow(M,4))*(pow(r,2))))+(((995253760)*((pow(M,3))*(pow(r,3))))+(((-2376235980)*((pow(M,2))*(pow(r,4))))+(((7326968540)*((M)*(pow(r,5))))+((22519960739)*(pow(r,6))))))))))))+(((136)*((pow(a,14))*((pow(r,11))*(((65536)*(pow(M,7)))+(((-475136)*((pow(M,6))*(r)))+(((2064384)*((pow(M,5))*(pow(r,2))))+(((-7027200)*((pow(M,4))*(pow(r,3))))+(((21282240)*((pow(M,3))*(pow(r,4))))+(((-64820112)*((pow(M,2))*(pow(r,5))))+(((254392642)*((M)*(pow(r,6))))+((1048118827)*(pow(r,7)))))))))))))+(((32)*((pow(a,18))*((pow(r,7))*(((1196032)*(pow(M,7)))+(((-7180288)*((pow(M,6))*(r)))+(((24818688)*((pow(M,5))*(pow(r,2))))+(((-66476160)*((pow(M,4))*(pow(r,3))))+(((159363120)*((pow(M,3))*(pow(r,4))))+(((-390116244)*((pow(M,2))*(pow(r,5))))+(((1259282311)*((M)*(pow(r,6))))+((4176789659)*(pow(r,7)))))))))))))+((2)*((pow(a,16))*((pow(r,8))*(((-3670016)*(pow(M,8)))+(((23592960)*((pow(M,7))*(r)))+(((-97550336)*((pow(M,6))*(pow(r,2))))+(((317030400)*((pow(M,5))*(pow(r,3))))+(((-883192320)*((pow(M,4))*(pow(r,4))))+(((2281047552)*((pow(M,3))*(pow(r,5))))+(((-6074455520)*((pow(M,2))*(pow(r,6))))+(((21267402912)*((M)*(pow(r,7))))+((77770708855)*(pow(r,8))))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((765765)*((pow((pow(a,2))+(pow(r,2)),16))*(((pow(a,4))+(((19)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((9)*(M))+((5)*(r))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_767(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[767] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.00008138020833333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((pow(a,-20))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-11))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((19)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((9)*(M))+((5)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((7491771)*(pow(a,32)))+(((14549535)*(pow(r,32)))+(((8168160)*((pow(a,2))*((pow(r,29))*((M)+((28)*(r))))))+(((168)*((pow(a,30))*((r)*(((157510)*(M))+((792257)*(r))))))+(((204204)*((pow(a,4))*((pow(r,26))*(((-28)*(pow(M,2)))+(((588)*((M)*(r)))+((8243)*(pow(r,2))))))))+(((420)*((pow(a,28))*((pow(r,2))*(((-117620)*(pow(M,2)))+(((764436)*((M)*(r)))+((2583631)*(pow(r,2))))))))+(((58344)*((pow(a,6))*((pow(r,23))*(((96)*(pow(M,3)))+(((-1320)*((pow(M,2))*(r)))+(((14086)*((M)*(pow(r,2))))+((131945)*(pow(r,3)))))))))+(((240)*((pow(a,26))*((pow(r,3))*(((372432)*(pow(M,3)))+(((-1911372)*((pow(M,2))*(r)))+(((7636856)*((M)*(pow(r,2))))+((22595423)*(pow(r,3)))))))))+(((19448)*((pow(a,8))*((pow(r,20))*(((-320)*(pow(M,4)))+(((3520)*((pow(M,3))*(r)))+(((-24636)*((pow(M,2))*(pow(r,2))))+(((178564)*((M)*(pow(r,3))))+((1258861)*(pow(r,4))))))))))+(((160)*((pow(a,24))*((pow(r,4))*(((-792304)*(pow(M,4)))+(((4001872)*((pow(M,3))*(r)))+(((-12348429)*((pow(M,2))*(pow(r,2))))+(((40749307)*((M)*(pow(r,3))))+((116678261)*(pow(r,4))))))))))+(((3536)*((pow(a,10))*((pow(r,17))*(((2048)*(pow(M,5)))+(((-19200)*((pow(M,4))*(r)))+(((108080)*((pow(M,3))*(pow(r,2))))+(((-515380)*((pow(M,2))*(pow(r,3))))+(((2863500)*((M)*(pow(r,4))))+((16232405)*(pow(r,5)))))))))))+(((8)*((pow(a,22))*((pow(r,5))*(((16310272)*(pow(M,5)))+(((-85992960)*((pow(M,4))*(r)))+(((258329440)*((pow(M,3))*(pow(r,2))))+(((-654045160)*((pow(M,2))*(pow(r,3))))+(((2015958450)*((M)*(pow(r,4))))+((5883650987)*(pow(r,5)))))))))))+(((68)*((pow(a,12))*((pow(r,14))*(((-122880)*(pow(M,6)))+(((1007616)*((pow(M,5))*(r)))+(((-4887040)*((pow(M,4))*(pow(r,2))))+(((18910720)*((pow(M,3))*(pow(r,3))))+(((-69498540)*((pow(M,2))*(pow(r,4))))+(((317063660)*((M)*(pow(r,5))))+((1508658805)*(pow(r,6))))))))))))+(((4)*((pow(a,20))*((pow(r,6))*(((-22732800)*(pow(M,6)))+(((127524864)*((pow(M,5))*(r)))+(((-401768960)*((pow(M,4))*(pow(r,2))))+(((995253760)*((pow(M,3))*(pow(r,3))))+(((-2376235980)*((pow(M,2))*(pow(r,4))))+(((7326968540)*((M)*(pow(r,5))))+((22519960739)*(pow(r,6))))))))))))+(((136)*((pow(a,14))*((pow(r,11))*(((65536)*(pow(M,7)))+(((-475136)*((pow(M,6))*(r)))+(((2064384)*((pow(M,5))*(pow(r,2))))+(((-7027200)*((pow(M,4))*(pow(r,3))))+(((21282240)*((pow(M,3))*(pow(r,4))))+(((-64820112)*((pow(M,2))*(pow(r,5))))+(((254392642)*((M)*(pow(r,6))))+((1048118827)*(pow(r,7)))))))))))))+(((32)*((pow(a,18))*((pow(r,7))*(((1196032)*(pow(M,7)))+(((-7180288)*((pow(M,6))*(r)))+(((24818688)*((pow(M,5))*(pow(r,2))))+(((-66476160)*((pow(M,4))*(pow(r,3))))+(((159363120)*((pow(M,3))*(pow(r,4))))+(((-390116244)*((pow(M,2))*(pow(r,5))))+(((1259282311)*((M)*(pow(r,6))))+((4176789659)*(pow(r,7)))))))))))))+((2)*((pow(a,16))*((pow(r,8))*(((-3670016)*(pow(M,8)))+(((23592960)*((pow(M,7))*(r)))+(((-97550336)*((pow(M,6))*(pow(r,2))))+(((317030400)*((pow(M,5))*(pow(r,3))))+(((-883192320)*((pow(M,4))*(pow(r,4))))+(((2281047552)*((pow(M,3))*(pow(r,5))))+(((-6074455520)*((pow(M,2))*(pow(r,6))))+(((21267402912)*((M)*(pow(r,7))))+((77770708855)*(pow(r,8))))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((765765)*((pow((pow(a,2))+(pow(r,2)),16))*(((pow(a,4))+(((19)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((9)*(M))+((5)*(r))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_768(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[768] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0001220703125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.2672612419124243846845534808797535215540014148413376390216961048085739397362099305697721353710271123"))*((pow(a,-19))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,4)))+(((-1)*((pow(a,2))*((r)*(((6)*(M))+((59)*(r))))))+((2)*((pow(r,2))*(((2)*(pow(M,2)))+(((109)*((M)*(r)))+((-55)*(pow(r,2)))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((458752)*(pow(a,32)))+(((14549535)*(pow(r,32)))+(((255255)*((pow(a,2))*((pow(r,29))*(((134)*(M))+((845)*(r))))))+(((7)*((pow(a,30))*((r)*(((2751502)*(M))+((2424327)*(r))))))+(((51051)*((pow(a,4))*((pow(r,26))*(((168)*(pow(M,2)))+(((9212)*((M)*(r)))+((29217)*(pow(r,2))))))))+(((7)*((pow(a,28))*((pow(r,2))*(((3920040)*(pow(M,2)))+(((42441068)*((M)*(r)))+((29480595)*(pow(r,2))))))))+(((7293)*((pow(a,6))*((pow(r,23))*(((-576)*(pow(M,3)))+(((14976)*((pow(M,2))*(r)))+(((411070)*((M)*(pow(r,2))))+((875163)*(pow(r,3)))))))))+(((7)*((pow(a,26))*((pow(r,3))*(((-4443840)*(pow(M,3)))+(((40374720)*((pow(M,2))*(r)))+(((298014322)*((M)*(pow(r,2))))+((194318675)*(pow(r,3)))))))))+(((2431)*((pow(a,8))*((pow(r,20))*(((1280)*(pow(M,4)))+(((-19840)*((pow(M,3))*(r)))+(((263280)*((pow(M,2))*(pow(r,2))))+(((4830104)*((M)*(pow(r,3))))+((7774925)*(pow(r,4))))))))))+(((pow(a,24))*((pow(r,4))*(((35930880)*(pow(M,4)))+(((-239207040)*((pow(M,3))*(r)))+(((1351691280)*((pow(M,2))*(pow(r,2))))+(((8889172456)*((M)*(pow(r,3))))+((5792658945)*(pow(r,4)))))))))+(((221)*((pow(a,10))*((pow(r,17))*(((-12288)*(pow(M,5)))+(((143360)*((pow(M,4))*(r)))+(((-1139520)*((pow(M,3))*(pow(r,2))))+(((10332480)*((pow(M,2))*(pow(r,3))))+(((142803506)*((M)*(pow(r,4))))+((185664555)*(pow(r,5)))))))))))+(((pow(a,22))*((pow(r,5))*(((-32944128)*(pow(M,5)))+(((205086720)*((pow(M,4))*(r)))+(((-835414080)*((pow(M,3))*(pow(r,2))))+(((3968327040)*((pow(M,2))*(pow(r,3))))+(((25775228834)*((M)*(pow(r,4))))+((17368821597)*(pow(r,5))))))))))+(((17)*((pow(a,12))*((pow(r,14))*(((147456)*(pow(M,6)))+(((-1400832)*((pow(M,5))*(r)))+(((8473600)*((pow(M,4))*(pow(r,2))))+(((-46394880)*((pow(M,3))*(pow(r,3))))+(((325178280)*((pow(M,2))*(pow(r,4))))+(((3620991052)*((M)*(pow(r,5))))+((3968552175)*(pow(r,6))))))))))))+(((pow(a,20))*((pow(r,6))*(((21315584)*(pow(M,6)))+(((-133718016)*((pow(M,5))*(r)))+(((509475840)*((pow(M,4))*(pow(r,2))))+(((-1751395840)*((pow(M,3))*(pow(r,3))))+(((7958682120)*((pow(M,2))*(pow(r,4))))+(((53935859500)*((M)*(pow(r,5))))+((38485430289)*(pow(r,6)))))))))))+(((17)*((pow(a,14))*((pow(r,11))*(((-131072)*(pow(M,7)))+(((1048576)*((pow(M,6))*(r)))+(((-5296128)*((pow(M,5))*(pow(r,2))))+(((22528000)*((pow(M,4))*(pow(r,3))))+(((-96691840)*((pow(M,3))*(pow(r,4))))+(((563211264)*((pow(M,2))*(pow(r,5))))+(((5283421654)*((M)*(pow(r,6))))+((5033330771)*(pow(r,7)))))))))))))+(((pow(a,18))*((pow(r,7))*(((-8519680)*(pow(M,7)))+(((55443456)*((pow(M,6))*(r)))+(((-219156480)*((pow(M,5))*(pow(r,2))))+(((724889600)*((pow(M,4))*(pow(r,3))))+(((-2447760000)*((pow(M,3))*(pow(r,4))))+(((11474144640)*((pow(M,2))*(pow(r,5))))+(((84142593710)*((M)*(pow(r,6))))+((64841932785)*(pow(r,7))))))))))))+((pow(a,16))*((pow(r,8))*(((1572864)*(pow(M,8)))+(((-10747904)*((pow(M,7))*(r)))+(((49446912)*((pow(M,6))*(pow(r,2))))+(((-187318272)*((pow(M,5))*(pow(r,3))))+(((652065280)*((pow(M,4))*(pow(r,4))))+(((-2386530048)*((pow(M,3))*(pow(r,5))))+(((12177929568)*((pow(M,2))*(pow(r,6))))+(((99541831984)*((M)*(pow(r,7))))+((84427450989)*(pow(r,8)))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((765765)*((r)*((pow((pow(a,2))+(pow(r,2)),14))*((((19)*(pow(r,7)))+(((3)*((pow(a,6))*(((2)*(M))+(r))))+(((pow(a,2))*((pow(r,4))*(((70)*(M))+((41)*(r)))))+((pow(a,4))*((r)*(((64)*(pow(M,2)))+(((76)*((M)*(r)))+((25)*(pow(r,2))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_769(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[769] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00001525878906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-21))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-11))*((((6)*(pow(a,8)))+(((pow(a,6))*((((46)*(M))+((-133)*(r)))*(r)))+(((38)*((pow(r,6))*(((2)*(pow(M,2)))+(((109)*((M)*(r)))+((-55)*(pow(r,2)))))))+(((-2)*((pow(a,4))*((pow(r,2))*(((90)*(pow(M,2)))+(((683)*((M)*(r)))+((795)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((128)*(pow(M,3)))+(((7064)*((pow(M,2))*(r)))+(((1162)*((M)*(pow(r,2))))+((-3541)*(pow(r,3))))))))))))*((expr[0])*(((((458752)*(pow(a,33)))+(((14549535)*((a)*(pow(r,32))))+(((255255)*((pow(a,3))*((pow(r,29))*(((134)*(M))+((845)*(r))))))+(((7)*((pow(a,31))*((r)*(((2751502)*(M))+((2424327)*(r))))))+(((51051)*((pow(a,5))*((pow(r,26))*(((168)*(pow(M,2)))+(((9212)*((M)*(r)))+((29217)*(pow(r,2))))))))+(((7)*((pow(a,29))*((pow(r,2))*(((3920040)*(pow(M,2)))+(((42441068)*((M)*(r)))+((29480595)*(pow(r,2))))))))+(((7293)*((pow(a,7))*((pow(r,23))*(((-576)*(pow(M,3)))+(((14976)*((pow(M,2))*(r)))+(((411070)*((M)*(pow(r,2))))+((875163)*(pow(r,3)))))))))+(((7)*((pow(a,27))*((pow(r,3))*(((-4443840)*(pow(M,3)))+(((40374720)*((pow(M,2))*(r)))+(((298014322)*((M)*(pow(r,2))))+((194318675)*(pow(r,3)))))))))+(((2431)*((pow(a,9))*((pow(r,20))*(((1280)*(pow(M,4)))+(((-19840)*((pow(M,3))*(r)))+(((263280)*((pow(M,2))*(pow(r,2))))+(((4830104)*((M)*(pow(r,3))))+((7774925)*(pow(r,4))))))))))+(((pow(a,25))*((pow(r,4))*(((35930880)*(pow(M,4)))+(((-239207040)*((pow(M,3))*(r)))+(((1351691280)*((pow(M,2))*(pow(r,2))))+(((8889172456)*((M)*(pow(r,3))))+((5792658945)*(pow(r,4)))))))))+(((221)*((pow(a,11))*((pow(r,17))*(((-12288)*(pow(M,5)))+(((143360)*((pow(M,4))*(r)))+(((-1139520)*((pow(M,3))*(pow(r,2))))+(((10332480)*((pow(M,2))*(pow(r,3))))+(((142803506)*((M)*(pow(r,4))))+((185664555)*(pow(r,5)))))))))))+(((pow(a,23))*((pow(r,5))*(((-32944128)*(pow(M,5)))+(((205086720)*((pow(M,4))*(r)))+(((-835414080)*((pow(M,3))*(pow(r,2))))+(((3968327040)*((pow(M,2))*(pow(r,3))))+(((25775228834)*((M)*(pow(r,4))))+((17368821597)*(pow(r,5))))))))))+(((17)*((pow(a,13))*((pow(r,14))*(((147456)*(pow(M,6)))+(((-1400832)*((pow(M,5))*(r)))+(((8473600)*((pow(M,4))*(pow(r,2))))+(((-46394880)*((pow(M,3))*(pow(r,3))))+(((325178280)*((pow(M,2))*(pow(r,4))))+(((3620991052)*((M)*(pow(r,5))))+((3968552175)*(pow(r,6))))))))))))+(((pow(a,21))*((pow(r,6))*(((21315584)*(pow(M,6)))+(((-133718016)*((pow(M,5))*(r)))+(((509475840)*((pow(M,4))*(pow(r,2))))+(((-1751395840)*((pow(M,3))*(pow(r,3))))+(((7958682120)*((pow(M,2))*(pow(r,4))))+(((53935859500)*((M)*(pow(r,5))))+((38485430289)*(pow(r,6)))))))))))+(((17)*((pow(a,15))*((pow(r,11))*(((-131072)*(pow(M,7)))+(((1048576)*((pow(M,6))*(r)))+(((-5296128)*((pow(M,5))*(pow(r,2))))+(((22528000)*((pow(M,4))*(pow(r,3))))+(((-96691840)*((pow(M,3))*(pow(r,4))))+(((563211264)*((pow(M,2))*(pow(r,5))))+(((5283421654)*((M)*(pow(r,6))))+((5033330771)*(pow(r,7)))))))))))))+(((pow(a,19))*((pow(r,7))*(((-8519680)*(pow(M,7)))+(((55443456)*((pow(M,6))*(r)))+(((-219156480)*((pow(M,5))*(pow(r,2))))+(((724889600)*((pow(M,4))*(pow(r,3))))+(((-2447760000)*((pow(M,3))*(pow(r,4))))+(((11474144640)*((pow(M,2))*(pow(r,5))))+(((84142593710)*((M)*(pow(r,6))))+((64841932785)*(pow(r,7))))))))))))+((pow(a,17))*((pow(r,8))*(((1572864)*(pow(M,8)))+(((-10747904)*((pow(M,7))*(r)))+(((49446912)*((pow(M,6))*(pow(r,2))))+(((-187318272)*((pow(M,5))*(pow(r,3))))+(((652065280)*((pow(M,4))*(pow(r,4))))+(((-2386530048)*((pow(M,3))*(pow(r,5))))+(((12177929568)*((pow(M,2))*(pow(r,6))))+(((99541831984)*((M)*(pow(r,7))))+((84427450989)*(pow(r,8)))))))))))))))))))))))))))))*(expr[0]))+((-765765)*((pow((pow(a,2))+(pow(r,2)),14))*((((3)*(pow(a,4)))+(((19)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((16)*(M))+((11)*(r))))))))*((expr[1])*((expr[2])*(expr[3]))))))))))))).cast<double>());
}

}
