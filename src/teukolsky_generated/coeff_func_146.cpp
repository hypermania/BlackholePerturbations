
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_730(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[730] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.001953125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.3007926037591191772329159723941269669258747941140962389679539478684165032010913803338927704688829938"))*((pow(a,-13))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,8)))+(((5)*((pow(a,6))*((((2)*(M))+((-15)*(r)))*(r))))+(((10)*((pow(r,6))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2)))))))+(((-2)*((pow(a,4))*((pow(r,2))*(((22)*(pow(M,2)))+(((277)*((M)*(r)))+((301)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((32)*(pow(M,3)))+(((1448)*((pow(M,2))*(r)))+(((318)*((M)*(pow(r,2))))+((-975)*(pow(r,3))))))))))))*(((a)*((r)*(((-765765)*((((2)*(M))+((-1)*(r)))*(pow(r,20))))+(((30563)*((pow(a,20))*(((2)*(M))+(r))))+(((60060)*((pow(a,2))*((pow(r,17))*(((-137)*(pow(M,2)))+(((-118)*((M)*(r)))+((106)*(pow(r,2))))))))+(((4)*((pow(a,18))*((r)*(((240215)*(pow(M,2)))+(((393030)*((M)*(r)))+((144102)*(pow(r,2))))))))+(((-3003)*((pow(a,4))*((pow(r,14))*(((5168)*(pow(M,3)))+(((14168)*((pow(M,2))*(r)))+(((2166)*((M)*(pow(r,2))))+((-7821)*(pow(r,3)))))))))+(((pow(a,16))*((pow(r,2))*(((823024)*(pow(M,3)))+(((8921416)*((pow(M,2))*(r)))+(((12015678)*((M)*(pow(r,2))))+((4185993)*(pow(r,3))))))))+(((264)*((pow(a,6))*((pow(r,11))*(((-44976)*(pow(M,4)))+(((-262764)*((pow(M,3))*(r)))+(((-322901)*((pow(M,2))*(pow(r,2))))+(((95652)*((M)*(pow(r,3))))+((191292)*(pow(r,4))))))))))+(((8)*((pow(a,14))*((pow(r,3))*(((-567568)*(pow(M,4)))+(((-517868)*((pow(M,3))*(r)))+(((3591877)*((pow(M,2))*(pow(r,2))))+(((5574244)*((M)*(pow(r,3))))+((2061836)*(pow(r,4))))))))))+(((-2)*((pow(a,8))*((pow(r,8))*(((1509632)*(pow(M,5)))+(((19973248)*((pow(M,4))*(r)))+(((60802040)*((pow(M,3))*(pow(r,2))))+(((37502420)*((pow(M,2))*(pow(r,3))))+(((-42126950)*((M)*(pow(r,4))))+((-34925569)*(pow(r,5)))))))))))+(((-16)*((pow(a,10))*((pow(r,5))*(((3584)*(pow(M,6)))+(((366656)*((pow(M,5))*(r)))+(((3050784)*((pow(M,4))*(pow(r,2))))+(((6435380)*((pow(M,3))*(pow(r,3))))+(((596390)*((pow(M,2))*(pow(r,4))))+(((-7375881)*((M)*(pow(r,5))))+((-4039833)*(pow(r,6))))))))))))+((pow(a,12))*(((-2847232)*((pow(M,5))*(pow(r,4))))+(((-25280256)*((pow(M,4))*(pow(r,5))))+(((-40178160)*((pow(M,3))*(pow(r,6))))+(((35309480)*((pow(M,2))*(pow(r,7))))+(((94050540)*((M)*(pow(r,8))))+((40255950)*(pow(r,9)))))))))))))))))))))+((-315)*((pow((pow(a,2))+(pow(r,2)),2))*((((7)*(pow(a,16)))+(((2431)*(pow(r,16)))+(((112)*((pow(a,14))*((r)*(((5)*(M))+((3)*(r))))))+(((2288)*((pow(a,2))*((pow(r,13))*(((5)*(M))+((6)*(r))))))+(((572)*((pow(a,4))*((pow(r,10))*(((32)*(pow(M,2)))+(((88)*((M)*(r)))+((57)*(pow(r,2))))))))+(((28)*((pow(a,12))*((pow(r,2))*(((160)*(pow(M,2)))+(((280)*((M)*(r)))+((117)*(pow(r,2))))))))+(((112)*((pow(a,10))*((pow(r,3))*(((64)*(pow(M,3)))+(((256)*((pow(M,2))*(r)))+(((323)*((M)*(pow(r,2))))+((124)*(pow(r,3)))))))))+(((176)*((pow(a,6))*((pow(r,7))*(((64)*(pow(M,3)))+(((320)*((pow(M,2))*(r)))+(((503)*((M)*(pow(r,2))))+((239)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((9216)*((pow(M,3))*(r)))+(((31104)*((pow(M,2))*(pow(r,2))))+(((39264)*((M)*(pow(r,3))))+((15849)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_731(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[731] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00006975446428571428571428571428571428571428571428571428571428571428571428571428571428571428571428571429"))*((HighPrecisionScalar("8.346656017032609608959377059234941704085238203673191974468735731010716950031073753239238367326762381"))*((pow(a,-15))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,12)))+(((pow(a,10))*((((42)*(M))+((-55)*(r)))*(r)))+(((42)*((pow(r,10))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2)))))))+(((-2)*((pow(a,8))*((pow(r,2))*(((38)*(pow(M,2)))+(((923)*((M)*(r)))+((691)*(pow(r,2))))))))+(((7)*((pow(a,2))*((pow(r,7))*(((32)*(pow(M,3)))+(((1456)*((pow(M,2))*(r)))+(((686)*((M)*(pow(r,2))))+((-981)*(pow(r,3)))))))))+(((-2)*((pow(a,6))*((pow(r,3))*(((48)*(pow(M,3)))+(((-536)*((pow(M,2))*(r)))+(((3230)*((M)*(pow(r,2))))+((2839)*(pow(r,3)))))))))+((2)*((pow(a,4))*((pow(r,4))*(((64)*(pow(M,4)))+(((3008)*((pow(M,3))*(r)))+(((5612)*((pow(M,2))*(pow(r,2))))+(((-1754)*((M)*(pow(r,3))))+((-4665)*(pow(r,4))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((30563)*(pow(a,16)))+(((765765)*(pow(r,16)))+(((30030)*((pow(a,2))*((pow(r,13))*(((86)*(M))+((161)*(r))))))+(((2)*((pow(a,14))*((r)*(((270778)*(M))+((257641)*(r))))))+(((6006)*((pow(a,4))*((pow(r,10))*(((432)*(pow(M,2)))+(((2148)*((M)*(r)))+((2173)*(pow(r,2))))))))+(((6)*((pow(a,12))*((pow(r,2))*(((249104)*(pow(M,2)))+(((790660)*((M)*(r)))+((520811)*(pow(r,2))))))))+(((198)*((pow(a,6))*((pow(r,7))*(((3776)*(pow(M,3)))+(((46752)*((pow(M,2))*(r)))+(((132962)*((M)*(pow(r,2))))+((98809)*(pow(r,3)))))))))+(((2)*((pow(a,10))*((pow(r,3))*(((359488)*(pow(M,3)))+(((3528480)*((pow(M,2))*(r)))+(((8067846)*((M)*(pow(r,2))))+((4864837)*(pow(r,3)))))))))+((8)*((pow(a,8))*((pow(r,4))*(((1792)*(pow(M,4)))+(((183328)*((pow(M,3))*(r)))+(((1528080)*((pow(M,2))*(pow(r,2))))+(((3492682)*((M)*(pow(r,3))))+((2208967)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((pow((pow(a,2))+(pow(r,2)),2))*((((7)*(pow(a,16)))+(((2431)*(pow(r,16)))+(((112)*((pow(a,14))*((r)*(((5)*(M))+((3)*(r))))))+(((2288)*((pow(a,2))*((pow(r,13))*(((5)*(M))+((6)*(r))))))+(((572)*((pow(a,4))*((pow(r,10))*(((32)*(pow(M,2)))+(((88)*((M)*(r)))+((57)*(pow(r,2))))))))+(((28)*((pow(a,12))*((pow(r,2))*(((160)*(pow(M,2)))+(((280)*((M)*(r)))+((117)*(pow(r,2))))))))+(((112)*((pow(a,10))*((pow(r,3))*(((64)*(pow(M,3)))+(((256)*((pow(M,2))*(r)))+(((323)*((M)*(pow(r,2))))+((124)*(pow(r,3)))))))))+(((176)*((pow(a,6))*((pow(r,7))*(((64)*(pow(M,3)))+(((320)*((pow(M,2))*(r)))+(((503)*((M)*(pow(r,2))))+((239)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((9216)*((pow(M,3))*(r)))+(((31104)*((pow(M,2))*(pow(r,2))))+(((39264)*((M)*(pow(r,3))))+((15849)*(pow(r,4))))))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_732(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[732] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0001220703125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.9511897312113418531323991584789660570410750531734017398944334776513036033630068815595926266925440328"))*((pow(a,-17))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((10)*(pow(a,16)))+(((45)*((pow(a,14))*((((10)*(M))+((-3)*(r)))*(r))))+(((858)*((pow(r,14))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2)))))))+(((-10)*((pow(a,12))*((pow(r,2))*(((-50)*(pow(M,2)))+(((1705)*((M)*(r)))+((1167)*(pow(r,2))))))))+(((99)*((pow(a,2))*((pow(r,11))*(((64)*(pow(M,3)))+(((2920)*((pow(M,2))*(r)))+(((1738)*((M)*(pow(r,2))))+((-1997)*(pow(r,3)))))))))+(((-1)*((pow(a,10))*((pow(r,3))*(((3776)*(pow(M,3)))+(((46344)*((pow(M,2))*(r)))+(((158022)*((M)*(pow(r,2))))+((88457)*(pow(r,3)))))))))+(((6)*((pow(a,4))*((pow(r,8))*(((1152)*(pow(M,4)))+(((54336)*((pow(M,3))*(r)))+(((111138)*((pow(M,2))*(pow(r,2))))+(((-7629)*((M)*(pow(r,3))))+((-69301)*(pow(r,4))))))))))+(((6)*((pow(a,8))*((pow(r,4))*(((128)*(pow(M,4)))+(((19648)*((pow(M,3))*(r)))+(((66)*((pow(M,2))*(pow(r,2))))+(((-70651)*((M)*(pow(r,3))))+((-46454)*(pow(r,4))))))))))+((pow(a,6))*((pow(r,5))*(((2048)*(pow(M,5)))+(((101888)*((pow(M,4))*(r)))+(((440832)*((pow(M,3))*(pow(r,2))))+(((426704)*((pow(M,2))*(pow(r,3))))+(((-424858)*((M)*(pow(r,4))))+((-458505)*(pow(r,5))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((30563)*(pow(a,16)))+(((765765)*(pow(r,16)))+(((30030)*((pow(a,2))*((pow(r,13))*(((86)*(M))+((161)*(r))))))+(((2)*((pow(a,14))*((r)*(((270778)*(M))+((257641)*(r))))))+(((6006)*((pow(a,4))*((pow(r,10))*(((432)*(pow(M,2)))+(((2148)*((M)*(r)))+((2173)*(pow(r,2))))))))+(((6)*((pow(a,12))*((pow(r,2))*(((249104)*(pow(M,2)))+(((790660)*((M)*(r)))+((520811)*(pow(r,2))))))))+(((198)*((pow(a,6))*((pow(r,7))*(((3776)*(pow(M,3)))+(((46752)*((pow(M,2))*(r)))+(((132962)*((M)*(pow(r,2))))+((98809)*(pow(r,3)))))))))+(((2)*((pow(a,10))*((pow(r,3))*(((359488)*(pow(M,3)))+(((3528480)*((pow(M,2))*(r)))+(((8067846)*((M)*(pow(r,2))))+((4864837)*(pow(r,3)))))))))+((8)*((pow(a,8))*((pow(r,4))*(((1792)*(pow(M,4)))+(((183328)*((pow(M,3))*(r)))+(((1528080)*((pow(M,2))*(pow(r,2))))+(((3492682)*((M)*(pow(r,3))))+((2208967)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((pow((pow(a,2))+(pow(r,2)),2))*((((7)*(pow(a,16)))+(((2431)*(pow(r,16)))+(((112)*((pow(a,14))*((r)*(((5)*(M))+((3)*(r))))))+(((2288)*((pow(a,2))*((pow(r,13))*(((5)*(M))+((6)*(r))))))+(((572)*((pow(a,4))*((pow(r,10))*(((32)*(pow(M,2)))+(((88)*((M)*(r)))+((57)*(pow(r,2))))))))+(((28)*((pow(a,12))*((pow(r,2))*(((160)*(pow(M,2)))+(((280)*((M)*(r)))+((117)*(pow(r,2))))))))+(((112)*((pow(a,10))*((pow(r,3))*(((64)*(pow(M,3)))+(((256)*((pow(M,2))*(r)))+(((323)*((M)*(pow(r,2))))+((124)*(pow(r,3)))))))))+(((176)*((pow(a,6))*((pow(r,7))*(((64)*(pow(M,3)))+(((320)*((pow(M,2))*(r)))+(((503)*((M)*(pow(r,2))))+((239)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((9216)*((pow(M,3))*(r)))+(((31104)*((pow(M,2))*(pow(r,2))))+(((39264)*((M)*(pow(r,3))))+((15849)*(pow(r,4))))))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_733(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[733] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00008283342633928571428571428571428571428571428571428571428571428571428571428571428571428571428571428571"))*((pow(a,-19))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((14)*(pow(a,20)))+(((7)*((pow(a,18))*((r)*(((154)*(M))+((9)*(r))))))+(((4862)*((pow(r,18))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2)))))))+(((-42)*((pow(a,16))*((pow(r,2))*(((-134)*(pow(M,2)))+(((805)*((M)*(r)))+((555)*(pow(r,2))))))))+(((143)*((pow(a,2))*((pow(r,15))*(((320)*(pow(M,3)))+(((14624)*((pow(M,2))*(r)))+(((9786)*((M)*(pow(r,2))))+((-10119)*(pow(r,3)))))))))+(((-28)*((pow(a,14))*((pow(r,3))*(((368)*(pow(M,3)))+(((9944)*((pow(M,2))*(r)))+(((22142)*((M)*(pow(r,2))))+((10267)*(pow(r,3)))))))))+(((286)*((pow(a,4))*((pow(r,12))*(((256)*(pow(M,4)))+(((12096)*((pow(M,3))*(r)))+(((25784)*((pow(M,2))*(pow(r,2))))+(((684)*((M)*(pow(r,3))))+((-14419)*(pow(r,4))))))))))+(((-4)*((pow(a,12))*((pow(r,4))*(((5248)*(pow(M,4)))+(((-17504)*((pow(M,3))*(r)))+(((395420)*((pow(M,2))*(pow(r,2))))+(((799014)*((M)*(pow(r,3))))+((359925)*(pow(r,4))))))))))+(((2)*((pow(a,10))*((pow(r,5))*(((8192)*(pow(M,5)))+(((550912)*((pow(M,4))*(r)))+(((1324448)*((pow(M,3))*(pow(r,2))))+(((-928112)*((pow(M,2))*(pow(r,3))))+(((-3814422)*((M)*(pow(r,4))))+((-1961759)*(pow(r,5)))))))))))+(((44)*((pow(a,6))*((pow(r,9))*(((1024)*(pow(M,5)))+(((50688)*((pow(M,4))*(r)))+(((210352)*((pow(M,3))*(pow(r,2))))+(((203704)*((pow(M,2))*(pow(r,3))))+(((-114366)*((M)*(pow(r,4))))+((-149883)*(pow(r,5)))))))))))+((4)*((pow(a,8))*((pow(r,6))*(((2048)*(pow(M,6)))+(((109568)*((pow(M,5))*(r)))+(((819456)*((pow(M,4))*(pow(r,2))))+(((2102592)*((pow(M,3))*(pow(r,3))))+(((777914)*((pow(M,2))*(pow(r,4))))+(((-2319731)*((M)*(pow(r,5))))+((-1611795)*(pow(r,6))))))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((30563)*(pow(a,16)))+(((765765)*(pow(r,16)))+(((30030)*((pow(a,2))*((pow(r,13))*(((86)*(M))+((161)*(r))))))+(((2)*((pow(a,14))*((r)*(((270778)*(M))+((257641)*(r))))))+(((6006)*((pow(a,4))*((pow(r,10))*(((432)*(pow(M,2)))+(((2148)*((M)*(r)))+((2173)*(pow(r,2))))))))+(((6)*((pow(a,12))*((pow(r,2))*(((249104)*(pow(M,2)))+(((790660)*((M)*(r)))+((520811)*(pow(r,2))))))))+(((198)*((pow(a,6))*((pow(r,7))*(((3776)*(pow(M,3)))+(((46752)*((pow(M,2))*(r)))+(((132962)*((M)*(pow(r,2))))+((98809)*(pow(r,3)))))))))+(((2)*((pow(a,10))*((pow(r,3))*(((359488)*(pow(M,3)))+(((3528480)*((pow(M,2))*(r)))+(((8067846)*((M)*(pow(r,2))))+((4864837)*(pow(r,3)))))))))+((8)*((pow(a,8))*((pow(r,4))*(((1792)*(pow(M,4)))+(((183328)*((pow(M,3))*(r)))+(((1528080)*((pow(M,2))*(pow(r,2))))+(((3492682)*((M)*(pow(r,3))))+((2208967)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((pow((pow(a,2))+(pow(r,2)),2))*((((7)*(pow(a,16)))+(((2431)*(pow(r,16)))+(((112)*((pow(a,14))*((r)*(((5)*(M))+((3)*(r))))))+(((2288)*((pow(a,2))*((pow(r,13))*(((5)*(M))+((6)*(r))))))+(((572)*((pow(a,4))*((pow(r,10))*(((32)*(pow(M,2)))+(((88)*((M)*(r)))+((57)*(pow(r,2))))))))+(((28)*((pow(a,12))*((pow(r,2))*(((160)*(pow(M,2)))+(((280)*((M)*(r)))+((117)*(pow(r,2))))))))+(((112)*((pow(a,10))*((pow(r,3))*(((64)*(pow(M,3)))+(((256)*((pow(M,2))*(r)))+(((323)*((M)*(pow(r,2))))+((124)*(pow(r,3)))))))))+(((176)*((pow(a,6))*((pow(r,7))*(((64)*(pow(M,3)))+(((320)*((pow(M,2))*(r)))+(((503)*((M)*(pow(r,2))))+((239)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((9216)*((pow(M,3))*(r)))+(((31104)*((pow(M,2))*(pow(r,2))))+(((39264)*((M)*(pow(r,3))))+((15849)*(pow(r,4))))))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_734(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[734] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0001656668526785714285714285714285714285714285714285714285714285714285714285714285714285714285714285714"))*((pow(a,-17))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((7)*(pow(a,16)))+(((2431)*(pow(r,16)))+(((112)*((pow(a,14))*((r)*(((5)*(M))+((3)*(r))))))+(((2288)*((pow(a,2))*((pow(r,13))*(((5)*(M))+((6)*(r))))))+(((572)*((pow(a,4))*((pow(r,10))*(((32)*(pow(M,2)))+(((88)*((M)*(r)))+((57)*(pow(r,2))))))))+(((28)*((pow(a,12))*((pow(r,2))*(((160)*(pow(M,2)))+(((280)*((M)*(r)))+((117)*(pow(r,2))))))))+(((112)*((pow(a,10))*((pow(r,3))*(((64)*(pow(M,3)))+(((256)*((pow(M,2))*(r)))+(((323)*((M)*(pow(r,2))))+((124)*(pow(r,3)))))))))+(((176)*((pow(a,6))*((pow(r,7))*(((64)*(pow(M,3)))+(((320)*((pow(M,2))*(r)))+(((503)*((M)*(pow(r,2))))+((239)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((9216)*((pow(M,3))*(r)))+(((31104)*((pow(M,2))*(pow(r,2))))+(((39264)*((M)*(pow(r,3))))+((15849)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((30563)*(pow(a,16)))+(((765765)*(pow(r,16)))+(((30030)*((pow(a,2))*((pow(r,13))*(((86)*(M))+((161)*(r))))))+(((2)*((pow(a,14))*((r)*(((270778)*(M))+((257641)*(r))))))+(((6006)*((pow(a,4))*((pow(r,10))*(((432)*(pow(M,2)))+(((2148)*((M)*(r)))+((2173)*(pow(r,2))))))))+(((6)*((pow(a,12))*((pow(r,2))*(((249104)*(pow(M,2)))+(((790660)*((M)*(r)))+((520811)*(pow(r,2))))))))+(((198)*((pow(a,6))*((pow(r,7))*(((3776)*(pow(M,3)))+(((46752)*((pow(M,2))*(r)))+(((132962)*((M)*(pow(r,2))))+((98809)*(pow(r,3)))))))))+(((2)*((pow(a,10))*((pow(r,3))*(((359488)*(pow(M,3)))+(((3528480)*((pow(M,2))*(r)))+(((8067846)*((M)*(pow(r,2))))+((4864837)*(pow(r,3)))))))))+((8)*((pow(a,8))*((pow(r,4))*(((1792)*(pow(M,4)))+(((183328)*((pow(M,3))*(r)))+(((1528080)*((pow(M,2))*(pow(r,2))))+(((3492682)*((M)*(pow(r,3))))+((2208967)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((pow((pow(a,2))+(pow(r,2)),2))*((((7)*(pow(a,16)))+(((2431)*(pow(r,16)))+(((112)*((pow(a,14))*((r)*(((5)*(M))+((3)*(r))))))+(((2288)*((pow(a,2))*((pow(r,13))*(((5)*(M))+((6)*(r))))))+(((572)*((pow(a,4))*((pow(r,10))*(((32)*(pow(M,2)))+(((88)*((M)*(r)))+((57)*(pow(r,2))))))))+(((28)*((pow(a,12))*((pow(r,2))*(((160)*(pow(M,2)))+(((280)*((M)*(r)))+((117)*(pow(r,2))))))))+(((112)*((pow(a,10))*((pow(r,3))*(((64)*(pow(M,3)))+(((256)*((pow(M,2))*(r)))+(((323)*((M)*(pow(r,2))))+((124)*(pow(r,3)))))))))+(((176)*((pow(a,6))*((pow(r,7))*(((64)*(pow(M,3)))+(((320)*((pow(M,2))*(r)))+(((503)*((M)*(pow(r,2))))+((239)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((9216)*((pow(M,3))*(r)))+(((31104)*((pow(M,2))*(pow(r,2))))+(((39264)*((M)*(pow(r,3))))+((15849)*(pow(r,4))))))))))))))))))*(expr[3])))))))))))))).cast<double>());
}
