
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_815(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[815] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0005208333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((HighPrecisionScalar("0.2182178902359923812660974854156194518564026941318081858384401011384223059784652803144934075949259539"))*((pow(a,-11))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,2))+((-1)*((r)*((M)+((55)*(r))))))*(((11)*((a)*((r)*(((-1322685)*((((2)*(M))+((-1)*(r)))*(pow(r,20))))+(((27985)*((pow(a,20))*(((2)*(M))+(r))))+(((46410)*((pow(a,2))*((pow(r,17))*(((-338)*(pow(M,2)))+(((-232)*((M)*(r)))+((229)*(pow(r,2))))))))+(((10)*((pow(a,18))*((r)*(((119062)*(pow(M,2)))+(((175032)*((M)*(r)))+((60549)*(pow(r,2))))))))+(((-273)*((pow(a,4))*((pow(r,14))*(((124832)*(pow(M,3)))+(((272432)*((pow(M,2))*(r)))+(((12534)*((M)*(pow(r,2))))+((-138429)*(pow(r,3)))))))))+(((pow(a,16))*((pow(r,2))*(((2637536)*(pow(M,3)))+(((13481264)*((pow(M,2))*(r)))+(((15212382)*((M)*(pow(r,2))))+((4845417)*(pow(r,3))))))))+(((312)*((pow(a,6))*((pow(r,11))*(((-104568)*(pow(M,4)))+(((-446232)*((pow(M,3))*(r)))+(((-417728)*((pow(M,2))*(pow(r,2))))+(((189456)*((M)*(pow(r,3))))+((250221)*(pow(r,4))))))))))+(((8)*((pow(a,14))*((pow(r,3))*(((-726152)*(pow(M,4)))+(((525848)*((pow(M,3))*(r)))+(((6539708)*((pow(M,2))*(pow(r,2))))+(((7812416)*((M)*(pow(r,3))))+((2577019)*(pow(r,4))))))))))+(((-2)*((pow(a,8))*((pow(r,8))*(((6393856)*(pow(M,5)))+(((49265792)*((pow(M,4))*(r)))+(((108452080)*((pow(M,3))*(pow(r,2))))+(((41299000)*((pow(M,2))*(pow(r,3))))+(((-78337630)*((M)*(pow(r,4))))+((-51665885)*(pow(r,5)))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((-4332544)*(pow(M,5)))+(((-22449792)*((pow(M,4))*(r)))+(((-20095920)*((pow(M,3))*(pow(r,2))))+(((43321400)*((pow(M,2))*(pow(r,3))))+(((72056970)*((M)*(pow(r,4))))+((26823585)*(pow(r,5)))))))))))+((4)*((pow(a,10))*((pow(r,5))*(((-343552)*(pow(M,6)))+(((-5363200)*((pow(M,5))*(r)))+(((-26249184)*((pow(M,4))*(pow(r,2))))+(((-38380000)*((pow(M,3))*(pow(r,3))))+(((8915390)*((pow(M,2))*(pow(r,4))))+(((49349400)*((M)*(pow(r,5))))+((22761915)*(pow(r,6)))))))))))))))))))))))))+((-315)*((((63)*(pow(a,20)))+(((46189)*(pow(r,20)))+(((1260)*((pow(a,18))*((r)*(((5)*(M))+((3)*(r))))))+(((48620)*((pow(a,2))*((pow(r,17))*(((5)*(M))+((7)*(r))))))+(((105)*((pow(a,16))*((pow(r,2))*(((640)*(pow(M,2)))+(((1120)*((M)*(r)))+((457)*(pow(r,2))))))))+(((715)*((pow(a,4))*((pow(r,14))*(((640)*(pow(M,2)))+(((2080)*((M)*(r)))+((1537)*(pow(r,2))))))))+(((1680)*((pow(a,14))*((pow(r,3))*(((96)*(pow(M,3)))+(((384)*((pow(M,2))*(r)))+(((457)*((M)*(pow(r,2))))+((164)*(pow(r,3)))))))))+(((11440)*((pow(a,6))*((pow(r,11))*(((32)*(pow(M,3)))+(((192)*((pow(M,2))*(r)))+(((339)*((M)*(pow(r,2))))+((178)*(pow(r,3)))))))))+(((110)*((pow(a,8))*((pow(r,8))*(((1024)*(pow(M,4)))+(((11264)*((pow(M,3))*(r)))+(((38976)*((pow(M,2))*(pow(r,2))))+(((50864)*((M)*(pow(r,3))))+((21631)*(pow(r,4))))))))))+(((30)*((pow(a,12))*((pow(r,4))*(((3072)*(pow(M,4)))+(((27648)*((pow(M,3))*(r)))+(((78528)*((pow(M,2))*(pow(r,2))))+(((84528)*((M)*(pow(r,3))))+((29837)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((25600)*((pow(M,4))*(r)))+(((192640)*((pow(M,3))*(pow(r,2))))+(((540800)*((pow(M,2))*(pow(r,3))))+(((605045)*((M)*(pow(r,4))))+((226469)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_816(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[816] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.001302083333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((HighPrecisionScalar("0.09759000729485331793543846362401001895938126346147459932897122380847950462576527688502125360360520702"))*((pow(a,-13))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,6))+(((3)*((pow(a,4))*(((M)+((-17)*(r)))*(r))))+(((-3)*((pow(r,5))*((M)+((55)*(r)))))+((-1)*((pow(a,2))*((pow(r,2))*(((4)*(pow(M,2)))+(((224)*((M)*(r)))+((217)*(pow(r,2)))))))))))*(((11)*((a)*((r)*(((-1322685)*((((2)*(M))+((-1)*(r)))*(pow(r,20))))+(((27985)*((pow(a,20))*(((2)*(M))+(r))))+(((46410)*((pow(a,2))*((pow(r,17))*(((-338)*(pow(M,2)))+(((-232)*((M)*(r)))+((229)*(pow(r,2))))))))+(((10)*((pow(a,18))*((r)*(((119062)*(pow(M,2)))+(((175032)*((M)*(r)))+((60549)*(pow(r,2))))))))+(((-273)*((pow(a,4))*((pow(r,14))*(((124832)*(pow(M,3)))+(((272432)*((pow(M,2))*(r)))+(((12534)*((M)*(pow(r,2))))+((-138429)*(pow(r,3)))))))))+(((pow(a,16))*((pow(r,2))*(((2637536)*(pow(M,3)))+(((13481264)*((pow(M,2))*(r)))+(((15212382)*((M)*(pow(r,2))))+((4845417)*(pow(r,3))))))))+(((312)*((pow(a,6))*((pow(r,11))*(((-104568)*(pow(M,4)))+(((-446232)*((pow(M,3))*(r)))+(((-417728)*((pow(M,2))*(pow(r,2))))+(((189456)*((M)*(pow(r,3))))+((250221)*(pow(r,4))))))))))+(((8)*((pow(a,14))*((pow(r,3))*(((-726152)*(pow(M,4)))+(((525848)*((pow(M,3))*(r)))+(((6539708)*((pow(M,2))*(pow(r,2))))+(((7812416)*((M)*(pow(r,3))))+((2577019)*(pow(r,4))))))))))+(((-2)*((pow(a,8))*((pow(r,8))*(((6393856)*(pow(M,5)))+(((49265792)*((pow(M,4))*(r)))+(((108452080)*((pow(M,3))*(pow(r,2))))+(((41299000)*((pow(M,2))*(pow(r,3))))+(((-78337630)*((M)*(pow(r,4))))+((-51665885)*(pow(r,5)))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((-4332544)*(pow(M,5)))+(((-22449792)*((pow(M,4))*(r)))+(((-20095920)*((pow(M,3))*(pow(r,2))))+(((43321400)*((pow(M,2))*(pow(r,3))))+(((72056970)*((M)*(pow(r,4))))+((26823585)*(pow(r,5)))))))))))+((4)*((pow(a,10))*((pow(r,5))*(((-343552)*(pow(M,6)))+(((-5363200)*((pow(M,5))*(r)))+(((-26249184)*((pow(M,4))*(pow(r,2))))+(((-38380000)*((pow(M,3))*(pow(r,3))))+(((8915390)*((pow(M,2))*(pow(r,4))))+(((49349400)*((M)*(pow(r,5))))+((22761915)*(pow(r,6)))))))))))))))))))))))))+((-315)*((((63)*(pow(a,20)))+(((46189)*(pow(r,20)))+(((1260)*((pow(a,18))*((r)*(((5)*(M))+((3)*(r))))))+(((48620)*((pow(a,2))*((pow(r,17))*(((5)*(M))+((7)*(r))))))+(((105)*((pow(a,16))*((pow(r,2))*(((640)*(pow(M,2)))+(((1120)*((M)*(r)))+((457)*(pow(r,2))))))))+(((715)*((pow(a,4))*((pow(r,14))*(((640)*(pow(M,2)))+(((2080)*((M)*(r)))+((1537)*(pow(r,2))))))))+(((1680)*((pow(a,14))*((pow(r,3))*(((96)*(pow(M,3)))+(((384)*((pow(M,2))*(r)))+(((457)*((M)*(pow(r,2))))+((164)*(pow(r,3)))))))))+(((11440)*((pow(a,6))*((pow(r,11))*(((32)*(pow(M,3)))+(((192)*((pow(M,2))*(r)))+(((339)*((M)*(pow(r,2))))+((178)*(pow(r,3)))))))))+(((110)*((pow(a,8))*((pow(r,8))*(((1024)*(pow(M,4)))+(((11264)*((pow(M,3))*(r)))+(((38976)*((pow(M,2))*(pow(r,2))))+(((50864)*((M)*(pow(r,3))))+((21631)*(pow(r,4))))))))))+(((30)*((pow(a,12))*((pow(r,4))*(((3072)*(pow(M,4)))+(((27648)*((pow(M,3))*(r)))+(((78528)*((pow(M,2))*(pow(r,2))))+(((84528)*((M)*(pow(r,3))))+((29837)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((25600)*((pow(M,4))*(r)))+(((192640)*((pow(M,3))*(pow(r,2))))+(((540800)*((pow(M,2))*(pow(r,3))))+(((605045)*((M)*(pow(r,4))))+((226469)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_817(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[817] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0006510416666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666667"))*((HighPrecisionScalar("0.09759000729485331793543846362401001895938126346147459932897122380847950462576527688502125360360520702"))*((pow(a,-13))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*(((pow(a,4))+(((3)*(pow(r,4)))+((4)*((pow(a,2))*((r)*((M)+(r)))))))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-11)*((a)*((((27985)*(pow(a,16)))+(((1322685)*(pow(r,16)))+(((185640)*((pow(a,2))*((pow(r,13))*(((28)*(M))+((43)*(r))))))+(((80)*((pow(a,14))*((r)*(((8141)*(M))+((6869)*(r))))))+(((4368)*((pow(a,4))*((pow(r,10))*(((1521)*(pow(M,2)))+(((5619)*((M)*(r)))+((4694)*(pow(r,2))))))))+(((24)*((pow(a,12))*((pow(r,2))*(((109222)*(pow(M,2)))+(((272042)*((M)*(r)))+((154933)*(pow(r,2))))))))+(((1872)*((pow(a,6))*((pow(r,7))*(((1616)*(pow(M,3)))+(((11772)*((pow(M,2))*(r)))+(((25117)*((M)*(pow(r,2))))+((15534)*(pow(r,3)))))))))+(((8)*((pow(a,10))*((pow(r,3))*(((292256)*(pow(M,3)))+(((1749048)*((pow(M,2))*(r)))+(((3078672)*((M)*(pow(r,2))))+((1578731)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((171776)*(pow(M,4)))+(((2681600)*((pow(M,3))*(r)))+(((13382256)*((pow(M,2))*(pow(r,2))))+(((23212400)*((M)*(pow(r,3))))+((12334541)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((((63)*(pow(a,20)))+(((46189)*(pow(r,20)))+(((1260)*((pow(a,18))*((r)*(((5)*(M))+((3)*(r))))))+(((48620)*((pow(a,2))*((pow(r,17))*(((5)*(M))+((7)*(r))))))+(((105)*((pow(a,16))*((pow(r,2))*(((640)*(pow(M,2)))+(((1120)*((M)*(r)))+((457)*(pow(r,2))))))))+(((715)*((pow(a,4))*((pow(r,14))*(((640)*(pow(M,2)))+(((2080)*((M)*(r)))+((1537)*(pow(r,2))))))))+(((1680)*((pow(a,14))*((pow(r,3))*(((96)*(pow(M,3)))+(((384)*((pow(M,2))*(r)))+(((457)*((M)*(pow(r,2))))+((164)*(pow(r,3)))))))))+(((11440)*((pow(a,6))*((pow(r,11))*(((32)*(pow(M,3)))+(((192)*((pow(M,2))*(r)))+(((339)*((M)*(pow(r,2))))+((178)*(pow(r,3)))))))))+(((110)*((pow(a,8))*((pow(r,8))*(((1024)*(pow(M,4)))+(((11264)*((pow(M,3))*(r)))+(((38976)*((pow(M,2))*(pow(r,2))))+(((50864)*((M)*(pow(r,3))))+((21631)*(pow(r,4))))))))))+(((30)*((pow(a,12))*((pow(r,4))*(((3072)*(pow(M,4)))+(((27648)*((pow(M,3))*(r)))+(((78528)*((pow(M,2))*(pow(r,2))))+(((84528)*((M)*(pow(r,3))))+((29837)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((25600)*((pow(M,4))*(r)))+(((192640)*((pow(M,3))*(pow(r,2))))+(((540800)*((pow(M,2))*(pow(r,3))))+(((605045)*((M)*(pow(r,4))))+((226469)*(pow(r,5)))))))))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_818(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[818] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0001953125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.2182178902359923812660974854156194518564026941318081858384401011384223059784652803144934075949259539"))*((pow(a,-15))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((3)*(pow(a,10)))+(((3)*((pow(a,8))*((((15)*(M))+((-43)*(r)))*(r))))+(((-35)*((pow(r,9))*((M)+((55)*(r)))))+(((-2)*((pow(a,6))*((pow(r,2))*(((8)*(pow(M,2)))+(((1274)*((M)*(r)))+((941)*(pow(r,2))))))))+(((-5)*((pow(a,2))*((pow(r,6))*(((16)*(pow(M,2)))+(((900)*((M)*(r)))+((1093)*(pow(r,2))))))))+((-2)*((pow(a,4))*((pow(r,3))*(((16)*(pow(M,3)))+(((944)*((pow(M,2))*(r)))+(((3529)*((M)*(pow(r,2))))+((2645)*(pow(r,3))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-11)*((a)*((((27985)*(pow(a,16)))+(((1322685)*(pow(r,16)))+(((185640)*((pow(a,2))*((pow(r,13))*(((28)*(M))+((43)*(r))))))+(((80)*((pow(a,14))*((r)*(((8141)*(M))+((6869)*(r))))))+(((4368)*((pow(a,4))*((pow(r,10))*(((1521)*(pow(M,2)))+(((5619)*((M)*(r)))+((4694)*(pow(r,2))))))))+(((24)*((pow(a,12))*((pow(r,2))*(((109222)*(pow(M,2)))+(((272042)*((M)*(r)))+((154933)*(pow(r,2))))))))+(((1872)*((pow(a,6))*((pow(r,7))*(((1616)*(pow(M,3)))+(((11772)*((pow(M,2))*(r)))+(((25117)*((M)*(pow(r,2))))+((15534)*(pow(r,3)))))))))+(((8)*((pow(a,10))*((pow(r,3))*(((292256)*(pow(M,3)))+(((1749048)*((pow(M,2))*(r)))+(((3078672)*((M)*(pow(r,2))))+((1578731)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((171776)*(pow(M,4)))+(((2681600)*((pow(M,3))*(r)))+(((13382256)*((pow(M,2))*(pow(r,2))))+(((23212400)*((M)*(pow(r,3))))+((12334541)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((((63)*(pow(a,20)))+(((46189)*(pow(r,20)))+(((1260)*((pow(a,18))*((r)*(((5)*(M))+((3)*(r))))))+(((48620)*((pow(a,2))*((pow(r,17))*(((5)*(M))+((7)*(r))))))+(((105)*((pow(a,16))*((pow(r,2))*(((640)*(pow(M,2)))+(((1120)*((M)*(r)))+((457)*(pow(r,2))))))))+(((715)*((pow(a,4))*((pow(r,14))*(((640)*(pow(M,2)))+(((2080)*((M)*(r)))+((1537)*(pow(r,2))))))))+(((1680)*((pow(a,14))*((pow(r,3))*(((96)*(pow(M,3)))+(((384)*((pow(M,2))*(r)))+(((457)*((M)*(pow(r,2))))+((164)*(pow(r,3)))))))))+(((11440)*((pow(a,6))*((pow(r,11))*(((32)*(pow(M,3)))+(((192)*((pow(M,2))*(r)))+(((339)*((M)*(pow(r,2))))+((178)*(pow(r,3)))))))))+(((110)*((pow(a,8))*((pow(r,8))*(((1024)*(pow(M,4)))+(((11264)*((pow(M,3))*(r)))+(((38976)*((pow(M,2))*(pow(r,2))))+(((50864)*((M)*(pow(r,3))))+((21631)*(pow(r,4))))))))))+(((30)*((pow(a,12))*((pow(r,4))*(((3072)*(pow(M,4)))+(((27648)*((pow(M,3))*(r)))+(((78528)*((pow(M,2))*(pow(r,2))))+(((84528)*((M)*(pow(r,3))))+((29837)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((25600)*((pow(M,4))*(r)))+(((192640)*((pow(M,3))*(pow(r,2))))+(((540800)*((pow(M,2))*(pow(r,3))))+(((605045)*((M)*(pow(r,4))))+((226469)*(pow(r,5)))))))))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_819(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[819] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00003255208333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((HighPrecisionScalar("0.7867957924694431458008298244102962101351609445616681247816641005998417633532803924544696045447295497"))*((pow(a,-17))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((5)*(pow(a,14)))+(((5)*((pow(a,12))*((((35)*(M))+((-31)*(r)))*(r))))+(((-231)*((pow(r,13))*((M)+((55)*(r)))))+(((-15)*((pow(a,10))*((pow(r,2))*(((-20)*(pow(M,2)))+(((588)*((M)*(r)))+((397)*(pow(r,2))))))))+(((-21)*((pow(a,2))*((pow(r,10))*(((36)*(pow(M,2)))+(((2028)*((M)*(r)))+((2629)*(pow(r,2))))))))+(((-21)*((pow(a,4))*((pow(r,7))*(((32)*(pow(M,3)))+(((1872)*((pow(M,2))*(r)))+(((6207)*((M)*(pow(r,2))))+((4517)*(pow(r,3)))))))))+(((-1)*((pow(a,8))*((pow(r,3))*(((352)*(pow(M,3)))+(((26448)*((pow(M,2))*(r)))+(((64029)*((M)*(pow(r,2))))+((33979)*(pow(r,3)))))))))+((-1)*((pow(a,6))*((pow(r,4))*(((128)*(pow(M,4)))+(((8192)*((pow(M,3))*(r)))+(((65304)*((pow(M,2))*(pow(r,2))))+(((143024)*((M)*(pow(r,3))))+((80537)*(pow(r,4)))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-11)*((a)*((((27985)*(pow(a,16)))+(((1322685)*(pow(r,16)))+(((185640)*((pow(a,2))*((pow(r,13))*(((28)*(M))+((43)*(r))))))+(((80)*((pow(a,14))*((r)*(((8141)*(M))+((6869)*(r))))))+(((4368)*((pow(a,4))*((pow(r,10))*(((1521)*(pow(M,2)))+(((5619)*((M)*(r)))+((4694)*(pow(r,2))))))))+(((24)*((pow(a,12))*((pow(r,2))*(((109222)*(pow(M,2)))+(((272042)*((M)*(r)))+((154933)*(pow(r,2))))))))+(((1872)*((pow(a,6))*((pow(r,7))*(((1616)*(pow(M,3)))+(((11772)*((pow(M,2))*(r)))+(((25117)*((M)*(pow(r,2))))+((15534)*(pow(r,3)))))))))+(((8)*((pow(a,10))*((pow(r,3))*(((292256)*(pow(M,3)))+(((1749048)*((pow(M,2))*(r)))+(((3078672)*((M)*(pow(r,2))))+((1578731)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((171776)*(pow(M,4)))+(((2681600)*((pow(M,3))*(r)))+(((13382256)*((pow(M,2))*(pow(r,2))))+(((23212400)*((M)*(pow(r,3))))+((12334541)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((((63)*(pow(a,20)))+(((46189)*(pow(r,20)))+(((1260)*((pow(a,18))*((r)*(((5)*(M))+((3)*(r))))))+(((48620)*((pow(a,2))*((pow(r,17))*(((5)*(M))+((7)*(r))))))+(((105)*((pow(a,16))*((pow(r,2))*(((640)*(pow(M,2)))+(((1120)*((M)*(r)))+((457)*(pow(r,2))))))))+(((715)*((pow(a,4))*((pow(r,14))*(((640)*(pow(M,2)))+(((2080)*((M)*(r)))+((1537)*(pow(r,2))))))))+(((1680)*((pow(a,14))*((pow(r,3))*(((96)*(pow(M,3)))+(((384)*((pow(M,2))*(r)))+(((457)*((M)*(pow(r,2))))+((164)*(pow(r,3)))))))))+(((11440)*((pow(a,6))*((pow(r,11))*(((32)*(pow(M,3)))+(((192)*((pow(M,2))*(r)))+(((339)*((M)*(pow(r,2))))+((178)*(pow(r,3)))))))))+(((110)*((pow(a,8))*((pow(r,8))*(((1024)*(pow(M,4)))+(((11264)*((pow(M,3))*(r)))+(((38976)*((pow(M,2))*(pow(r,2))))+(((50864)*((M)*(pow(r,3))))+((21631)*(pow(r,4))))))))))+(((30)*((pow(a,12))*((pow(r,4))*(((3072)*(pow(M,4)))+(((27648)*((pow(M,3))*(r)))+(((78528)*((pow(M,2))*(pow(r,2))))+(((84528)*((M)*(pow(r,3))))+((29837)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((25600)*((pow(M,4))*(r)))+(((192640)*((pow(M,3))*(pow(r,2))))+(((540800)*((pow(M,2))*(pow(r,3))))+(((605045)*((M)*(pow(r,4))))+((226469)*(pow(r,5)))))))))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

}
