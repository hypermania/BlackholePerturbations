
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_330(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[330] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0001627604166666666666666666666666666666666666666666666666666666666666666666666666666666666666666666667"))*((HighPrecisionScalar("2.516611478423583232412228268982039019407398234874460046099542301903573984639270398527484024715841324"))*((pow(a,-15))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((pow(a,4))+(((9)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((8)*(M))+((5)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((45687)*(pow(a,20)))+(((765765)*(pow(r,20)))+(((60060)*((pow(a,2))*((pow(r,17))*(((37)*(M))+((109)*(r))))))+(((4)*((pow(a,18))*((r)*(((174043)*(M))+((201239)*(r))))))+(((3003)*((pow(a,4))*((pow(r,14))*(((544)*(pow(M,2)))+(((5376)*((M)*(r)))+((8281)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((1404640)*(pow(M,2)))+(((6974016)*((M)*(r)))+((5539849)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((240)*(pow(M,3)))+(((18204)*((pow(M,2))*(r)))+(((96367)*((M)*(pow(r,2))))+((104438)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((11376)*(pow(M,3)))+(((543804)*((pow(M,2))*(r)))+(((1841363)*((M)*(pow(r,2))))+((1302848)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((-1024)*(pow(M,4)))+(((25088)*((pow(M,3))*(r)))+(((1069104)*((pow(M,2))*(pow(r,2))))+(((4123616)*((M)*(pow(r,3))))+((3581843)*(pow(r,4))))))))))+(((8)*((pow(a,10))*((pow(r,5))*(((512)*(pow(M,5)))+(((-6912)*((pow(M,4))*(r)))+(((113216)*((pow(M,3))*(pow(r,2))))+(((3828944)*((pow(M,2))*(pow(r,3))))+(((12482685)*((M)*(pow(r,4))))+((9437819)*(pow(r,5)))))))))))+((pow(a,12))*(((-32768)*((pow(M,4))*(pow(r,4))))+(((662528)*((pow(M,3))*(pow(r,5))))+(((22385568)*((pow(M,2))*(pow(r,6))))+(((69285760)*((M)*(pow(r,7))))+((48823190)*(pow(r,8))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((pow((pow(a,2))+(pow(r,2)),6))*(((pow(a,12))+(((221)*(pow(r,12)))+(((6)*((pow(a,10))*((r)*(((12)*(M))+((7)*(r))))))+(((78)*((pow(a,2))*((pow(r,9))*(((12)*(M))+((11)*(r))))))+(((39)*((pow(a,4))*((pow(r,6))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((33)*(pow(r,2))))))))+(((3)*((pow(a,8))*((pow(r,2))*(((160)*(pow(M,2)))+(((256)*((M)*(r)))+((105)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((432)*((pow(M,2))*(r)))+(((564)*((M)*(pow(r,2))))+((231)*(pow(r,3)))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_331(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[331] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.001953125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("2.516611478423583232412228268982039019407398234874460046099542301903573984639270398527484024715841324"))*((pow(a,-14))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((9)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((8)*(M))+((5)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((45687)*(pow(a,20)))+(((765765)*(pow(r,20)))+(((60060)*((pow(a,2))*((pow(r,17))*(((37)*(M))+((109)*(r))))))+(((4)*((pow(a,18))*((r)*(((174043)*(M))+((201239)*(r))))))+(((3003)*((pow(a,4))*((pow(r,14))*(((544)*(pow(M,2)))+(((5376)*((M)*(r)))+((8281)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((1404640)*(pow(M,2)))+(((6974016)*((M)*(r)))+((5539849)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((240)*(pow(M,3)))+(((18204)*((pow(M,2))*(r)))+(((96367)*((M)*(pow(r,2))))+((104438)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((11376)*(pow(M,3)))+(((543804)*((pow(M,2))*(r)))+(((1841363)*((M)*(pow(r,2))))+((1302848)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((-1024)*(pow(M,4)))+(((25088)*((pow(M,3))*(r)))+(((1069104)*((pow(M,2))*(pow(r,2))))+(((4123616)*((M)*(pow(r,3))))+((3581843)*(pow(r,4))))))))))+(((8)*((pow(a,10))*((pow(r,5))*(((512)*(pow(M,5)))+(((-6912)*((pow(M,4))*(r)))+(((113216)*((pow(M,3))*(pow(r,2))))+(((3828944)*((pow(M,2))*(pow(r,3))))+(((12482685)*((M)*(pow(r,4))))+((9437819)*(pow(r,5)))))))))))+((pow(a,12))*(((-32768)*((pow(M,4))*(pow(r,4))))+(((662528)*((pow(M,3))*(pow(r,5))))+(((22385568)*((pow(M,2))*(pow(r,6))))+(((69285760)*((M)*(pow(r,7))))+((48823190)*(pow(r,8))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((pow((pow(a,2))+(pow(r,2)),6))*(((pow(a,12))+(((221)*(pow(r,12)))+(((6)*((pow(a,10))*((r)*(((12)*(M))+((7)*(r))))))+(((78)*((pow(a,2))*((pow(r,9))*(((12)*(M))+((11)*(r))))))+(((39)*((pow(a,4))*((pow(r,6))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((33)*(pow(r,2))))))))+(((3)*((pow(a,8))*((pow(r,2))*(((160)*(pow(M,2)))+(((256)*((M)*(r)))+((105)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((432)*((pow(M,2))*(r)))+(((564)*((M)*(pow(r,2))))+((231)*(pow(r,3)))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_332(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[332] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.06250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("3.316624790355399849114932736670686683927088545589353597058682146116484642609043846708843399128290651"))*((pow(a,-9))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((-3)*((pow(a,2))*((r)*((M)+((4)*(r))))))+((pow(r,2))*(((2)*(pow(M,2)))+(((29)*((M)*(r)))+((-15)*(pow(r,2))))))))*(((a)*((r)*(((315)*((pow(r,16))*(((-2)*(M))+(r))))+(((32)*((pow(a,16))*(((2)*(M))+(r))))+(((315)*((pow(a,2))*((pow(r,13))*(((-8)*(pow(M,2)))+(((-8)*((M)*(r)))+((7)*(pow(r,2))))))))+(((pow(a,14))*((r)*(((860)*(pow(M,2)))+(((1372)*((M)*(r)))+((503)*(pow(r,2)))))))+(((-7)*((pow(a,4))*((pow(r,10))*(((392)*(pow(M,3)))+(((1572)*((pow(M,2))*(r)))+(((294)*((M)*(pow(r,2))))+((-949)*(pow(r,3)))))))))+(((pow(a,12))*((pow(r,2))*(((-1656)*(pow(M,3)))+(((2676)*((pow(M,2))*(r)))+(((6570)*((M)*(pow(r,2))))+((2665)*(pow(r,3))))))))+(((pow(a,10))*((pow(r,3))*(((-704)*(pow(M,4)))+(((-8032)*((pow(M,3))*(r)))+(((-576)*((pow(M,2))*(pow(r,2))))+(((13840)*((M)*(pow(r,3))))+((7215)*(pow(r,4)))))))))+(((pow(a,6))*((pow(r,7))*(((-384)*(pow(M,4)))+(((-10208)*((pow(M,3))*(r)))+(((-17796)*((pow(M,2))*(pow(r,2))))+(((5484)*((M)*(pow(r,3))))+((11197)*(pow(r,4)))))))))+((pow(a,8))*((pow(r,4))*(((128)*(pow(M,5)))+(((-1088)*((pow(M,4))*(r)))+(((-13840)*((pow(M,3))*(pow(r,2))))+(((-11704)*((pow(M,2))*(pow(r,3))))+(((14230)*((M)*(pow(r,4))))+((11465)*(pow(r,5))))))))))))))))))))+(((a)*((((32)*(pow(a,12)))+(((315)*(pow(r,12)))+(((315)*((pow(a,2))*((pow(r,9))*(((2)*(M))+((5)*(r))))))+(((pow(a,10))*((r)*(((494)*(M))+((439)*(r)))))+(((14)*((pow(a,4))*((pow(r,6))*(((8)*(pow(M,2)))+(((172)*((M)*(r)))+((227)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((160)*(pow(M,2)))+(((2136)*((M)*(r)))+((1755)*(pow(r,2)))))))+((pow(a,6))*(((-32)*((pow(M,3))*(pow(r,3))))+(((272)*((pow(M,2))*(pow(r,4))))+(((3420)*((M)*(pow(r,5))))+((3266)*(pow(r,6)))))))))))))*((pow(expr[0],2))*((pow(expr[1],2))*(pow(expr[2],2))))))+((-210)*((r)*((pow((pow(a,2))+(pow(r,2)),4))*((((3)*(pow(r,7)))+(((pow(a,6))*(((2)*(M))+(r)))+(((pow(a,2))*((pow(r,4))*(((10)*(M))+((7)*(r)))))+((pow(a,4))*((r)*(((8)*(pow(M,2)))+(((12)*((M)*(r)))+((5)*(pow(r,2))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))))).cast<double>());
}

void compute_coeffs_333(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[333] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.6875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-11))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*(((pow(a,8))+(((pow(a,6))*(((M)+((-8)*(r)))*(r)))+(((3)*((pow(r,6))*(((2)*(pow(M,2)))+(((29)*((M)*(r)))+((-15)*(pow(r,2)))))))+(((-1)*((pow(a,4))*((pow(r,2))*(((10)*(pow(M,2)))+(((31)*((M)*(r)))+((60)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((8)*(pow(M,3)))+(((124)*((pow(M,2))*(r)))+(((47)*((M)*(pow(r,2))))+((-96)*(pow(r,3))))))))))))*(((32)*(pow(a,15)))+(((315)*((a)*((pow(r,13))*(((-2)*(M))+(r)))))+(((pow(a,13))*((r)*(((430)*(M))+((471)*(r)))))+(((630)*((pow(a,3))*((pow(r,10))*(((-2)*(pow(M,2)))+(((-4)*((M)*(r)))+((3)*(pow(r,2))))))))+(((2)*((pow(a,11))*((pow(r,2))*(((-414)*(pow(M,2)))+(((876)*((M)*(r)))+((1097)*(pow(r,2))))))))+(((-7)*((pow(a,5))*((pow(r,7))*(((32)*(pow(M,3)))+(((672)*((pow(M,2))*(r)))+(((474)*((M)*(pow(r,2))))+((-679)*(pow(r,3)))))))))+(((pow(a,9))*((pow(r,3))*(((-352)*(pow(M,3)))+(((-3840)*((pow(M,2))*(r)))+(((2046)*((M)*(pow(r,2))))+((5021)*(pow(r,3))))))))+(((4)*((pow(a,7))*((pow(r,4))*(((16)*(pow(M,4)))+(((-144)*((pow(M,3))*(r)))+(((-1614)*((pow(M,2))*(pow(r,2))))+(((-176)*((M)*(pow(r,3))))+((1611)*(pow(r,4))))))))))+((-105)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,4))+(((3)*(pow(r,4)))+((4)*((pow(a,2))*((r)*((M)+(r)))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))))))))).cast<double>());
}

void compute_coeffs_334(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[334] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.6875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-9))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*(((pow(a,4))+(((3)*(pow(r,4)))+((4)*((pow(a,2))*((r)*((M)+(r)))))))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((32)*(pow(a,12)))+(((315)*(pow(r,12)))+(((315)*((pow(a,2))*((pow(r,9))*(((2)*(M))+((5)*(r))))))+(((pow(a,10))*((r)*(((494)*(M))+((439)*(r)))))+(((14)*((pow(a,4))*((pow(r,6))*(((8)*(pow(M,2)))+(((172)*((M)*(r)))+((227)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((160)*(pow(M,2)))+(((2136)*((M)*(r)))+((1755)*(pow(r,2)))))))+((pow(a,6))*(((-32)*((pow(M,3))*(pow(r,3))))+(((272)*((pow(M,2))*(pow(r,4))))+(((3420)*((M)*(pow(r,5))))+((3266)*(pow(r,6)))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((105)*((r)*((pow((pow(a,2))+(pow(r,2)),4))*((((3)*(pow(r,7)))+(((pow(a,6))*(((2)*(M))+(r)))+(((pow(a,2))*((pow(r,4))*(((10)*(M))+((7)*(r)))))+((pow(a,4))*((r)*(((8)*(pow(M,2)))+(((12)*((M)*(r)))+((5)*(pow(r,2))))))))))*(expr[3]))))))))))))))).cast<double>());
}
