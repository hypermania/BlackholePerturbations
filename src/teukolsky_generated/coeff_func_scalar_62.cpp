
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_310(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[310] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("1.375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-10))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((128)*(pow(a,16)))+(((315)*(pow(r,16)))+(((105)*((pow(a,2))*((pow(r,13))*(((2)*(M))+((23)*(r))))))+(((pow(a,14))*((r)*(((650)*(M))+((1349)*(r)))))+(((21)*((pow(a,4))*((pow(r,10))*(((-8)*(pow(M,2)))+(((68)*((M)*(r)))+((383)*(pow(r,2))))))))+(((3)*((pow(a,6))*((pow(r,7))*(((64)*(pow(M,3)))+(((-320)*((pow(M,2))*(r)))+(((1378)*((M)*(pow(r,2))))+((5053)*(pow(r,3)))))))))+(((pow(a,10))*((pow(r,3))*(((704)*(pow(M,3)))+(((-2304)*((pow(M,2))*(r)))+(((6078)*((M)*(pow(r,2))))+((12821)*(pow(r,3))))))))+(((pow(a,12))*(((-840)*((pow(M,2))*(pow(r,2))))+(((3060)*((M)*(pow(r,3))))+((5649)*(pow(r,4))))))+((pow(a,8))*((pow(r,4))*(((-256)*(pow(M,4)))+(((896)*((pow(M,3))*(r)))+(((-2256)*((pow(M,2))*(pow(r,2))))+(((6584)*((M)*(pow(r,3))))+((17609)*(pow(r,4)))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((r)*((pow((pow(a,2))+(pow(r,2)),8))*(((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_311(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[311] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.007812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-13))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((-3)*((pow(a,2))*((r)*((M)+((2)*(r))))))+((pow(r,2))*(((2)*(pow(M,2)))+(((29)*((M)*(r)))+((-15)*(pow(r,2))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((2560)*(pow(a,20)))+(((45045)*(pow(r,20)))+(((1155)*((pow(a,2))*((pow(r,17))*(((86)*(M))+((347)*(r))))))+(((25)*((pow(a,18))*((r)*(((2650)*(M))+((2349)*(r))))))+(((3696)*((pow(a,4))*((pow(r,14))*(((6)*(pow(M,2)))+(((209)*((M)*(r)))+((429)*(pow(r,2))))))))+(((5)*((pow(a,16))*((pow(r,2))*(((9744)*(pow(M,2)))+(((115744)*((M)*(r)))+((85101)*(pow(r,2))))))))+(((264)*((pow(a,6))*((pow(r,11))*(((-36)*(pow(M,3)))+(((558)*((pow(M,2))*(r)))+(((9920)*((M)*(pow(r,2))))+((13875)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((-1778)*(pow(M,3)))+(((15603)*((pow(M,2))*(r)))+(((135919)*((M)*(pow(r,2))))+((99599)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((256)*(pow(M,4)))+(((-2240)*((pow(M,3))*(r)))+(((18744)*((pow(M,2))*(pow(r,2))))+(((229600)*((M)*(pow(r,3))))+((247795)*(pow(r,4))))))))))+(((8)*((pow(a,12))*((pow(r,4))*(((1664)*(pow(M,4)))+(((-10896)*((pow(M,3))*(r)))+(((67176)*((pow(M,2))*(pow(r,2))))+(((576470)*((M)*(pow(r,3))))+((454635)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,5))*(((-1536)*(pow(M,5)))+(((9472)*((pow(M,4))*(r)))+(((-49248)*((pow(M,3))*(pow(r,2))))+(((311856)*((pow(M,2))*(pow(r,3))))+(((3027490)*((M)*(pow(r,4))))+((2715585)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((r)*((pow((pow(a,2))+(pow(r,2)),8))*((((13)*(pow(r,7)))+(((3)*((pow(a,6))*(((2)*(M))+(r))))+(((pow(a,2))*((pow(r,4))*(((46)*(M))+((29)*(r)))))+((pow(a,4))*((r)*(((40)*(pow(M,2)))+(((52)*((M)*(r)))+((19)*(pow(r,2))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_312(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[312] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.007812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-11))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((2560)*(pow(a,20)))+(((45045)*(pow(r,20)))+(((1155)*((pow(a,2))*((pow(r,17))*(((86)*(M))+((347)*(r))))))+(((25)*((pow(a,18))*((r)*(((2650)*(M))+((2349)*(r))))))+(((3696)*((pow(a,4))*((pow(r,14))*(((6)*(pow(M,2)))+(((209)*((M)*(r)))+((429)*(pow(r,2))))))))+(((5)*((pow(a,16))*((pow(r,2))*(((9744)*(pow(M,2)))+(((115744)*((M)*(r)))+((85101)*(pow(r,2))))))))+(((264)*((pow(a,6))*((pow(r,11))*(((-36)*(pow(M,3)))+(((558)*((pow(M,2))*(r)))+(((9920)*((M)*(pow(r,2))))+((13875)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((-1778)*(pow(M,3)))+(((15603)*((pow(M,2))*(r)))+(((135919)*((M)*(pow(r,2))))+((99599)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((256)*(pow(M,4)))+(((-2240)*((pow(M,3))*(r)))+(((18744)*((pow(M,2))*(pow(r,2))))+(((229600)*((M)*(pow(r,3))))+((247795)*(pow(r,4))))))))))+(((8)*((pow(a,12))*((pow(r,4))*(((1664)*(pow(M,4)))+(((-10896)*((pow(M,3))*(r)))+(((67176)*((pow(M,2))*(pow(r,2))))+(((576470)*((M)*(pow(r,3))))+((454635)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,5))*(((-1536)*(pow(M,5)))+(((9472)*((pow(M,4))*(r)))+(((-49248)*((pow(M,3))*(pow(r,2))))+(((311856)*((pow(M,2))*(pow(r,3))))+(((3027490)*((M)*(pow(r,4))))+((2715585)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((r)*((pow((pow(a,2))+(pow(r,2)),8))*((((13)*(pow(r,7)))+(((3)*((pow(a,6))*(((2)*(M))+(r))))+(((pow(a,2))*((pow(r,4))*(((46)*(M))+((29)*(r)))))+((pow(a,4))*((r)*(((40)*(pow(M,2)))+(((52)*((M)*(r)))+((19)*(pow(r,2))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_313(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[313] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.003906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-13))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((2560)*(pow(a,20)))+(((45045)*(pow(r,20)))+(((1155)*((pow(a,2))*((pow(r,17))*(((86)*(M))+((347)*(r))))))+(((25)*((pow(a,18))*((r)*(((2650)*(M))+((2349)*(r))))))+(((3696)*((pow(a,4))*((pow(r,14))*(((6)*(pow(M,2)))+(((209)*((M)*(r)))+((429)*(pow(r,2))))))))+(((5)*((pow(a,16))*((pow(r,2))*(((9744)*(pow(M,2)))+(((115744)*((M)*(r)))+((85101)*(pow(r,2))))))))+(((264)*((pow(a,6))*((pow(r,11))*(((-36)*(pow(M,3)))+(((558)*((pow(M,2))*(r)))+(((9920)*((M)*(pow(r,2))))+((13875)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((-1778)*(pow(M,3)))+(((15603)*((pow(M,2))*(r)))+(((135919)*((M)*(pow(r,2))))+((99599)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((256)*(pow(M,4)))+(((-2240)*((pow(M,3))*(r)))+(((18744)*((pow(M,2))*(pow(r,2))))+(((229600)*((M)*(pow(r,3))))+((247795)*(pow(r,4))))))))))+(((8)*((pow(a,12))*((pow(r,4))*(((1664)*(pow(M,4)))+(((-10896)*((pow(M,3))*(r)))+(((67176)*((pow(M,2))*(pow(r,2))))+(((576470)*((M)*(pow(r,3))))+((454635)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,5))*(((-1536)*(pow(M,5)))+(((9472)*((pow(M,4))*(r)))+(((-49248)*((pow(M,3))*(pow(r,2))))+(((311856)*((pow(M,2))*(pow(r,3))))+(((3027490)*((M)*(pow(r,4))))+((2715585)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((r)*((pow((pow(a,2))+(pow(r,2)),8))*((((13)*(pow(r,7)))+(((3)*((pow(a,6))*(((2)*(M))+(r))))+(((pow(a,2))*((pow(r,4))*(((46)*(M))+((29)*(r)))))+((pow(a,4))*((r)*(((40)*(pow(M,2)))+(((52)*((M)*(r)))+((19)*(pow(r,2))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_314(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[314] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.06250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-12))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((2560)*(pow(a,20)))+(((45045)*(pow(r,20)))+(((1155)*((pow(a,2))*((pow(r,17))*(((86)*(M))+((347)*(r))))))+(((25)*((pow(a,18))*((r)*(((2650)*(M))+((2349)*(r))))))+(((3696)*((pow(a,4))*((pow(r,14))*(((6)*(pow(M,2)))+(((209)*((M)*(r)))+((429)*(pow(r,2))))))))+(((5)*((pow(a,16))*((pow(r,2))*(((9744)*(pow(M,2)))+(((115744)*((M)*(r)))+((85101)*(pow(r,2))))))))+(((264)*((pow(a,6))*((pow(r,11))*(((-36)*(pow(M,3)))+(((558)*((pow(M,2))*(r)))+(((9920)*((M)*(pow(r,2))))+((13875)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((-1778)*(pow(M,3)))+(((15603)*((pow(M,2))*(r)))+(((135919)*((M)*(pow(r,2))))+((99599)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((256)*(pow(M,4)))+(((-2240)*((pow(M,3))*(r)))+(((18744)*((pow(M,2))*(pow(r,2))))+(((229600)*((M)*(pow(r,3))))+((247795)*(pow(r,4))))))))))+(((8)*((pow(a,12))*((pow(r,4))*(((1664)*(pow(M,4)))+(((-10896)*((pow(M,3))*(r)))+(((67176)*((pow(M,2))*(pow(r,2))))+(((576470)*((M)*(pow(r,3))))+((454635)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,5))*(((-1536)*(pow(M,5)))+(((9472)*((pow(M,4))*(r)))+(((-49248)*((pow(M,3))*(pow(r,2))))+(((311856)*((pow(M,2))*(pow(r,3))))+(((3027490)*((M)*(pow(r,4))))+((2715585)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((r)*((pow((pow(a,2))+(pow(r,2)),8))*((((13)*(pow(r,7)))+(((3)*((pow(a,6))*(((2)*(M))+(r))))+(((pow(a,2))*((pow(r,4))*(((46)*(M))+((29)*(r)))))+((pow(a,4))*((r)*(((40)*(pow(M,2)))+(((52)*((M)*(r)))+((19)*(pow(r,2))))))))))*(expr[3])))))))))))))).cast<double>());
}

}
