
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_470(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[470] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00002790178571428571428571428571428571428571428571428571428571428571428571428571428571428571428571428571"))*((HighPrecisionScalar("14.86606874731850552261200821393139665144898551372086156056309481025183731478116765861583646027396110"))*((pow(a,-13))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((5)*(pow(a,12)))+(((231)*(pow(r,12)))+(((60)*((pow(a,10))*((r)*(((3)*(M))+((2)*(r))))))+(((252)*((pow(a,2))*((pow(r,9))*(((3)*(M))+((4)*(r))))))+(((15)*((pow(a,8))*((pow(r,2))*(((32)*(pow(M,2)))+(((80)*((M)*(r)))+((43)*(pow(r,2))))))))+(((21)*((pow(a,4))*((pow(r,6))*(((32)*(pow(M,2)))+(((112)*((M)*(r)))+((83)*(pow(r,2))))))))+((8)*((pow(a,6))*((pow(r,3))*(((16)*(pow(M,3)))+(((144)*((pow(M,2))*(r)))+(((327)*((M)*(pow(r,2))))+((187)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((15159)*(pow(a,12)))+(((225225)*(pow(r,12)))+(((60060)*((pow(a,2))*((pow(r,9))*(((11)*(M))+((17)*(r))))))+(((4)*((pow(a,10))*((r)*(((50989)*(M))+((48233)*(r))))))+(((385)*((pow(a,4))*((pow(r,6))*(((1376)*(pow(M,2)))+(((5488)*((M)*(r)))+((4829)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((383648)*(pow(M,2)))+(((1199472)*((M)*(r)))+((833187)*(pow(r,2)))))))+((8)*((pow(a,6))*((pow(r,3))*(((12176)*(pow(M,3)))+(((114176)*((pow(M,2))*(r)))+(((305967)*((M)*(pow(r,2))))+((214848)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((35)*((((35)*(pow(a,16)))+(((6435)*(pow(r,16)))+(((280)*((pow(a,14))*((r)*(((8)*(M))+((5)*(r))))))+(((3432)*((pow(a,2))*((pow(r,13))*(((8)*(M))+((11)*(r))))))+(((420)*((pow(a,12))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((29)*(pow(r,2))))))))+(((132)*((pow(a,4))*((pow(r,10))*(((288)*(pow(M,2)))+(((960)*((M)*(r)))+((709)*(pow(r,2))))))))+(((56)*((pow(a,10))*((pow(r,3))*(((256)*(pow(M,3)))+(((1344)*((pow(M,2))*(r)))+(((1992)*((M)*(pow(r,2))))+((847)*(pow(r,3)))))))))+(((72)*((pow(a,6))*((pow(r,7))*(((256)*(pow(M,3)))+(((1728)*((pow(M,2))*(r)))+(((3272)*((M)*(pow(r,2))))+((1761)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((16384)*((pow(M,3))*(r)))+(((74112)*((pow(M,2))*(pow(r,2))))+(((111616)*((M)*(pow(r,3))))+((50569)*(pow(r,4))))))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_471(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[471] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00001395089285714285714285714285714285714285714285714285714285714285714285714285714285714285714285714286"))*((HighPrecisionScalar("14.86606874731850552261200821393139665144898551372086156056309481025183731478116765861583646027396110"))*((pow(a,-15))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((((5)*(pow(a,12)))+(((231)*(pow(r,12)))+(((60)*((pow(a,10))*((r)*(((3)*(M))+((2)*(r))))))+(((252)*((pow(a,2))*((pow(r,9))*(((3)*(M))+((4)*(r))))))+(((15)*((pow(a,8))*((pow(r,2))*(((32)*(pow(M,2)))+(((80)*((M)*(r)))+((43)*(pow(r,2))))))))+(((21)*((pow(a,4))*((pow(r,6))*(((32)*(pow(M,2)))+(((112)*((M)*(r)))+((83)*(pow(r,2))))))))+((8)*((pow(a,6))*((pow(r,3))*(((16)*(pow(M,3)))+(((144)*((pow(M,2))*(r)))+(((327)*((M)*(pow(r,2))))+((187)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((15159)*(pow(a,12)))+(((225225)*(pow(r,12)))+(((60060)*((pow(a,2))*((pow(r,9))*(((11)*(M))+((17)*(r))))))+(((4)*((pow(a,10))*((r)*(((50989)*(M))+((48233)*(r))))))+(((385)*((pow(a,4))*((pow(r,6))*(((1376)*(pow(M,2)))+(((5488)*((M)*(r)))+((4829)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((383648)*(pow(M,2)))+(((1199472)*((M)*(r)))+((833187)*(pow(r,2)))))))+((8)*((pow(a,6))*((pow(r,3))*(((12176)*(pow(M,3)))+(((114176)*((pow(M,2))*(r)))+(((305967)*((M)*(pow(r,2))))+((214848)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((35)*((((35)*(pow(a,16)))+(((6435)*(pow(r,16)))+(((280)*((pow(a,14))*((r)*(((8)*(M))+((5)*(r))))))+(((3432)*((pow(a,2))*((pow(r,13))*(((8)*(M))+((11)*(r))))))+(((420)*((pow(a,12))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((29)*(pow(r,2))))))))+(((132)*((pow(a,4))*((pow(r,10))*(((288)*(pow(M,2)))+(((960)*((M)*(r)))+((709)*(pow(r,2))))))))+(((56)*((pow(a,10))*((pow(r,3))*(((256)*(pow(M,3)))+(((1344)*((pow(M,2))*(r)))+(((1992)*((M)*(pow(r,2))))+((847)*(pow(r,3)))))))))+(((72)*((pow(a,6))*((pow(r,7))*(((256)*(pow(M,3)))+(((1728)*((pow(M,2))*(r)))+(((3272)*((M)*(pow(r,2))))+((1761)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((16384)*((pow(M,3))*(r)))+(((74112)*((pow(M,2))*(pow(r,2))))+(((111616)*((M)*(pow(r,3))))+((50569)*(pow(r,4))))))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_472(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[472] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00003255208333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((HighPrecisionScalar("0.7867957924694431458008298244102962101351609445616681247816641005998417633532803924544696045447295497"))*((pow(a,-17))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((5)*(pow(a,14)))+(((5)*((pow(a,12))*((r)*(((35)*(M))+((3)*(r))))))+(((-231)*((pow(r,13))*((M)+((21)*(r)))))+(((-75)*((pow(a,10))*((pow(r,2))*(((-4)*(pow(M,2)))+(((36)*((M)*(r)))+((25)*(pow(r,2))))))))+(((-21)*((pow(a,2))*((pow(r,10))*(((36)*(pow(M,2)))+(((804)*((M)*(r)))+((997)*(pow(r,2))))))))+(((-21)*((pow(a,4))*((pow(r,7))*(((32)*(pow(M,3)))+(((784)*((pow(M,2))*(r)))+(((2399)*((M)*(pow(r,2))))+((1695)*(pow(r,3)))))))))+(((-1)*((pow(a,8))*((pow(r,3))*(((352)*(pow(M,3)))+(((10128)*((pow(M,2))*(r)))+(((23229)*((M)*(pow(r,2))))+((12049)*(pow(r,3)))))))))+((-1)*((pow(a,6))*((pow(r,4))*(((128)*(pow(M,4)))+(((3840)*((pow(M,3))*(r)))+(((26136)*((pow(M,2))*(pow(r,2))))+(((54080)*((M)*(pow(r,3))))+((29673)*(pow(r,4)))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-11)*((a)*((((27985)*(pow(a,16)))+(((1322685)*(pow(r,16)))+(((185640)*((pow(a,2))*((pow(r,13))*(((28)*(M))+((43)*(r))))))+(((80)*((pow(a,14))*((r)*(((8141)*(M))+((6869)*(r))))))+(((4368)*((pow(a,4))*((pow(r,10))*(((1521)*(pow(M,2)))+(((5619)*((M)*(r)))+((4694)*(pow(r,2))))))))+(((24)*((pow(a,12))*((pow(r,2))*(((109222)*(pow(M,2)))+(((272042)*((M)*(r)))+((154933)*(pow(r,2))))))))+(((1872)*((pow(a,6))*((pow(r,7))*(((1616)*(pow(M,3)))+(((11772)*((pow(M,2))*(r)))+(((25117)*((M)*(pow(r,2))))+((15534)*(pow(r,3)))))))))+(((8)*((pow(a,10))*((pow(r,3))*(((292256)*(pow(M,3)))+(((1749048)*((pow(M,2))*(r)))+(((3078672)*((M)*(pow(r,2))))+((1578731)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((171776)*(pow(M,4)))+(((2681600)*((pow(M,3))*(r)))+(((13382256)*((pow(M,2))*(pow(r,2))))+(((23212400)*((M)*(pow(r,3))))+((12334541)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((((63)*(pow(a,20)))+(((46189)*(pow(r,20)))+(((1260)*((pow(a,18))*((r)*(((5)*(M))+((3)*(r))))))+(((48620)*((pow(a,2))*((pow(r,17))*(((5)*(M))+((7)*(r))))))+(((105)*((pow(a,16))*((pow(r,2))*(((640)*(pow(M,2)))+(((1120)*((M)*(r)))+((457)*(pow(r,2))))))))+(((715)*((pow(a,4))*((pow(r,14))*(((640)*(pow(M,2)))+(((2080)*((M)*(r)))+((1537)*(pow(r,2))))))))+(((1680)*((pow(a,14))*((pow(r,3))*(((96)*(pow(M,3)))+(((384)*((pow(M,2))*(r)))+(((457)*((M)*(pow(r,2))))+((164)*(pow(r,3)))))))))+(((11440)*((pow(a,6))*((pow(r,11))*(((32)*(pow(M,3)))+(((192)*((pow(M,2))*(r)))+(((339)*((M)*(pow(r,2))))+((178)*(pow(r,3)))))))))+(((110)*((pow(a,8))*((pow(r,8))*(((1024)*(pow(M,4)))+(((11264)*((pow(M,3))*(r)))+(((38976)*((pow(M,2))*(pow(r,2))))+(((50864)*((M)*(pow(r,3))))+((21631)*(pow(r,4))))))))))+(((30)*((pow(a,12))*((pow(r,4))*(((3072)*(pow(M,4)))+(((27648)*((pow(M,3))*(r)))+(((78528)*((pow(M,2))*(pow(r,2))))+(((84528)*((M)*(pow(r,3))))+((29837)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((25600)*((pow(M,4))*(r)))+(((192640)*((pow(M,3))*(pow(r,2))))+(((540800)*((pow(M,2))*(pow(r,3))))+(((605045)*((M)*(pow(r,4))))+((226469)*(pow(r,5)))))))))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_473(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[473] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00003255208333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((HighPrecisionScalar("0.7867957924694431458008298244102962101351609445616681247816641005998417633532803924544696045447295497"))*((pow(a,-15))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((5)*(pow(a,12)))+(((231)*(pow(r,12)))+(((60)*((pow(a,10))*((r)*(((3)*(M))+((2)*(r))))))+(((252)*((pow(a,2))*((pow(r,9))*(((3)*(M))+((4)*(r))))))+(((15)*((pow(a,8))*((pow(r,2))*(((32)*(pow(M,2)))+(((80)*((M)*(r)))+((43)*(pow(r,2))))))))+(((21)*((pow(a,4))*((pow(r,6))*(((32)*(pow(M,2)))+(((112)*((M)*(r)))+((83)*(pow(r,2))))))))+((8)*((pow(a,6))*((pow(r,3))*(((16)*(pow(M,3)))+(((144)*((pow(M,2))*(r)))+(((327)*((M)*(pow(r,2))))+((187)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-11)*((a)*((((27985)*(pow(a,16)))+(((1322685)*(pow(r,16)))+(((185640)*((pow(a,2))*((pow(r,13))*(((28)*(M))+((43)*(r))))))+(((80)*((pow(a,14))*((r)*(((8141)*(M))+((6869)*(r))))))+(((4368)*((pow(a,4))*((pow(r,10))*(((1521)*(pow(M,2)))+(((5619)*((M)*(r)))+((4694)*(pow(r,2))))))))+(((24)*((pow(a,12))*((pow(r,2))*(((109222)*(pow(M,2)))+(((272042)*((M)*(r)))+((154933)*(pow(r,2))))))))+(((1872)*((pow(a,6))*((pow(r,7))*(((1616)*(pow(M,3)))+(((11772)*((pow(M,2))*(r)))+(((25117)*((M)*(pow(r,2))))+((15534)*(pow(r,3)))))))))+(((8)*((pow(a,10))*((pow(r,3))*(((292256)*(pow(M,3)))+(((1749048)*((pow(M,2))*(r)))+(((3078672)*((M)*(pow(r,2))))+((1578731)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((171776)*(pow(M,4)))+(((2681600)*((pow(M,3))*(r)))+(((13382256)*((pow(M,2))*(pow(r,2))))+(((23212400)*((M)*(pow(r,3))))+((12334541)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((((63)*(pow(a,20)))+(((46189)*(pow(r,20)))+(((1260)*((pow(a,18))*((r)*(((5)*(M))+((3)*(r))))))+(((48620)*((pow(a,2))*((pow(r,17))*(((5)*(M))+((7)*(r))))))+(((105)*((pow(a,16))*((pow(r,2))*(((640)*(pow(M,2)))+(((1120)*((M)*(r)))+((457)*(pow(r,2))))))))+(((715)*((pow(a,4))*((pow(r,14))*(((640)*(pow(M,2)))+(((2080)*((M)*(r)))+((1537)*(pow(r,2))))))))+(((1680)*((pow(a,14))*((pow(r,3))*(((96)*(pow(M,3)))+(((384)*((pow(M,2))*(r)))+(((457)*((M)*(pow(r,2))))+((164)*(pow(r,3)))))))))+(((11440)*((pow(a,6))*((pow(r,11))*(((32)*(pow(M,3)))+(((192)*((pow(M,2))*(r)))+(((339)*((M)*(pow(r,2))))+((178)*(pow(r,3)))))))))+(((110)*((pow(a,8))*((pow(r,8))*(((1024)*(pow(M,4)))+(((11264)*((pow(M,3))*(r)))+(((38976)*((pow(M,2))*(pow(r,2))))+(((50864)*((M)*(pow(r,3))))+((21631)*(pow(r,4))))))))))+(((30)*((pow(a,12))*((pow(r,4))*(((3072)*(pow(M,4)))+(((27648)*((pow(M,3))*(r)))+(((78528)*((pow(M,2))*(pow(r,2))))+(((84528)*((M)*(pow(r,3))))+((29837)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((25600)*((pow(M,4))*(r)))+(((192640)*((pow(M,3))*(pow(r,2))))+(((540800)*((pow(M,2))*(pow(r,3))))+(((605045)*((M)*(pow(r,4))))+((226469)*(pow(r,5)))))))))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_474(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[474] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00001627604166666666666666666666666666666666666666666666666666666666666666666666666666666666666666666667"))*((HighPrecisionScalar("0.7867957924694431458008298244102962101351609445616681247816641005998417633532803924544696045447295497"))*((pow(a,-17))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((((5)*(pow(a,12)))+(((231)*(pow(r,12)))+(((60)*((pow(a,10))*((r)*(((3)*(M))+((2)*(r))))))+(((252)*((pow(a,2))*((pow(r,9))*(((3)*(M))+((4)*(r))))))+(((15)*((pow(a,8))*((pow(r,2))*(((32)*(pow(M,2)))+(((80)*((M)*(r)))+((43)*(pow(r,2))))))))+(((21)*((pow(a,4))*((pow(r,6))*(((32)*(pow(M,2)))+(((112)*((M)*(r)))+((83)*(pow(r,2))))))))+((8)*((pow(a,6))*((pow(r,3))*(((16)*(pow(M,3)))+(((144)*((pow(M,2))*(r)))+(((327)*((M)*(pow(r,2))))+((187)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-11)*((a)*((((27985)*(pow(a,16)))+(((1322685)*(pow(r,16)))+(((185640)*((pow(a,2))*((pow(r,13))*(((28)*(M))+((43)*(r))))))+(((80)*((pow(a,14))*((r)*(((8141)*(M))+((6869)*(r))))))+(((4368)*((pow(a,4))*((pow(r,10))*(((1521)*(pow(M,2)))+(((5619)*((M)*(r)))+((4694)*(pow(r,2))))))))+(((24)*((pow(a,12))*((pow(r,2))*(((109222)*(pow(M,2)))+(((272042)*((M)*(r)))+((154933)*(pow(r,2))))))))+(((1872)*((pow(a,6))*((pow(r,7))*(((1616)*(pow(M,3)))+(((11772)*((pow(M,2))*(r)))+(((25117)*((M)*(pow(r,2))))+((15534)*(pow(r,3)))))))))+(((8)*((pow(a,10))*((pow(r,3))*(((292256)*(pow(M,3)))+(((1749048)*((pow(M,2))*(r)))+(((3078672)*((M)*(pow(r,2))))+((1578731)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((171776)*(pow(M,4)))+(((2681600)*((pow(M,3))*(r)))+(((13382256)*((pow(M,2))*(pow(r,2))))+(((23212400)*((M)*(pow(r,3))))+((12334541)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((((63)*(pow(a,20)))+(((46189)*(pow(r,20)))+(((1260)*((pow(a,18))*((r)*(((5)*(M))+((3)*(r))))))+(((48620)*((pow(a,2))*((pow(r,17))*(((5)*(M))+((7)*(r))))))+(((105)*((pow(a,16))*((pow(r,2))*(((640)*(pow(M,2)))+(((1120)*((M)*(r)))+((457)*(pow(r,2))))))))+(((715)*((pow(a,4))*((pow(r,14))*(((640)*(pow(M,2)))+(((2080)*((M)*(r)))+((1537)*(pow(r,2))))))))+(((1680)*((pow(a,14))*((pow(r,3))*(((96)*(pow(M,3)))+(((384)*((pow(M,2))*(r)))+(((457)*((M)*(pow(r,2))))+((164)*(pow(r,3)))))))))+(((11440)*((pow(a,6))*((pow(r,11))*(((32)*(pow(M,3)))+(((192)*((pow(M,2))*(r)))+(((339)*((M)*(pow(r,2))))+((178)*(pow(r,3)))))))))+(((110)*((pow(a,8))*((pow(r,8))*(((1024)*(pow(M,4)))+(((11264)*((pow(M,3))*(r)))+(((38976)*((pow(M,2))*(pow(r,2))))+(((50864)*((M)*(pow(r,3))))+((21631)*(pow(r,4))))))))))+(((30)*((pow(a,12))*((pow(r,4))*(((3072)*(pow(M,4)))+(((27648)*((pow(M,3))*(r)))+(((78528)*((pow(M,2))*(pow(r,2))))+(((84528)*((M)*(pow(r,3))))+((29837)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((25600)*((pow(M,4))*(r)))+(((192640)*((pow(M,3))*(pow(r,2))))+(((540800)*((pow(M,2))*(pow(r,3))))+(((605045)*((M)*(pow(r,4))))+((226469)*(pow(r,5)))))))))))))))))))))*(expr[3])))))))))))))).cast<double>());
}
