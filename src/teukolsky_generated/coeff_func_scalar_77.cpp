
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_385(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[385] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0008463541666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666667"))*((pow(a,-13))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((-1)*((pow(a,2))*((r)*(((3)*(M))+((2)*(r))))))+((pow(r,2))*(((2)*(pow(M,2)))+(((41)*((M)*(r)))+((-21)*(pow(r,2))))))))*(((a)*((r)*(((3465)*((pow(r,24))*(((-2)*(M))+(r))))+(((11895)*((pow(a,24))*(((2)*(M))+(r))))+(((2310)*((pow(a,2))*((pow(r,21))*(((-2)*(pow(M,2)))+(((-34)*((M)*(r)))+((19)*(pow(r,2))))))))+(((10)*((pow(a,22))*((r)*(((-13874)*(pow(M,2)))+(((14674)*((M)*(r)))+((11995)*(pow(r,2))))))))+(((924)*((pow(a,4))*((pow(r,18))*(((4)*(pow(M,3)))+(((-56)*((pow(M,2))*(r)))+(((-437)*((M)*(pow(r,2))))+((277)*(pow(r,3)))))))))+(((4)*((pow(a,20))*((pow(r,2))*(((101276)*(pow(M,3)))+(((-194936)*((pow(M,2))*(r)))+(((86957)*((M)*(pow(r,2))))+((140557)*(pow(r,3)))))))))+(((66)*((pow(a,6))*((pow(r,15))*(((-64)*(pow(M,4)))+(((576)*((pow(M,3))*(r)))+(((-4002)*((pow(M,2))*(pow(r,2))))+(((-18798)*((M)*(pow(r,3))))+((13779)*(pow(r,4))))))))))+(((2)*((pow(a,18))*((pow(r,3))*(((-382912)*(pow(M,4)))+(((854592)*((pow(M,3))*(r)))+(((-961566)*((pow(M,2))*(pow(r,2))))+(((129234)*((M)*(pow(r,3))))+((810957)*(pow(r,4))))))))))+(((11)*((pow(a,8))*((pow(r,12))*(((512)*(pow(M,5)))+(((-3584)*((pow(M,4))*(r)))+(((16064)*((pow(M,3))*(pow(r,2))))+(((-73792)*((pow(M,2))*(pow(r,3))))+(((-229322)*((M)*(pow(r,4))))+((199559)*(pow(r,5)))))))))))+(((pow(a,16))*((pow(r,4))*(((890368)*(pow(M,5)))+(((-2369024)*((pow(M,4))*(r)))+(((2847296)*((pow(M,3))*(pow(r,2))))+(((-2850112)*((pow(M,2))*(pow(r,3))))+(((-611758)*((M)*(pow(r,4))))+((3208499)*(pow(r,5))))))))))+(((4)*((pow(a,10))*((pow(r,9))*(((-2048)*(pow(M,6)))+(((11776)*((pow(M,5))*(r)))+(((-41120)*((pow(M,4))*(pow(r,2))))+(((122336)*((pow(M,3))*(pow(r,3))))+(((-417566)*((pow(M,2))*(pow(r,4))))+(((-884918)*((M)*(pow(r,5))))+((949477)*(pow(r,6))))))))))))+(((4)*((pow(a,14))*((pow(r,5))*(((-145408)*(pow(M,6)))+(((454144)*((pow(M,5))*(r)))+(((-634720)*((pow(M,4))*(pow(r,2))))+(((605664)*((pow(M,3))*(pow(r,3))))+(((-752866)*((pow(M,2))*(pow(r,4))))+(((-537782)*((M)*(pow(r,5))))+((1145627)*(pow(r,6))))))))))))+((8)*((pow(a,12))*((pow(r,6))*(((20480)*(pow(M,7)))+(((-73728)*((pow(M,6))*(r)))+(((120960)*((pow(M,5))*(pow(r,2))))+(((-133120)*((pow(M,4))*(pow(r,3))))+(((153300)*((pow(M,3))*(pow(r,4))))+(((-314880)*((pow(M,2))*(pow(r,5))))+(((-428925)*((M)*(pow(r,6))))+((604800)*(pow(r,7)))))))))))))))))))))))))))+(((a)*((((11895)*(pow(a,20)))+(((-4620)*((pow(a,2))*(((M)+((-8)*(r)))*(pow(r,17)))))+(((3465)*(pow(r,20)))+(((20)*((pow(a,18))*((r)*(((-2279)*(M))+((4808)*(r))))))+(((231)*((pow(a,4))*((pow(r,14))*(((32)*(pow(M,2)))+(((-192)*((M)*(r)))+((773)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((111392)*(pow(M,2)))+(((-253248)*((M)*(r)))+((358013)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((-24)*(pow(M,3)))+(((120)*((pow(M,2))*(r)))+(((-361)*((M)*(pow(r,2))))+((976)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((-10008)*(pow(M,3)))+(((26760)*((pow(M,2))*(r)))+(((-38537)*((M)*(pow(r,2))))+((50608)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((1024)*(pow(M,4)))+(((-4352)*((pow(M,3))*(r)))+(((10896)*((pow(M,2))*(pow(r,2))))+(((-21920)*((M)*(pow(r,3))))+((44815)*(pow(r,4))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((62464)*(pow(M,4)))+(((-195328)*((pow(M,3))*(r)))+(((328656)*((pow(M,2))*(pow(r,2))))+(((-435680)*((M)*(pow(r,3))))+((615515)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((-5120)*(pow(M,5)))+(((18432)*((pow(M,4))*(r)))+(((-39200)*((pow(M,3))*(pow(r,2))))+(((65536)*((pow(M,2))*(pow(r,3))))+(((-99225)*((M)*(pow(r,4))))+((163840)*(pow(r,5)))))))))))))))))))))*((pow(expr[0],2))*((pow(expr[1],2))*(pow(expr[2],2))))))+((-6930)*((pow((pow(a,2))+(pow(r,2)),12))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_386(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[386] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.001692708333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((pow(a,-11))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((11895)*(pow(a,20)))+(((-4620)*((pow(a,2))*(((M)+((-8)*(r)))*(pow(r,17)))))+(((3465)*(pow(r,20)))+(((20)*((pow(a,18))*((r)*(((-2279)*(M))+((4808)*(r))))))+(((231)*((pow(a,4))*((pow(r,14))*(((32)*(pow(M,2)))+(((-192)*((M)*(r)))+((773)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((111392)*(pow(M,2)))+(((-253248)*((M)*(r)))+((358013)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((-24)*(pow(M,3)))+(((120)*((pow(M,2))*(r)))+(((-361)*((M)*(pow(r,2))))+((976)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((-10008)*(pow(M,3)))+(((26760)*((pow(M,2))*(r)))+(((-38537)*((M)*(pow(r,2))))+((50608)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((1024)*(pow(M,4)))+(((-4352)*((pow(M,3))*(r)))+(((10896)*((pow(M,2))*(pow(r,2))))+(((-21920)*((M)*(pow(r,3))))+((44815)*(pow(r,4))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((62464)*(pow(M,4)))+(((-195328)*((pow(M,3))*(r)))+(((328656)*((pow(M,2))*(pow(r,2))))+(((-435680)*((M)*(pow(r,3))))+((615515)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((-5120)*(pow(M,5)))+(((18432)*((pow(M,4))*(r)))+(((-39200)*((pow(M,3))*(pow(r,2))))+(((65536)*((pow(M,2))*(pow(r,3))))+(((-99225)*((M)*(pow(r,4))))+((163840)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((pow((pow(a,2))+(pow(r,2)),12))*(expr[3])))))))))))).cast<double>());
}

void compute_coeffs_scalar_387(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[387] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0008463541666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666667"))*((pow(a,-13))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((11895)*(pow(a,20)))+(((-4620)*((pow(a,2))*(((M)+((-8)*(r)))*(pow(r,17)))))+(((3465)*(pow(r,20)))+(((20)*((pow(a,18))*((r)*(((-2279)*(M))+((4808)*(r))))))+(((231)*((pow(a,4))*((pow(r,14))*(((32)*(pow(M,2)))+(((-192)*((M)*(r)))+((773)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((111392)*(pow(M,2)))+(((-253248)*((M)*(r)))+((358013)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((-24)*(pow(M,3)))+(((120)*((pow(M,2))*(r)))+(((-361)*((M)*(pow(r,2))))+((976)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((-10008)*(pow(M,3)))+(((26760)*((pow(M,2))*(r)))+(((-38537)*((M)*(pow(r,2))))+((50608)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((1024)*(pow(M,4)))+(((-4352)*((pow(M,3))*(r)))+(((10896)*((pow(M,2))*(pow(r,2))))+(((-21920)*((M)*(pow(r,3))))+((44815)*(pow(r,4))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((62464)*(pow(M,4)))+(((-195328)*((pow(M,3))*(r)))+(((328656)*((pow(M,2))*(pow(r,2))))+(((-435680)*((M)*(pow(r,3))))+((615515)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((-5120)*(pow(M,5)))+(((18432)*((pow(M,4))*(r)))+(((-39200)*((pow(M,3))*(pow(r,2))))+(((65536)*((pow(M,2))*(pow(r,3))))+(((-99225)*((M)*(pow(r,4))))+((163840)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((pow((pow(a,2))+(pow(r,2)),12))*(expr[3])))))))))))).cast<double>());
}

void compute_coeffs_scalar_388(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[388] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.02031250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-12))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*(((-1)*((a)*((r)*((((11895)*(pow(a,20)))+(((-4620)*((pow(a,2))*(((M)+((-8)*(r)))*(pow(r,17)))))+(((3465)*(pow(r,20)))+(((20)*((pow(a,18))*((r)*(((-2279)*(M))+((4808)*(r))))))+(((231)*((pow(a,4))*((pow(r,14))*(((32)*(pow(M,2)))+(((-192)*((M)*(r)))+((773)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((111392)*(pow(M,2)))+(((-253248)*((M)*(r)))+((358013)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((-24)*(pow(M,3)))+(((120)*((pow(M,2))*(r)))+(((-361)*((M)*(pow(r,2))))+((976)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((-10008)*(pow(M,3)))+(((26760)*((pow(M,2))*(r)))+(((-38537)*((M)*(pow(r,2))))+((50608)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((1024)*(pow(M,4)))+(((-4352)*((pow(M,3))*(r)))+(((10896)*((pow(M,2))*(pow(r,2))))+(((-21920)*((M)*(pow(r,3))))+((44815)*(pow(r,4))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((62464)*(pow(M,4)))+(((-195328)*((pow(M,3))*(r)))+(((328656)*((pow(M,2))*(pow(r,2))))+(((-435680)*((M)*(pow(r,3))))+((615515)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((-5120)*(pow(M,5)))+(((18432)*((pow(M,4))*(r)))+(((-39200)*((pow(M,3))*(pow(r,2))))+(((65536)*((pow(M,2))*(pow(r,3))))+(((-99225)*((M)*(pow(r,4))))+((163840)*(pow(r,5)))))))))))))))))))))*((expr[0])*(expr[1]))))))+((3465)*((pow((pow(a,2))+(pow(r,2)),12))*((expr[2])*(expr[3])))))))))))).cast<double>());
}

void compute_coeffs_scalar_389(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[389] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00006510416666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666667"))*((HighPrecisionScalar("1.558387444947959201643164926767557410400733386099231964716677842119761253585309213732992294821809591"))*((pow(a,-15))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((-1)*((pow(a,2))*((r)*(((3)*(M))+((2)*(r))))))+((pow(r,2))*(((2)*(pow(M,2)))+(((41)*((M)*(r)))+((-21)*(pow(r,2))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((385035)*(pow(a,24)))+(((675675)*(pow(r,24)))+(((360360)*((pow(a,2))*((pow(r,21))*((M)+((22)*(r))))))+(((280)*((pow(a,22))*((r)*(((3473)*(M))+((18238)*(r))))))+(((30030)*((pow(a,4))*((pow(r,18))*(((-8)*(pow(M,2)))+(((128)*((M)*(r)))+((1417)*(pow(r,2))))))))+(((14)*((pow(a,20))*((pow(r,2))*(((-94216)*(pow(M,2)))+(((600384)*((M)*(r)))+((2173641)*(pow(r,2))))))))+(((3432)*((pow(a,6))*((pow(r,15))*(((64)*(pow(M,3)))+(((-656)*((pow(M,2))*(r)))+(((5403)*((M)*(pow(r,2))))+((40242)*(pow(r,3)))))))))+(((8)*((pow(a,18))*((pow(r,3))*(((200128)*(pow(M,3)))+(((-1018832)*((pow(M,2))*(r)))+(((4136169)*((M)*(pow(r,2))))+((13544046)*(pow(r,3)))))))))+(((429)*((pow(a,8))*((pow(r,12))*(((-512)*(pow(M,4)))+(((4096)*((pow(M,3))*(r)))+(((-21824)*((pow(M,2))*(pow(r,2))))+(((124288)*((M)*(pow(r,3))))+((703417)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((-1366528)*(pow(M,4)))+(((6873088)*((pow(M,3))*(r)))+(((-22171712)*((pow(M,2))*(pow(r,2))))+(((78130816)*((M)*(pow(r,3))))+((257695349)*(pow(r,4)))))))))+(((208)*((pow(a,10))*((pow(r,9))*(((1024)*(pow(M,5)))+(((-6784)*((pow(M,4))*(r)))+(((28960)*((pow(M,3))*(pow(r,2))))+(((-108728)*((pow(M,2))*(pow(r,3))))+(((487037)*((M)*(pow(r,4))))+((2246938)*(pow(r,5)))))))))))+(((16)*((pow(a,14))*((pow(r,5))*(((44032)*(pow(M,5)))+(((-231552)*((pow(M,4))*(r)))+(((756960)*((pow(M,3))*(pow(r,2))))+(((-2178200)*((pow(M,2))*(pow(r,3))))+(((7654575)*((M)*(pow(r,4))))+((27023310)*(pow(r,5)))))))))))+((4)*((pow(a,12))*((pow(r,6))*(((-40960)*(pow(M,6)))+(((229376)*((pow(M,5))*(r)))+(((-882432)*((pow(M,4))*(pow(r,2))))+(((2831360)*((pow(M,3))*(pow(r,3))))+(((-8693800)*((pow(M,2))*(pow(r,4))))+(((33260640)*((M)*(pow(r,5))))+((131432025)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),12))*(((pow(a,4))+(((15)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((7)*(M))+((4)*(r))))))))*(expr[3]))))))))))))))).cast<double>());
}

}
