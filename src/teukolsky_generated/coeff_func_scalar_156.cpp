
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_780(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[780] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00004882812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("2.915475947422650235437076438772791538260699167442985977225003372433905030998356313832620163226517699"))*((pow(a,-19))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,8)))+(((pow(a,6))*((((10)*(M))+((-71)*(r)))*(r)))+(((10)*((pow(r,6))*(((2)*(pow(M,2)))+(((109)*((M)*(r)))+((-55)*(pow(r,2)))))))+(((-2)*((pow(a,4))*((pow(r,2))*(((22)*(pow(M,2)))+(((241)*((M)*(r)))+((299)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((32)*(pow(M,3)))+(((1768)*((pow(M,2))*(r)))+(((398)*((M)*(pow(r,2))))+((-1075)*(pow(r,3))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((114688)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((255255)*((pow(a,2))*((pow(r,25))*(((206)*(M))+((695)*(r))))))+(((7)*((pow(a,26))*((r)*(((1052134)*(M))+((755443)*(r))))))+(((6006)*((pow(a,4))*((pow(r,22))*(((8508)*(pow(M,2)))+(((96552)*((M)*(r)))+((165667)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((1793192)*(pow(M,2)))+(((6001728)*((M)*(r)))+((3224903)*(pow(r,2))))))))+(((2574)*((pow(a,6))*((pow(r,19))*(((2400)*(pow(M,3)))+(((194920)*((pow(M,2))*(r)))+(((1131698)*((M)*(pow(r,2))))+((1320061)*(pow(r,3)))))))))+(((70)*((pow(a,22))*((pow(r,3))*(((186336)*(pow(M,3)))+(((5659080)*((pow(M,2))*(r)))+(((13001370)*((M)*(pow(r,2))))+((6336865)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((-12800)*(pow(M,4)))+(((371200)*((pow(M,3))*(r)))+(((15477720)*((pow(M,2))*(pow(r,2))))+(((61573120)*((M)*(pow(r,3))))+((55100059)*(pow(r,4))))))))))+(((10)*((pow(a,20))*((pow(r,4))*(((-578304)*(pow(M,4)))+(((9278208)*((pow(M,3))*(r)))+(((186197940)*((pow(M,2))*(pow(r,2))))+(((378635800)*((M)*(pow(r,3))))+((180690325)*(pow(r,4))))))))))+(((65)*((pow(a,10))*((pow(r,13))*(((12288)*(pow(M,5)))+(((-199680)*((pow(M,4))*(r)))+(((3086080)*((pow(M,3))*(pow(r,2))))+(((88851264)*((pow(M,2))*(pow(r,3))))+(((274061382)*((M)*(pow(r,4))))+((201488035)*(pow(r,5)))))))))))+(((3)*((pow(a,18))*((pow(r,5))*(((864256)*(pow(M,5)))+(((-9405440)*((pow(M,4))*(r)))+(((96912640)*((pow(M,3))*(pow(r,2))))+(((1719012800)*((pow(M,2))*(pow(r,3))))+(((3424686650)*((M)*(pow(r,4))))+((1673282765)*(pow(r,5)))))))))))+(((60)*((pow(a,12))*((pow(r,10))*(((-6144)*(pow(M,6)))+(((71680)*((pow(M,5))*(r)))+(((-647040)*((pow(M,4))*(pow(r,2))))+(((7262080)*((pow(M,3))*(pow(r,3))))+(((164470188)*((pow(M,2))*(pow(r,4))))+(((422894584)*((M)*(pow(r,5))))+((267435189)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((-827392)*(pow(M,6)))+(((7888896)*((pow(M,5))*(r)))+(((-57438720)*((pow(M,4))*(pow(r,2))))+(((524372480)*((pow(M,3))*(pow(r,3))))+(((9330483600)*((pow(M,2))*(pow(r,4))))+(((19336000320)*((M)*(pow(r,5))))+((9997277465)*(pow(r,6)))))))))))+((4)*((pow(a,14))*((pow(r,7))*(((32768)*(pow(M,7)))+(((-299008)*((pow(M,6))*(r)))+(((2199552)*((pow(M,5))*(pow(r,2))))+(((-15669760)*((pow(M,4))*(pow(r,3))))+(((148851680)*((pow(M,3))*(pow(r,4))))+(((2883128520)*((pow(M,2))*(pow(r,5))))+(((6508958330)*((M)*(pow(r,6))))+((3666576305)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),10))*((((323)*(pow(r,11)))+(((15)*((pow(a,10))*(((2)*(M))+(r))))+(((17)*((pow(a,2))*((pow(r,8))*(((94)*(M))+((67)*(r))))))+(((5)*((pow(a,8))*((r)*(((112)*(pow(M,2)))+(((136)*((M)*(r)))+((43)*(pow(r,2))))))))+(((2)*((pow(a,4))*((pow(r,5))*(((1288)*(pow(M,2)))+(((1908)*((M)*(r)))+((747)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((672)*(pow(M,3)))+(((1568)*((pow(M,2))*(r)))+(((1434)*((M)*(pow(r,2))))+((439)*(pow(r,3))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_781(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[781] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00001220703125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-21))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-11))*((((30)*(pow(a,12)))+(((5)*((pow(a,10))*((((94)*(M))+((-169)*(r)))*(r))))+(((646)*((pow(r,10))*(((2)*(pow(M,2)))+(((109)*((M)*(r)))+((-55)*(pow(r,2)))))))+(((-2)*((pow(a,8))*((pow(r,2))*(((138)*(pow(M,2)))+(((9353)*((M)*(r)))+((8447)*(pow(r,2))))))))+(((17)*((pow(a,2))*((pow(r,7))*(((224)*(pow(M,3)))+(((12400)*((pow(M,2))*(r)))+(((4190)*((M)*(pow(r,2))))+((-6857)*(pow(r,3)))))))))+(((-2)*((pow(a,6))*((pow(r,3))*(((1456)*(pow(M,3)))+(((664)*((pow(M,2))*(r)))+(((45810)*((M)*(pow(r,2))))+((38321)*(pow(r,3)))))))))+((2)*((pow(a,4))*((pow(r,4))*(((1344)*(pow(M,4)))+(((75712)*((pow(M,3))*(r)))+(((95828)*((pow(M,2))*(pow(r,2))))+(((-35814)*((M)*(pow(r,3))))+((-70831)*(pow(r,4))))))))))))))))*((expr[0])*(((((114688)*(pow(a,29)))+(((14549535)*((a)*(pow(r,28))))+(((255255)*((pow(a,3))*((pow(r,25))*(((206)*(M))+((695)*(r))))))+(((7)*((pow(a,27))*((r)*(((1052134)*(M))+((755443)*(r))))))+(((6006)*((pow(a,5))*((pow(r,22))*(((8508)*(pow(M,2)))+(((96552)*((M)*(r)))+((165667)*(pow(r,2))))))))+(((21)*((pow(a,25))*((pow(r,2))*(((1793192)*(pow(M,2)))+(((6001728)*((M)*(r)))+((3224903)*(pow(r,2))))))))+(((2574)*((pow(a,7))*((pow(r,19))*(((2400)*(pow(M,3)))+(((194920)*((pow(M,2))*(r)))+(((1131698)*((M)*(pow(r,2))))+((1320061)*(pow(r,3)))))))))+(((70)*((pow(a,23))*((pow(r,3))*(((186336)*(pow(M,3)))+(((5659080)*((pow(M,2))*(r)))+(((13001370)*((M)*(pow(r,2))))+((6336865)*(pow(r,3)))))))))+(((143)*((pow(a,9))*((pow(r,16))*(((-12800)*(pow(M,4)))+(((371200)*((pow(M,3))*(r)))+(((15477720)*((pow(M,2))*(pow(r,2))))+(((61573120)*((M)*(pow(r,3))))+((55100059)*(pow(r,4))))))))))+(((10)*((pow(a,21))*((pow(r,4))*(((-578304)*(pow(M,4)))+(((9278208)*((pow(M,3))*(r)))+(((186197940)*((pow(M,2))*(pow(r,2))))+(((378635800)*((M)*(pow(r,3))))+((180690325)*(pow(r,4))))))))))+(((65)*((pow(a,11))*((pow(r,13))*(((12288)*(pow(M,5)))+(((-199680)*((pow(M,4))*(r)))+(((3086080)*((pow(M,3))*(pow(r,2))))+(((88851264)*((pow(M,2))*(pow(r,3))))+(((274061382)*((M)*(pow(r,4))))+((201488035)*(pow(r,5)))))))))))+(((3)*((pow(a,19))*((pow(r,5))*(((864256)*(pow(M,5)))+(((-9405440)*((pow(M,4))*(r)))+(((96912640)*((pow(M,3))*(pow(r,2))))+(((1719012800)*((pow(M,2))*(pow(r,3))))+(((3424686650)*((M)*(pow(r,4))))+((1673282765)*(pow(r,5)))))))))))+(((60)*((pow(a,13))*((pow(r,10))*(((-6144)*(pow(M,6)))+(((71680)*((pow(M,5))*(r)))+(((-647040)*((pow(M,4))*(pow(r,2))))+(((7262080)*((pow(M,3))*(pow(r,3))))+(((164470188)*((pow(M,2))*(pow(r,4))))+(((422894584)*((M)*(pow(r,5))))+((267435189)*(pow(r,6))))))))))))+(((pow(a,17))*((pow(r,6))*(((-827392)*(pow(M,6)))+(((7888896)*((pow(M,5))*(r)))+(((-57438720)*((pow(M,4))*(pow(r,2))))+(((524372480)*((pow(M,3))*(pow(r,3))))+(((9330483600)*((pow(M,2))*(pow(r,4))))+(((19336000320)*((M)*(pow(r,5))))+((9997277465)*(pow(r,6)))))))))))+((4)*((pow(a,15))*((pow(r,7))*(((32768)*(pow(M,7)))+(((-299008)*((pow(M,6))*(r)))+(((2199552)*((pow(M,5))*(pow(r,2))))+(((-15669760)*((pow(M,4))*(pow(r,3))))+(((148851680)*((pow(M,3))*(pow(r,4))))+(((2883128520)*((pow(M,2))*(pow(r,5))))+(((6508958330)*((M)*(pow(r,6))))+((3666576305)*(pow(r,7)))))))))))))))))))))))))))*(expr[0]))+((-45045)*((pow((pow(a,2))+(pow(r,2)),10))*((((15)*(pow(a,8)))+(((323)*(pow(r,8)))+(((40)*((pow(a,6))*((r)*(((7)*(M))+((5)*(r))))))+(((136)*((pow(a,2))*((pow(r,5))*(((7)*(M))+((6)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((336)*(pow(M,2)))+(((616)*((M)*(r)))+((339)*(pow(r,2))))))))))))*((expr[1])*((expr[2])*(expr[3]))))))))))))).cast<double>());
}

void compute_coeffs_scalar_782(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[782] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00002441406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-19))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((15)*(pow(a,8)))+(((323)*(pow(r,8)))+(((40)*((pow(a,6))*((r)*(((7)*(M))+((5)*(r))))))+(((136)*((pow(a,2))*((pow(r,5))*(((7)*(M))+((6)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((336)*(pow(M,2)))+(((616)*((M)*(r)))+((339)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((114688)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((255255)*((pow(a,2))*((pow(r,25))*(((206)*(M))+((695)*(r))))))+(((7)*((pow(a,26))*((r)*(((1052134)*(M))+((755443)*(r))))))+(((6006)*((pow(a,4))*((pow(r,22))*(((8508)*(pow(M,2)))+(((96552)*((M)*(r)))+((165667)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((1793192)*(pow(M,2)))+(((6001728)*((M)*(r)))+((3224903)*(pow(r,2))))))))+(((2574)*((pow(a,6))*((pow(r,19))*(((2400)*(pow(M,3)))+(((194920)*((pow(M,2))*(r)))+(((1131698)*((M)*(pow(r,2))))+((1320061)*(pow(r,3)))))))))+(((70)*((pow(a,22))*((pow(r,3))*(((186336)*(pow(M,3)))+(((5659080)*((pow(M,2))*(r)))+(((13001370)*((M)*(pow(r,2))))+((6336865)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((-12800)*(pow(M,4)))+(((371200)*((pow(M,3))*(r)))+(((15477720)*((pow(M,2))*(pow(r,2))))+(((61573120)*((M)*(pow(r,3))))+((55100059)*(pow(r,4))))))))))+(((10)*((pow(a,20))*((pow(r,4))*(((-578304)*(pow(M,4)))+(((9278208)*((pow(M,3))*(r)))+(((186197940)*((pow(M,2))*(pow(r,2))))+(((378635800)*((M)*(pow(r,3))))+((180690325)*(pow(r,4))))))))))+(((65)*((pow(a,10))*((pow(r,13))*(((12288)*(pow(M,5)))+(((-199680)*((pow(M,4))*(r)))+(((3086080)*((pow(M,3))*(pow(r,2))))+(((88851264)*((pow(M,2))*(pow(r,3))))+(((274061382)*((M)*(pow(r,4))))+((201488035)*(pow(r,5)))))))))))+(((3)*((pow(a,18))*((pow(r,5))*(((864256)*(pow(M,5)))+(((-9405440)*((pow(M,4))*(r)))+(((96912640)*((pow(M,3))*(pow(r,2))))+(((1719012800)*((pow(M,2))*(pow(r,3))))+(((3424686650)*((M)*(pow(r,4))))+((1673282765)*(pow(r,5)))))))))))+(((60)*((pow(a,12))*((pow(r,10))*(((-6144)*(pow(M,6)))+(((71680)*((pow(M,5))*(r)))+(((-647040)*((pow(M,4))*(pow(r,2))))+(((7262080)*((pow(M,3))*(pow(r,3))))+(((164470188)*((pow(M,2))*(pow(r,4))))+(((422894584)*((M)*(pow(r,5))))+((267435189)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((-827392)*(pow(M,6)))+(((7888896)*((pow(M,5))*(r)))+(((-57438720)*((pow(M,4))*(pow(r,2))))+(((524372480)*((pow(M,3))*(pow(r,3))))+(((9330483600)*((pow(M,2))*(pow(r,4))))+(((19336000320)*((M)*(pow(r,5))))+((9997277465)*(pow(r,6)))))))))))+((4)*((pow(a,14))*((pow(r,7))*(((32768)*(pow(M,7)))+(((-299008)*((pow(M,6))*(r)))+(((2199552)*((pow(M,5))*(pow(r,2))))+(((-15669760)*((pow(M,4))*(pow(r,3))))+(((148851680)*((pow(M,3))*(pow(r,4))))+(((2883128520)*((pow(M,2))*(pow(r,5))))+(((6508958330)*((M)*(pow(r,6))))+((3666576305)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),10))*((((323)*(pow(r,11)))+(((15)*((pow(a,10))*(((2)*(M))+(r))))+(((17)*((pow(a,2))*((pow(r,8))*(((94)*(M))+((67)*(r))))))+(((5)*((pow(a,8))*((r)*(((112)*(pow(M,2)))+(((136)*((M)*(r)))+((43)*(pow(r,2))))))))+(((2)*((pow(a,4))*((pow(r,5))*(((1288)*(pow(M,2)))+(((1908)*((M)*(r)))+((747)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((672)*(pow(M,3)))+(((1568)*((pow(M,2))*(r)))+(((1434)*((M)*(pow(r,2))))+((439)*(pow(r,3))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_783(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[783] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00001220703125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-21))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-11))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((((15)*(pow(a,8)))+(((323)*(pow(r,8)))+(((40)*((pow(a,6))*((r)*(((7)*(M))+((5)*(r))))))+(((136)*((pow(a,2))*((pow(r,5))*(((7)*(M))+((6)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((336)*(pow(M,2)))+(((616)*((M)*(r)))+((339)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((114688)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((255255)*((pow(a,2))*((pow(r,25))*(((206)*(M))+((695)*(r))))))+(((7)*((pow(a,26))*((r)*(((1052134)*(M))+((755443)*(r))))))+(((6006)*((pow(a,4))*((pow(r,22))*(((8508)*(pow(M,2)))+(((96552)*((M)*(r)))+((165667)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((1793192)*(pow(M,2)))+(((6001728)*((M)*(r)))+((3224903)*(pow(r,2))))))))+(((2574)*((pow(a,6))*((pow(r,19))*(((2400)*(pow(M,3)))+(((194920)*((pow(M,2))*(r)))+(((1131698)*((M)*(pow(r,2))))+((1320061)*(pow(r,3)))))))))+(((70)*((pow(a,22))*((pow(r,3))*(((186336)*(pow(M,3)))+(((5659080)*((pow(M,2))*(r)))+(((13001370)*((M)*(pow(r,2))))+((6336865)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((-12800)*(pow(M,4)))+(((371200)*((pow(M,3))*(r)))+(((15477720)*((pow(M,2))*(pow(r,2))))+(((61573120)*((M)*(pow(r,3))))+((55100059)*(pow(r,4))))))))))+(((10)*((pow(a,20))*((pow(r,4))*(((-578304)*(pow(M,4)))+(((9278208)*((pow(M,3))*(r)))+(((186197940)*((pow(M,2))*(pow(r,2))))+(((378635800)*((M)*(pow(r,3))))+((180690325)*(pow(r,4))))))))))+(((65)*((pow(a,10))*((pow(r,13))*(((12288)*(pow(M,5)))+(((-199680)*((pow(M,4))*(r)))+(((3086080)*((pow(M,3))*(pow(r,2))))+(((88851264)*((pow(M,2))*(pow(r,3))))+(((274061382)*((M)*(pow(r,4))))+((201488035)*(pow(r,5)))))))))))+(((3)*((pow(a,18))*((pow(r,5))*(((864256)*(pow(M,5)))+(((-9405440)*((pow(M,4))*(r)))+(((96912640)*((pow(M,3))*(pow(r,2))))+(((1719012800)*((pow(M,2))*(pow(r,3))))+(((3424686650)*((M)*(pow(r,4))))+((1673282765)*(pow(r,5)))))))))))+(((60)*((pow(a,12))*((pow(r,10))*(((-6144)*(pow(M,6)))+(((71680)*((pow(M,5))*(r)))+(((-647040)*((pow(M,4))*(pow(r,2))))+(((7262080)*((pow(M,3))*(pow(r,3))))+(((164470188)*((pow(M,2))*(pow(r,4))))+(((422894584)*((M)*(pow(r,5))))+((267435189)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((-827392)*(pow(M,6)))+(((7888896)*((pow(M,5))*(r)))+(((-57438720)*((pow(M,4))*(pow(r,2))))+(((524372480)*((pow(M,3))*(pow(r,3))))+(((9330483600)*((pow(M,2))*(pow(r,4))))+(((19336000320)*((M)*(pow(r,5))))+((9997277465)*(pow(r,6)))))))))))+((4)*((pow(a,14))*((pow(r,7))*(((32768)*(pow(M,7)))+(((-299008)*((pow(M,6))*(r)))+(((2199552)*((pow(M,5))*(pow(r,2))))+(((-15669760)*((pow(M,4))*(pow(r,3))))+(((148851680)*((pow(M,3))*(pow(r,4))))+(((2883128520)*((pow(M,2))*(pow(r,5))))+(((6508958330)*((M)*(pow(r,6))))+((3666576305)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),10))*((((323)*(pow(r,11)))+(((15)*((pow(a,10))*(((2)*(M))+(r))))+(((17)*((pow(a,2))*((pow(r,8))*(((94)*(M))+((67)*(r))))))+(((5)*((pow(a,8))*((r)*(((112)*(pow(M,2)))+(((136)*((M)*(r)))+((43)*(pow(r,2))))))))+(((2)*((pow(a,4))*((pow(r,5))*(((1288)*(pow(M,2)))+(((1908)*((M)*(r)))+((747)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((672)*(pow(M,3)))+(((1568)*((pow(M,2))*(r)))+(((1434)*((M)*(pow(r,2))))+((439)*(pow(r,3))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_784(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[784] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.0002441406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-20))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-11))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((15)*(pow(a,8)))+(((323)*(pow(r,8)))+(((40)*((pow(a,6))*((r)*(((7)*(M))+((5)*(r))))))+(((136)*((pow(a,2))*((pow(r,5))*(((7)*(M))+((6)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((336)*(pow(M,2)))+(((616)*((M)*(r)))+((339)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((114688)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((255255)*((pow(a,2))*((pow(r,25))*(((206)*(M))+((695)*(r))))))+(((7)*((pow(a,26))*((r)*(((1052134)*(M))+((755443)*(r))))))+(((6006)*((pow(a,4))*((pow(r,22))*(((8508)*(pow(M,2)))+(((96552)*((M)*(r)))+((165667)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((1793192)*(pow(M,2)))+(((6001728)*((M)*(r)))+((3224903)*(pow(r,2))))))))+(((2574)*((pow(a,6))*((pow(r,19))*(((2400)*(pow(M,3)))+(((194920)*((pow(M,2))*(r)))+(((1131698)*((M)*(pow(r,2))))+((1320061)*(pow(r,3)))))))))+(((70)*((pow(a,22))*((pow(r,3))*(((186336)*(pow(M,3)))+(((5659080)*((pow(M,2))*(r)))+(((13001370)*((M)*(pow(r,2))))+((6336865)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((-12800)*(pow(M,4)))+(((371200)*((pow(M,3))*(r)))+(((15477720)*((pow(M,2))*(pow(r,2))))+(((61573120)*((M)*(pow(r,3))))+((55100059)*(pow(r,4))))))))))+(((10)*((pow(a,20))*((pow(r,4))*(((-578304)*(pow(M,4)))+(((9278208)*((pow(M,3))*(r)))+(((186197940)*((pow(M,2))*(pow(r,2))))+(((378635800)*((M)*(pow(r,3))))+((180690325)*(pow(r,4))))))))))+(((65)*((pow(a,10))*((pow(r,13))*(((12288)*(pow(M,5)))+(((-199680)*((pow(M,4))*(r)))+(((3086080)*((pow(M,3))*(pow(r,2))))+(((88851264)*((pow(M,2))*(pow(r,3))))+(((274061382)*((M)*(pow(r,4))))+((201488035)*(pow(r,5)))))))))))+(((3)*((pow(a,18))*((pow(r,5))*(((864256)*(pow(M,5)))+(((-9405440)*((pow(M,4))*(r)))+(((96912640)*((pow(M,3))*(pow(r,2))))+(((1719012800)*((pow(M,2))*(pow(r,3))))+(((3424686650)*((M)*(pow(r,4))))+((1673282765)*(pow(r,5)))))))))))+(((60)*((pow(a,12))*((pow(r,10))*(((-6144)*(pow(M,6)))+(((71680)*((pow(M,5))*(r)))+(((-647040)*((pow(M,4))*(pow(r,2))))+(((7262080)*((pow(M,3))*(pow(r,3))))+(((164470188)*((pow(M,2))*(pow(r,4))))+(((422894584)*((M)*(pow(r,5))))+((267435189)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((-827392)*(pow(M,6)))+(((7888896)*((pow(M,5))*(r)))+(((-57438720)*((pow(M,4))*(pow(r,2))))+(((524372480)*((pow(M,3))*(pow(r,3))))+(((9330483600)*((pow(M,2))*(pow(r,4))))+(((19336000320)*((M)*(pow(r,5))))+((9997277465)*(pow(r,6)))))))))))+((4)*((pow(a,14))*((pow(r,7))*(((32768)*(pow(M,7)))+(((-299008)*((pow(M,6))*(r)))+(((2199552)*((pow(M,5))*(pow(r,2))))+(((-15669760)*((pow(M,4))*(pow(r,3))))+(((148851680)*((pow(M,3))*(pow(r,4))))+(((2883128520)*((pow(M,2))*(pow(r,5))))+(((6508958330)*((M)*(pow(r,6))))+((3666576305)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),10))*((((323)*(pow(r,11)))+(((15)*((pow(a,10))*(((2)*(M))+(r))))+(((17)*((pow(a,2))*((pow(r,8))*(((94)*(M))+((67)*(r))))))+(((5)*((pow(a,8))*((r)*(((112)*(pow(M,2)))+(((136)*((M)*(r)))+((43)*(pow(r,2))))))))+(((2)*((pow(a,4))*((pow(r,5))*(((1288)*(pow(M,2)))+(((1908)*((M)*(r)))+((747)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((672)*(pow(M,3)))+(((1568)*((pow(M,2))*(r)))+(((1434)*((M)*(pow(r,2))))+((439)*(pow(r,3))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

}
