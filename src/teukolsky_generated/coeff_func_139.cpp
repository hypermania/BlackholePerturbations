
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_695(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[695] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00008283342633928571428571428571428571428571428571428571428571428571428571428571428571428571428571428571"))*((pow(a,-17))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((17)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((16)*(M))+((9)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((413707)*(pow(a,28)))+(((765765)*(pow(r,28)))+(((420420)*((pow(a,2))*((pow(r,25))*((M)+((25)*(r))))))+(((28)*((pow(a,26))*((r)*(((44679)*(M))+((229193)*(r))))))+(((3003)*((pow(a,4))*((pow(r,22))*(((-96)*(pow(M,2)))+(((1776)*((M)*(r)))+((22271)*(pow(r,2))))))))+(((7)*((pow(a,24))*((pow(r,2))*(((-288288)*(pow(M,2)))+(((1856304)*((M)*(r)))+((6467773)*(pow(r,2))))))))+(((3432)*((pow(a,6))*((pow(r,19))*(((80)*(pow(M,3)))+(((-960)*((pow(M,2))*(r)))+(((9069)*((M)*(pow(r,2))))+((76178)*(pow(r,3)))))))))+(((8)*((pow(a,22))*((pow(r,3))*(((381456)*(pow(M,3)))+(((-1950336)*((pow(M,2))*(r)))+(((7832169)*((M)*(pow(r,2))))+((24213278)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((-2048)*(pow(M,4)))+(((19456)*((pow(M,3))*(r)))+(((-119712)*((pow(M,2))*(pow(r,2))))+(((773104)*((M)*(pow(r,3))))+((4903903)*(pow(r,4))))))))))+(((pow(a,20))*((pow(r,4))*(((-3467264)*(pow(M,4)))+(((17478656)*((pow(M,3))*(r)))+(((-54814368)*((pow(M,2))*(pow(r,2))))+(((185385488)*((M)*(pow(r,3))))+((563697471)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,13))*(((6144)*(pow(M,5)))+(((-49152)*((pow(M,4))*(r)))+(((242048)*((pow(M,3))*(pow(r,2))))+(((-1025664)*((pow(M,2))*(pow(r,3))))+(((5122299)*((M)*(pow(r,4))))+((26246633)*(pow(r,5)))))))))))+(((4)*((pow(a,18))*((pow(r,5))*(((669696)*(pow(M,5)))+(((-3526656)*((pow(M,4))*(r)))+(((10900352)*((pow(M,3))*(pow(r,2))))+(((-28907904)*((pow(M,2))*(pow(r,3))))+(((93626463)*((M)*(pow(r,4))))+((295846019)*(pow(r,5)))))))))))+(((pow(a,16))*((pow(r,6))*(((-1245184)*(pow(M,6)))+(((6979584)*((pow(M,5))*(r)))+(((-23193600)*((pow(M,4))*(pow(r,2))))+(((62336000)*((pow(M,3))*(pow(r,3))))+(((-162628800)*((pow(M,2))*(pow(r,4))))+(((543557280)*((M)*(pow(r,5))))+((1851581375)*(pow(r,6)))))))))))+(((pow(a,12))*((pow(r,10))*(((-327680)*(pow(M,6)))+(((2260992)*((pow(M,5))*(r)))+(((-9615360)*((pow(M,4))*(pow(r,2))))+(((33287168)*((pow(M,3))*(pow(r,3))))+(((-110538048)*((pow(M,2))*(pow(r,4))))+(((458949792)*((M)*(pow(r,5))))+((1986794929)*(pow(r,6)))))))))))+((16)*((pow(a,14))*((pow(r,7))*(((16384)*(pow(M,7)))+(((-98304)*((pow(M,6))*(r)))+(((390144)*((pow(M,5))*(pow(r,2))))+(((-1244160)*((pow(M,4))*(pow(r,3))))+(((3523120)*((pow(M,3))*(pow(r,4))))+(((-9971424)*((pow(M,2))*(pow(r,5))))+(((36278431)*((M)*(pow(r,6))))+((137273724)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),14))*(((pow(a,4))+(((17)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((16)*(M))+((9)*(r))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_696(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[696] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00004141671316964285714285714285714285714285714285714285714285714285714285714285714285714285714285714286"))*((pow(a,-19))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((pow(a,4))+(((17)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((16)*(M))+((9)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((413707)*(pow(a,28)))+(((765765)*(pow(r,28)))+(((420420)*((pow(a,2))*((pow(r,25))*((M)+((25)*(r))))))+(((28)*((pow(a,26))*((r)*(((44679)*(M))+((229193)*(r))))))+(((3003)*((pow(a,4))*((pow(r,22))*(((-96)*(pow(M,2)))+(((1776)*((M)*(r)))+((22271)*(pow(r,2))))))))+(((7)*((pow(a,24))*((pow(r,2))*(((-288288)*(pow(M,2)))+(((1856304)*((M)*(r)))+((6467773)*(pow(r,2))))))))+(((3432)*((pow(a,6))*((pow(r,19))*(((80)*(pow(M,3)))+(((-960)*((pow(M,2))*(r)))+(((9069)*((M)*(pow(r,2))))+((76178)*(pow(r,3)))))))))+(((8)*((pow(a,22))*((pow(r,3))*(((381456)*(pow(M,3)))+(((-1950336)*((pow(M,2))*(r)))+(((7832169)*((M)*(pow(r,2))))+((24213278)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((-2048)*(pow(M,4)))+(((19456)*((pow(M,3))*(r)))+(((-119712)*((pow(M,2))*(pow(r,2))))+(((773104)*((M)*(pow(r,3))))+((4903903)*(pow(r,4))))))))))+(((pow(a,20))*((pow(r,4))*(((-3467264)*(pow(M,4)))+(((17478656)*((pow(M,3))*(r)))+(((-54814368)*((pow(M,2))*(pow(r,2))))+(((185385488)*((M)*(pow(r,3))))+((563697471)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,13))*(((6144)*(pow(M,5)))+(((-49152)*((pow(M,4))*(r)))+(((242048)*((pow(M,3))*(pow(r,2))))+(((-1025664)*((pow(M,2))*(pow(r,3))))+(((5122299)*((M)*(pow(r,4))))+((26246633)*(pow(r,5)))))))))))+(((4)*((pow(a,18))*((pow(r,5))*(((669696)*(pow(M,5)))+(((-3526656)*((pow(M,4))*(r)))+(((10900352)*((pow(M,3))*(pow(r,2))))+(((-28907904)*((pow(M,2))*(pow(r,3))))+(((93626463)*((M)*(pow(r,4))))+((295846019)*(pow(r,5)))))))))))+(((pow(a,16))*((pow(r,6))*(((-1245184)*(pow(M,6)))+(((6979584)*((pow(M,5))*(r)))+(((-23193600)*((pow(M,4))*(pow(r,2))))+(((62336000)*((pow(M,3))*(pow(r,3))))+(((-162628800)*((pow(M,2))*(pow(r,4))))+(((543557280)*((M)*(pow(r,5))))+((1851581375)*(pow(r,6)))))))))))+(((pow(a,12))*((pow(r,10))*(((-327680)*(pow(M,6)))+(((2260992)*((pow(M,5))*(r)))+(((-9615360)*((pow(M,4))*(pow(r,2))))+(((33287168)*((pow(M,3))*(pow(r,3))))+(((-110538048)*((pow(M,2))*(pow(r,4))))+(((458949792)*((M)*(pow(r,5))))+((1986794929)*(pow(r,6)))))))))))+((16)*((pow(a,14))*((pow(r,7))*(((16384)*(pow(M,7)))+(((-98304)*((pow(M,6))*(r)))+(((390144)*((pow(M,5))*(pow(r,2))))+(((-1244160)*((pow(M,4))*(pow(r,3))))+(((3523120)*((pow(M,3))*(pow(r,4))))+(((-9971424)*((pow(M,2))*(pow(r,5))))+(((36278431)*((M)*(pow(r,6))))+((137273724)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),14))*(((pow(a,4))+(((17)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((16)*(M))+((9)*(r))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_697(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[697] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.001159667968750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-18))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((17)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((16)*(M))+((9)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((413707)*(pow(a,28)))+(((765765)*(pow(r,28)))+(((420420)*((pow(a,2))*((pow(r,25))*((M)+((25)*(r))))))+(((28)*((pow(a,26))*((r)*(((44679)*(M))+((229193)*(r))))))+(((3003)*((pow(a,4))*((pow(r,22))*(((-96)*(pow(M,2)))+(((1776)*((M)*(r)))+((22271)*(pow(r,2))))))))+(((7)*((pow(a,24))*((pow(r,2))*(((-288288)*(pow(M,2)))+(((1856304)*((M)*(r)))+((6467773)*(pow(r,2))))))))+(((3432)*((pow(a,6))*((pow(r,19))*(((80)*(pow(M,3)))+(((-960)*((pow(M,2))*(r)))+(((9069)*((M)*(pow(r,2))))+((76178)*(pow(r,3)))))))))+(((8)*((pow(a,22))*((pow(r,3))*(((381456)*(pow(M,3)))+(((-1950336)*((pow(M,2))*(r)))+(((7832169)*((M)*(pow(r,2))))+((24213278)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((-2048)*(pow(M,4)))+(((19456)*((pow(M,3))*(r)))+(((-119712)*((pow(M,2))*(pow(r,2))))+(((773104)*((M)*(pow(r,3))))+((4903903)*(pow(r,4))))))))))+(((pow(a,20))*((pow(r,4))*(((-3467264)*(pow(M,4)))+(((17478656)*((pow(M,3))*(r)))+(((-54814368)*((pow(M,2))*(pow(r,2))))+(((185385488)*((M)*(pow(r,3))))+((563697471)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,13))*(((6144)*(pow(M,5)))+(((-49152)*((pow(M,4))*(r)))+(((242048)*((pow(M,3))*(pow(r,2))))+(((-1025664)*((pow(M,2))*(pow(r,3))))+(((5122299)*((M)*(pow(r,4))))+((26246633)*(pow(r,5)))))))))))+(((4)*((pow(a,18))*((pow(r,5))*(((669696)*(pow(M,5)))+(((-3526656)*((pow(M,4))*(r)))+(((10900352)*((pow(M,3))*(pow(r,2))))+(((-28907904)*((pow(M,2))*(pow(r,3))))+(((93626463)*((M)*(pow(r,4))))+((295846019)*(pow(r,5)))))))))))+(((pow(a,16))*((pow(r,6))*(((-1245184)*(pow(M,6)))+(((6979584)*((pow(M,5))*(r)))+(((-23193600)*((pow(M,4))*(pow(r,2))))+(((62336000)*((pow(M,3))*(pow(r,3))))+(((-162628800)*((pow(M,2))*(pow(r,4))))+(((543557280)*((M)*(pow(r,5))))+((1851581375)*(pow(r,6)))))))))))+(((pow(a,12))*((pow(r,10))*(((-327680)*(pow(M,6)))+(((2260992)*((pow(M,5))*(r)))+(((-9615360)*((pow(M,4))*(pow(r,2))))+(((33287168)*((pow(M,3))*(pow(r,3))))+(((-110538048)*((pow(M,2))*(pow(r,4))))+(((458949792)*((M)*(pow(r,5))))+((1986794929)*(pow(r,6)))))))))))+((16)*((pow(a,14))*((pow(r,7))*(((16384)*(pow(M,7)))+(((-98304)*((pow(M,6))*(r)))+(((390144)*((pow(M,5))*(pow(r,2))))+(((-1244160)*((pow(M,4))*(pow(r,3))))+(((3523120)*((pow(M,3))*(pow(r,4))))+(((-9971424)*((pow(M,2))*(pow(r,5))))+(((36278431)*((M)*(pow(r,6))))+((137273724)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),14))*(((pow(a,4))+(((17)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((16)*(M))+((9)*(r))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_698(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[698] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0009765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.9511897312113418531323991584789660570410750531734017398944334776513036033630068815595926266925440328"))*((pow(a,-17))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((-1)*((pow(a,2))*((r)*(((3)*(M))+((26)*(r))))))+((pow(r,2))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((28672)*(pow(a,28)))+(((765765)*(pow(r,28)))+(((15015)*((pow(a,2))*((pow(r,25))*(((118)*(M))+((655)*(r))))))+(((7)*((pow(a,26))*((r)*(((149806)*(M))+((132247)*(r))))))+(((6006)*((pow(a,4))*((pow(r,22))*(((72)*(pow(M,2)))+(((3468)*((M)*(r)))+((9703)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((59328)*(pow(M,2)))+(((658552)*((M)*(r)))+((463657)*(pow(r,2))))))))+(((2574)*((pow(a,6))*((pow(r,19))*(((-80)*(pow(M,3)))+(((1800)*((pow(M,2))*(r)))+(((43522)*((M)*(pow(r,2))))+((81959)*(pow(r,3)))))))))+(((14)*((pow(a,22))*((pow(r,3))*(((-84816)*(pow(M,3)))+(((762696)*((pow(M,2))*(r)))+(((5858898)*((M)*(pow(r,2))))+((3923063)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((1024)*(pow(M,4)))+(((-13568)*((pow(M,3))*(r)))+(((157056)*((pow(M,2))*(pow(r,2))))+(((2548168)*((M)*(pow(r,3))))+((3640525)*(pow(r,4))))))))))+(((2)*((pow(a,20))*((pow(r,4))*(((550656)*(pow(M,4)))+(((-3648384)*((pow(M,3))*(r)))+(((20843352)*((pow(M,2))*(pow(r,2))))+(((145435028)*((M)*(pow(r,3))))+((98824877)*(pow(r,4))))))))))+(((13)*((pow(a,10))*((pow(r,13))*(((-9216)*(pow(M,5)))+(((90624)*((pow(M,4))*(r)))+(((-624256)*((pow(M,3))*(pow(r,2))))+(((4993728)*((pow(M,2))*(pow(r,3))))+(((61386822)*((M)*(pow(r,4))))+((71149883)*(pow(r,5)))))))))))+(((3)*((pow(a,18))*((pow(r,5))*(((-252928)*(pow(M,5)))+(((1570304)*((pow(M,4))*(r)))+(((-6575488)*((pow(M,3))*(pow(r,2))))+(((32550976)*((pow(M,2))*(pow(r,3))))+(((229764178)*((M)*(pow(r,4))))+((164438589)*(pow(r,5)))))))))))+(((12)*((pow(a,12))*((pow(r,10))*(((8192)*(pow(M,6)))+(((-64512)*((pow(M,5))*(r)))+(((338560)*((pow(M,4))*(pow(r,2))))+(((-1643712)*((pow(M,3))*(pow(r,3))))+(((10337272)*((pow(M,2))*(pow(r,4))))+(((103254396)*((M)*(pow(r,5))))+((101472161)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((327680)*(pow(M,6)))+(((-2052096)*((pow(M,5))*(r)))+(((8263680)*((pow(M,4))*(pow(r,2))))+(((-30803200)*((pow(M,3))*(pow(r,3))))+(((151944000)*((pow(M,2))*(pow(r,4))))+(((1152787440)*((M)*(pow(r,5))))+((893480315)*(pow(r,6)))))))))))+((4)*((pow(a,14))*((pow(r,7))*(((-16384)*(pow(M,7)))+(((106496)*((pow(M,6))*(r)))+(((-486912)*((pow(M,5))*(pow(r,2))))+(((1921280)*((pow(M,4))*(pow(r,3))))+(((-7632400)*((pow(M,3))*(pow(r,4))))+(((40983240)*((pow(M,2))*(pow(r,5))))+(((349391210)*((M)*(pow(r,6))))+((300822095)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),12))*((((17)*(pow(r,7)))+(((3)*((pow(a,6))*(((2)*(M))+(r))))+(((pow(a,2))*((pow(r,4))*(((62)*(M))+((37)*(r)))))+((pow(a,4))*((r)*(((56)*(pow(M,2)))+(((68)*((M)*(r)))+((23)*(pow(r,2))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_699(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[699] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0004417782738095238095238095238095238095238095238095238095238095238095238095238095238095238095238095238"))*((pow(a,-19))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((((3)*(pow(a,8)))+(((pow(a,6))*((((19)*(M))+((-58)*(r)))*(r)))+(((17)*((pow(r,6))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2)))))))+(((-1)*((pow(a,4))*((pow(r,2))*(((78)*(pow(M,2)))+(((521)*((M)*(r)))+((638)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((56)*(pow(M,3)))+(((2532)*((pow(M,2))*(r)))+(((469)*((M)*(pow(r,2))))+((-1342)*(pow(r,3))))))))))))*((expr[0])*(((((28672)*(pow(a,29)))+(((765765)*((a)*(pow(r,28))))+(((15015)*((pow(a,3))*((pow(r,25))*(((118)*(M))+((655)*(r))))))+(((7)*((pow(a,27))*((r)*(((149806)*(M))+((132247)*(r))))))+(((6006)*((pow(a,5))*((pow(r,22))*(((72)*(pow(M,2)))+(((3468)*((M)*(r)))+((9703)*(pow(r,2))))))))+(((21)*((pow(a,25))*((pow(r,2))*(((59328)*(pow(M,2)))+(((658552)*((M)*(r)))+((463657)*(pow(r,2))))))))+(((2574)*((pow(a,7))*((pow(r,19))*(((-80)*(pow(M,3)))+(((1800)*((pow(M,2))*(r)))+(((43522)*((M)*(pow(r,2))))+((81959)*(pow(r,3)))))))))+(((14)*((pow(a,23))*((pow(r,3))*(((-84816)*(pow(M,3)))+(((762696)*((pow(M,2))*(r)))+(((5858898)*((M)*(pow(r,2))))+((3923063)*(pow(r,3)))))))))+(((143)*((pow(a,9))*((pow(r,16))*(((1024)*(pow(M,4)))+(((-13568)*((pow(M,3))*(r)))+(((157056)*((pow(M,2))*(pow(r,2))))+(((2548168)*((M)*(pow(r,3))))+((3640525)*(pow(r,4))))))))))+(((2)*((pow(a,21))*((pow(r,4))*(((550656)*(pow(M,4)))+(((-3648384)*((pow(M,3))*(r)))+(((20843352)*((pow(M,2))*(pow(r,2))))+(((145435028)*((M)*(pow(r,3))))+((98824877)*(pow(r,4))))))))))+(((13)*((pow(a,11))*((pow(r,13))*(((-9216)*(pow(M,5)))+(((90624)*((pow(M,4))*(r)))+(((-624256)*((pow(M,3))*(pow(r,2))))+(((4993728)*((pow(M,2))*(pow(r,3))))+(((61386822)*((M)*(pow(r,4))))+((71149883)*(pow(r,5)))))))))))+(((3)*((pow(a,19))*((pow(r,5))*(((-252928)*(pow(M,5)))+(((1570304)*((pow(M,4))*(r)))+(((-6575488)*((pow(M,3))*(pow(r,2))))+(((32550976)*((pow(M,2))*(pow(r,3))))+(((229764178)*((M)*(pow(r,4))))+((164438589)*(pow(r,5)))))))))))+(((12)*((pow(a,13))*((pow(r,10))*(((8192)*(pow(M,6)))+(((-64512)*((pow(M,5))*(r)))+(((338560)*((pow(M,4))*(pow(r,2))))+(((-1643712)*((pow(M,3))*(pow(r,3))))+(((10337272)*((pow(M,2))*(pow(r,4))))+(((103254396)*((M)*(pow(r,5))))+((101472161)*(pow(r,6))))))))))))+(((pow(a,17))*((pow(r,6))*(((327680)*(pow(M,6)))+(((-2052096)*((pow(M,5))*(r)))+(((8263680)*((pow(M,4))*(pow(r,2))))+(((-30803200)*((pow(M,3))*(pow(r,3))))+(((151944000)*((pow(M,2))*(pow(r,4))))+(((1152787440)*((M)*(pow(r,5))))+((893480315)*(pow(r,6)))))))))))+((4)*((pow(a,15))*((pow(r,7))*(((-16384)*(pow(M,7)))+(((106496)*((pow(M,6))*(r)))+(((-486912)*((pow(M,5))*(pow(r,2))))+(((1921280)*((pow(M,4))*(pow(r,3))))+(((-7632400)*((pow(M,3))*(pow(r,4))))+(((40983240)*((pow(M,2))*(pow(r,5))))+(((349391210)*((M)*(pow(r,6))))+((300822095)*(pow(r,7)))))))))))))))))))))))))))*(expr[0]))+((-45045)*((pow((pow(a,2))+(pow(r,2)),12))*((((3)*(pow(a,4)))+(((17)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((7)*(M))+((5)*(r))))))))*((expr[1])*((expr[2])*(expr[3]))))))))))))).cast<double>());
}
