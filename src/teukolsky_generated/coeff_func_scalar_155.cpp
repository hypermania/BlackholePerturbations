
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_775(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[775] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.000007629394531250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-21))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-11))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((3)*(pow(a,12)))+(((183)*((pow(a,10))*((M)*(r))))+(((pow(a,8))*((pow(r,2))*(((326)*(pow(M,2)))+(((-5629)*((M)*(r)))+((-3523)*(pow(r,2)))))))+(((323)*((pow(r,10))*(((2)*(pow(M,2)))+(((109)*((M)*(r)))+((-55)*(pow(r,2)))))))+(((17)*((pow(a,2))*((pow(r,7))*(((128)*(pow(M,3)))+(((7064)*((pow(M,2))*(r)))+(((1219)*((M)*(pow(r,2))))+((-3104)*(pow(r,3)))))))))+(((-2)*((pow(a,6))*((pow(r,3))*(((1152)*(pow(M,3)))+(((7476)*((pow(M,2))*(r)))+(((22685)*((M)*(pow(r,2))))+((12136)*(pow(r,3)))))))))+((pow(a,4))*((pow(r,4))*(((1792)*(pow(M,4)))+(((100224)*((pow(M,3))*(r)))+(((88036)*((pow(M,2))*(pow(r,2))))+(((-54042)*((M)*(pow(r,3))))+((-55755)*(pow(r,4)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((1699873)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((1021020)*((pow(a,2))*((pow(r,25))*(((29)*(M))+((185)*(r))))))+(((28)*((pow(a,26))*((r)*(((733261)*(M))+((1216567)*(r))))))+(((3003)*((pow(a,4))*((pow(r,22))*(((2016)*(pow(M,2)))+(((116304)*((M)*(r)))+((377309)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((660960)*(pow(M,2)))+(((12393136)*((M)*(r)))+((13886285)*(pow(r,2))))))))+(((10296)*((pow(a,6))*((pow(r,19))*(((-240)*(pow(M,3)))+(((6240)*((pow(M,2))*(r)))+(((183157)*((M)*(pow(r,2))))+((404014)*(pow(r,3)))))))))+(((8)*((pow(a,22))*((pow(r,3))*(((-1230480)*(pow(M,3)))+(((15504480)*((pow(M,2))*(r)))+(((187545651)*((M)*(pow(r,2))))+((182485598)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((10240)*(pow(M,4)))+(((-158720)*((pow(M,3))*(r)))+(((2153760)*((pow(M,2))*(pow(r,2))))+(((43090000)*((M)*(pow(r,3))))+((72960109)*(pow(r,4))))))))))+(((pow(a,20))*((pow(r,4))*(((7219200)*(pow(M,4)))+(((-64312320)*((pow(M,3))*(r)))+(((502544160)*((pow(M,2))*(pow(r,2))))+(((5210077360)*((M)*(pow(r,3))))+((4853488477)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,13))*(((-18432)*(pow(M,5)))+(((215040)*((pow(M,4))*(r)))+(((-1770880)*((pow(M,3))*(pow(r,2))))+(((16897920)*((pow(M,2))*(pow(r,3))))+(((260914185)*((M)*(pow(r,4))))+((363339431)*(pow(r,5)))))))))))+(((12)*((pow(a,18))*((pow(r,5))*(((-342016)*(pow(M,5)))+(((2754560)*((pow(M,4))*(r)))+(((-15401600)*((pow(M,3))*(pow(r,2))))+(((101296000)*((pow(M,2))*(pow(r,3))))+(((1012683175)*((M)*(pow(r,4))))+((953600375)*(pow(r,5)))))))))))+(((3)*((pow(a,12))*((pow(r,10))*(((196608)*(pow(M,6)))+(((-1867776)*((pow(M,5))*(r)))+(((12052480)*((pow(M,4))*(pow(r,2))))+(((-71910400)*((pow(M,3))*(pow(r,3))))+(((551047360)*((pow(M,2))*(pow(r,4))))+(((7067231136)*((M)*(pow(r,5))))+((8481013233)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((1507328)*(pow(M,6)))+(((-11894784)*((pow(M,5))*(r)))+(((62638080)*((pow(M,4))*(pow(r,2))))+(((-305843200)*((pow(M,3))*(pow(r,3))))+(((1943217600)*((pow(M,2))*(pow(r,4))))+(((20075270880)*((M)*(pow(r,5))))+((19850429165)*(pow(r,6)))))))))))+((16)*((pow(a,14))*((pow(r,7))*(((-16384)*(pow(M,7)))+(((131072)*((pow(M,6))*(r)))+(((-777216)*((pow(M,5))*(pow(r,2))))+(((3952640)*((pow(M,4))*(pow(r,3))))+(((-19960240)*((pow(M,3))*(pow(r,4))))+(((134018688)*((pow(M,2))*(pow(r,5))))+(((1506400133)*((M)*(pow(r,6))))+((1615109552)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),12))*((((3)*(pow(a,8)))+(((323)*(pow(r,8)))+(((12)*((pow(a,6))*((r)*(((16)*(M))+((9)*(r))))))+(((68)*((pow(a,2))*((pow(r,5))*(((16)*(M))+((11)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((448)*(pow(M,2)))+(((640)*((M)*(r)))+((265)*(pow(r,2))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_776(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[776] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.000007629394531250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-19))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((3)*(pow(a,8)))+(((323)*(pow(r,8)))+(((12)*((pow(a,6))*((r)*(((16)*(M))+((9)*(r))))))+(((68)*((pow(a,2))*((pow(r,5))*(((16)*(M))+((11)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((448)*(pow(M,2)))+(((640)*((M)*(r)))+((265)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((1699873)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((1021020)*((pow(a,2))*((pow(r,25))*(((29)*(M))+((185)*(r))))))+(((28)*((pow(a,26))*((r)*(((733261)*(M))+((1216567)*(r))))))+(((3003)*((pow(a,4))*((pow(r,22))*(((2016)*(pow(M,2)))+(((116304)*((M)*(r)))+((377309)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((660960)*(pow(M,2)))+(((12393136)*((M)*(r)))+((13886285)*(pow(r,2))))))))+(((10296)*((pow(a,6))*((pow(r,19))*(((-240)*(pow(M,3)))+(((6240)*((pow(M,2))*(r)))+(((183157)*((M)*(pow(r,2))))+((404014)*(pow(r,3)))))))))+(((8)*((pow(a,22))*((pow(r,3))*(((-1230480)*(pow(M,3)))+(((15504480)*((pow(M,2))*(r)))+(((187545651)*((M)*(pow(r,2))))+((182485598)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((10240)*(pow(M,4)))+(((-158720)*((pow(M,3))*(r)))+(((2153760)*((pow(M,2))*(pow(r,2))))+(((43090000)*((M)*(pow(r,3))))+((72960109)*(pow(r,4))))))))))+(((pow(a,20))*((pow(r,4))*(((7219200)*(pow(M,4)))+(((-64312320)*((pow(M,3))*(r)))+(((502544160)*((pow(M,2))*(pow(r,2))))+(((5210077360)*((M)*(pow(r,3))))+((4853488477)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,13))*(((-18432)*(pow(M,5)))+(((215040)*((pow(M,4))*(r)))+(((-1770880)*((pow(M,3))*(pow(r,2))))+(((16897920)*((pow(M,2))*(pow(r,3))))+(((260914185)*((M)*(pow(r,4))))+((363339431)*(pow(r,5)))))))))))+(((12)*((pow(a,18))*((pow(r,5))*(((-342016)*(pow(M,5)))+(((2754560)*((pow(M,4))*(r)))+(((-15401600)*((pow(M,3))*(pow(r,2))))+(((101296000)*((pow(M,2))*(pow(r,3))))+(((1012683175)*((M)*(pow(r,4))))+((953600375)*(pow(r,5)))))))))))+(((3)*((pow(a,12))*((pow(r,10))*(((196608)*(pow(M,6)))+(((-1867776)*((pow(M,5))*(r)))+(((12052480)*((pow(M,4))*(pow(r,2))))+(((-71910400)*((pow(M,3))*(pow(r,3))))+(((551047360)*((pow(M,2))*(pow(r,4))))+(((7067231136)*((M)*(pow(r,5))))+((8481013233)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((1507328)*(pow(M,6)))+(((-11894784)*((pow(M,5))*(r)))+(((62638080)*((pow(M,4))*(pow(r,2))))+(((-305843200)*((pow(M,3))*(pow(r,3))))+(((1943217600)*((pow(M,2))*(pow(r,4))))+(((20075270880)*((M)*(pow(r,5))))+((19850429165)*(pow(r,6)))))))))))+((16)*((pow(a,14))*((pow(r,7))*(((-16384)*(pow(M,7)))+(((131072)*((pow(M,6))*(r)))+(((-777216)*((pow(M,5))*(pow(r,2))))+(((3952640)*((pow(M,4))*(pow(r,3))))+(((-19960240)*((pow(M,3))*(pow(r,4))))+(((134018688)*((pow(M,2))*(pow(r,5))))+(((1506400133)*((M)*(pow(r,6))))+((1615109552)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),12))*((((3)*(pow(a,8)))+(((323)*(pow(r,8)))+(((12)*((pow(a,6))*((r)*(((16)*(M))+((9)*(r))))))+(((68)*((pow(a,2))*((pow(r,5))*(((16)*(M))+((11)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((448)*(pow(M,2)))+(((640)*((M)*(r)))+((265)*(pow(r,2))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_777(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[777] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.000003814697265625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-21))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-11))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((((3)*(pow(a,8)))+(((323)*(pow(r,8)))+(((12)*((pow(a,6))*((r)*(((16)*(M))+((9)*(r))))))+(((68)*((pow(a,2))*((pow(r,5))*(((16)*(M))+((11)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((448)*(pow(M,2)))+(((640)*((M)*(r)))+((265)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((1699873)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((1021020)*((pow(a,2))*((pow(r,25))*(((29)*(M))+((185)*(r))))))+(((28)*((pow(a,26))*((r)*(((733261)*(M))+((1216567)*(r))))))+(((3003)*((pow(a,4))*((pow(r,22))*(((2016)*(pow(M,2)))+(((116304)*((M)*(r)))+((377309)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((660960)*(pow(M,2)))+(((12393136)*((M)*(r)))+((13886285)*(pow(r,2))))))))+(((10296)*((pow(a,6))*((pow(r,19))*(((-240)*(pow(M,3)))+(((6240)*((pow(M,2))*(r)))+(((183157)*((M)*(pow(r,2))))+((404014)*(pow(r,3)))))))))+(((8)*((pow(a,22))*((pow(r,3))*(((-1230480)*(pow(M,3)))+(((15504480)*((pow(M,2))*(r)))+(((187545651)*((M)*(pow(r,2))))+((182485598)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((10240)*(pow(M,4)))+(((-158720)*((pow(M,3))*(r)))+(((2153760)*((pow(M,2))*(pow(r,2))))+(((43090000)*((M)*(pow(r,3))))+((72960109)*(pow(r,4))))))))))+(((pow(a,20))*((pow(r,4))*(((7219200)*(pow(M,4)))+(((-64312320)*((pow(M,3))*(r)))+(((502544160)*((pow(M,2))*(pow(r,2))))+(((5210077360)*((M)*(pow(r,3))))+((4853488477)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,13))*(((-18432)*(pow(M,5)))+(((215040)*((pow(M,4))*(r)))+(((-1770880)*((pow(M,3))*(pow(r,2))))+(((16897920)*((pow(M,2))*(pow(r,3))))+(((260914185)*((M)*(pow(r,4))))+((363339431)*(pow(r,5)))))))))))+(((12)*((pow(a,18))*((pow(r,5))*(((-342016)*(pow(M,5)))+(((2754560)*((pow(M,4))*(r)))+(((-15401600)*((pow(M,3))*(pow(r,2))))+(((101296000)*((pow(M,2))*(pow(r,3))))+(((1012683175)*((M)*(pow(r,4))))+((953600375)*(pow(r,5)))))))))))+(((3)*((pow(a,12))*((pow(r,10))*(((196608)*(pow(M,6)))+(((-1867776)*((pow(M,5))*(r)))+(((12052480)*((pow(M,4))*(pow(r,2))))+(((-71910400)*((pow(M,3))*(pow(r,3))))+(((551047360)*((pow(M,2))*(pow(r,4))))+(((7067231136)*((M)*(pow(r,5))))+((8481013233)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((1507328)*(pow(M,6)))+(((-11894784)*((pow(M,5))*(r)))+(((62638080)*((pow(M,4))*(pow(r,2))))+(((-305843200)*((pow(M,3))*(pow(r,3))))+(((1943217600)*((pow(M,2))*(pow(r,4))))+(((20075270880)*((M)*(pow(r,5))))+((19850429165)*(pow(r,6)))))))))))+((16)*((pow(a,14))*((pow(r,7))*(((-16384)*(pow(M,7)))+(((131072)*((pow(M,6))*(r)))+(((-777216)*((pow(M,5))*(pow(r,2))))+(((3952640)*((pow(M,4))*(pow(r,3))))+(((-19960240)*((pow(M,3))*(pow(r,4))))+(((134018688)*((pow(M,2))*(pow(r,5))))+(((1506400133)*((M)*(pow(r,6))))+((1615109552)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),12))*((((3)*(pow(a,8)))+(((323)*(pow(r,8)))+(((12)*((pow(a,6))*((r)*(((16)*(M))+((9)*(r))))))+(((68)*((pow(a,2))*((pow(r,5))*(((16)*(M))+((11)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((448)*(pow(M,2)))+(((640)*((M)*(r)))+((265)*(pow(r,2))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_778(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[778] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.00009155273437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-20))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-11))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((3)*(pow(a,8)))+(((323)*(pow(r,8)))+(((12)*((pow(a,6))*((r)*(((16)*(M))+((9)*(r))))))+(((68)*((pow(a,2))*((pow(r,5))*(((16)*(M))+((11)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((448)*(pow(M,2)))+(((640)*((M)*(r)))+((265)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((1699873)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((1021020)*((pow(a,2))*((pow(r,25))*(((29)*(M))+((185)*(r))))))+(((28)*((pow(a,26))*((r)*(((733261)*(M))+((1216567)*(r))))))+(((3003)*((pow(a,4))*((pow(r,22))*(((2016)*(pow(M,2)))+(((116304)*((M)*(r)))+((377309)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((660960)*(pow(M,2)))+(((12393136)*((M)*(r)))+((13886285)*(pow(r,2))))))))+(((10296)*((pow(a,6))*((pow(r,19))*(((-240)*(pow(M,3)))+(((6240)*((pow(M,2))*(r)))+(((183157)*((M)*(pow(r,2))))+((404014)*(pow(r,3)))))))))+(((8)*((pow(a,22))*((pow(r,3))*(((-1230480)*(pow(M,3)))+(((15504480)*((pow(M,2))*(r)))+(((187545651)*((M)*(pow(r,2))))+((182485598)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((10240)*(pow(M,4)))+(((-158720)*((pow(M,3))*(r)))+(((2153760)*((pow(M,2))*(pow(r,2))))+(((43090000)*((M)*(pow(r,3))))+((72960109)*(pow(r,4))))))))))+(((pow(a,20))*((pow(r,4))*(((7219200)*(pow(M,4)))+(((-64312320)*((pow(M,3))*(r)))+(((502544160)*((pow(M,2))*(pow(r,2))))+(((5210077360)*((M)*(pow(r,3))))+((4853488477)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,13))*(((-18432)*(pow(M,5)))+(((215040)*((pow(M,4))*(r)))+(((-1770880)*((pow(M,3))*(pow(r,2))))+(((16897920)*((pow(M,2))*(pow(r,3))))+(((260914185)*((M)*(pow(r,4))))+((363339431)*(pow(r,5)))))))))))+(((12)*((pow(a,18))*((pow(r,5))*(((-342016)*(pow(M,5)))+(((2754560)*((pow(M,4))*(r)))+(((-15401600)*((pow(M,3))*(pow(r,2))))+(((101296000)*((pow(M,2))*(pow(r,3))))+(((1012683175)*((M)*(pow(r,4))))+((953600375)*(pow(r,5)))))))))))+(((3)*((pow(a,12))*((pow(r,10))*(((196608)*(pow(M,6)))+(((-1867776)*((pow(M,5))*(r)))+(((12052480)*((pow(M,4))*(pow(r,2))))+(((-71910400)*((pow(M,3))*(pow(r,3))))+(((551047360)*((pow(M,2))*(pow(r,4))))+(((7067231136)*((M)*(pow(r,5))))+((8481013233)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((1507328)*(pow(M,6)))+(((-11894784)*((pow(M,5))*(r)))+(((62638080)*((pow(M,4))*(pow(r,2))))+(((-305843200)*((pow(M,3))*(pow(r,3))))+(((1943217600)*((pow(M,2))*(pow(r,4))))+(((20075270880)*((M)*(pow(r,5))))+((19850429165)*(pow(r,6)))))))))))+((16)*((pow(a,14))*((pow(r,7))*(((-16384)*(pow(M,7)))+(((131072)*((pow(M,6))*(r)))+(((-777216)*((pow(M,5))*(pow(r,2))))+(((3952640)*((pow(M,4))*(pow(r,3))))+(((-19960240)*((pow(M,3))*(pow(r,4))))+(((134018688)*((pow(M,2))*(pow(r,5))))+(((1506400133)*((M)*(pow(r,6))))+((1615109552)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),12))*((((3)*(pow(a,8)))+(((323)*(pow(r,8)))+(((12)*((pow(a,6))*((r)*(((16)*(M))+((9)*(r))))))+(((68)*((pow(a,2))*((pow(r,5))*(((16)*(M))+((11)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((448)*(pow(M,2)))+(((640)*((M)*(r)))+((265)*(pow(r,2))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_779(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[779] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00009765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-17))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,4)))+(((-1)*((pow(a,2))*((r)*(((6)*(M))+((83)*(r))))))+((2)*((pow(r,2))*(((2)*(pow(M,2)))+(((109)*((M)*(r)))+((-55)*(pow(r,2)))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((114688)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((255255)*((pow(a,2))*((pow(r,25))*(((206)*(M))+((695)*(r))))))+(((7)*((pow(a,26))*((r)*(((1052134)*(M))+((755443)*(r))))))+(((6006)*((pow(a,4))*((pow(r,22))*(((8508)*(pow(M,2)))+(((96552)*((M)*(r)))+((165667)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((1793192)*(pow(M,2)))+(((6001728)*((M)*(r)))+((3224903)*(pow(r,2))))))))+(((2574)*((pow(a,6))*((pow(r,19))*(((2400)*(pow(M,3)))+(((194920)*((pow(M,2))*(r)))+(((1131698)*((M)*(pow(r,2))))+((1320061)*(pow(r,3)))))))))+(((70)*((pow(a,22))*((pow(r,3))*(((186336)*(pow(M,3)))+(((5659080)*((pow(M,2))*(r)))+(((13001370)*((M)*(pow(r,2))))+((6336865)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((-12800)*(pow(M,4)))+(((371200)*((pow(M,3))*(r)))+(((15477720)*((pow(M,2))*(pow(r,2))))+(((61573120)*((M)*(pow(r,3))))+((55100059)*(pow(r,4))))))))))+(((10)*((pow(a,20))*((pow(r,4))*(((-578304)*(pow(M,4)))+(((9278208)*((pow(M,3))*(r)))+(((186197940)*((pow(M,2))*(pow(r,2))))+(((378635800)*((M)*(pow(r,3))))+((180690325)*(pow(r,4))))))))))+(((65)*((pow(a,10))*((pow(r,13))*(((12288)*(pow(M,5)))+(((-199680)*((pow(M,4))*(r)))+(((3086080)*((pow(M,3))*(pow(r,2))))+(((88851264)*((pow(M,2))*(pow(r,3))))+(((274061382)*((M)*(pow(r,4))))+((201488035)*(pow(r,5)))))))))))+(((3)*((pow(a,18))*((pow(r,5))*(((864256)*(pow(M,5)))+(((-9405440)*((pow(M,4))*(r)))+(((96912640)*((pow(M,3))*(pow(r,2))))+(((1719012800)*((pow(M,2))*(pow(r,3))))+(((3424686650)*((M)*(pow(r,4))))+((1673282765)*(pow(r,5)))))))))))+(((60)*((pow(a,12))*((pow(r,10))*(((-6144)*(pow(M,6)))+(((71680)*((pow(M,5))*(r)))+(((-647040)*((pow(M,4))*(pow(r,2))))+(((7262080)*((pow(M,3))*(pow(r,3))))+(((164470188)*((pow(M,2))*(pow(r,4))))+(((422894584)*((M)*(pow(r,5))))+((267435189)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((-827392)*(pow(M,6)))+(((7888896)*((pow(M,5))*(r)))+(((-57438720)*((pow(M,4))*(pow(r,2))))+(((524372480)*((pow(M,3))*(pow(r,3))))+(((9330483600)*((pow(M,2))*(pow(r,4))))+(((19336000320)*((M)*(pow(r,5))))+((9997277465)*(pow(r,6)))))))))))+((4)*((pow(a,14))*((pow(r,7))*(((32768)*(pow(M,7)))+(((-299008)*((pow(M,6))*(r)))+(((2199552)*((pow(M,5))*(pow(r,2))))+(((-15669760)*((pow(M,4))*(pow(r,3))))+(((148851680)*((pow(M,3))*(pow(r,4))))+(((2883128520)*((pow(M,2))*(pow(r,5))))+(((6508958330)*((M)*(pow(r,6))))+((3666576305)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),10))*((((323)*(pow(r,11)))+(((15)*((pow(a,10))*(((2)*(M))+(r))))+(((17)*((pow(a,2))*((pow(r,8))*(((94)*(M))+((67)*(r))))))+(((5)*((pow(a,8))*((r)*(((112)*(pow(M,2)))+(((136)*((M)*(r)))+((43)*(pow(r,2))))))))+(((2)*((pow(a,4))*((pow(r,5))*(((1288)*(pow(M,2)))+(((1908)*((M)*(r)))+((747)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((672)*(pow(M,3)))+(((1568)*((pow(M,2))*(r)))+(((1434)*((M)*(pow(r,2))))+((439)*(pow(r,3))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

}
