
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_605(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[605] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00003051757812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.4023739080814782462923342152765626523469856907803249918944935898670510185305687872045398353668950695"))*((pow(a,-19))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((pow(a,4))+(((15)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((7)*(M))+((4)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((1699873)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((1021020)*((pow(a,2))*((pow(r,25))*(((29)*(M))+((185)*(r))))))+(((28)*((pow(a,26))*((r)*(((733261)*(M))+((1216567)*(r))))))+(((3003)*((pow(a,4))*((pow(r,22))*(((2016)*(pow(M,2)))+(((116304)*((M)*(r)))+((377309)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((660960)*(pow(M,2)))+(((12393136)*((M)*(r)))+((13886285)*(pow(r,2))))))))+(((10296)*((pow(a,6))*((pow(r,19))*(((-240)*(pow(M,3)))+(((6240)*((pow(M,2))*(r)))+(((183157)*((M)*(pow(r,2))))+((404014)*(pow(r,3)))))))))+(((8)*((pow(a,22))*((pow(r,3))*(((-1230480)*(pow(M,3)))+(((15504480)*((pow(M,2))*(r)))+(((187545651)*((M)*(pow(r,2))))+((182485598)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((10240)*(pow(M,4)))+(((-158720)*((pow(M,3))*(r)))+(((2153760)*((pow(M,2))*(pow(r,2))))+(((43090000)*((M)*(pow(r,3))))+((72960109)*(pow(r,4))))))))))+(((pow(a,20))*((pow(r,4))*(((7219200)*(pow(M,4)))+(((-64312320)*((pow(M,3))*(r)))+(((502544160)*((pow(M,2))*(pow(r,2))))+(((5210077360)*((M)*(pow(r,3))))+((4853488477)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,13))*(((-18432)*(pow(M,5)))+(((215040)*((pow(M,4))*(r)))+(((-1770880)*((pow(M,3))*(pow(r,2))))+(((16897920)*((pow(M,2))*(pow(r,3))))+(((260914185)*((M)*(pow(r,4))))+((363339431)*(pow(r,5)))))))))))+(((12)*((pow(a,18))*((pow(r,5))*(((-342016)*(pow(M,5)))+(((2754560)*((pow(M,4))*(r)))+(((-15401600)*((pow(M,3))*(pow(r,2))))+(((101296000)*((pow(M,2))*(pow(r,3))))+(((1012683175)*((M)*(pow(r,4))))+((953600375)*(pow(r,5)))))))))))+(((3)*((pow(a,12))*((pow(r,10))*(((196608)*(pow(M,6)))+(((-1867776)*((pow(M,5))*(r)))+(((12052480)*((pow(M,4))*(pow(r,2))))+(((-71910400)*((pow(M,3))*(pow(r,3))))+(((551047360)*((pow(M,2))*(pow(r,4))))+(((7067231136)*((M)*(pow(r,5))))+((8481013233)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((1507328)*(pow(M,6)))+(((-11894784)*((pow(M,5))*(r)))+(((62638080)*((pow(M,4))*(pow(r,2))))+(((-305843200)*((pow(M,3))*(pow(r,3))))+(((1943217600)*((pow(M,2))*(pow(r,4))))+(((20075270880)*((M)*(pow(r,5))))+((19850429165)*(pow(r,6)))))))))))+((16)*((pow(a,14))*((pow(r,7))*(((-16384)*(pow(M,7)))+(((131072)*((pow(M,6))*(r)))+(((-777216)*((pow(M,5))*(pow(r,2))))+(((3952640)*((pow(M,4))*(pow(r,3))))+(((-19960240)*((pow(M,3))*(pow(r,4))))+(((134018688)*((pow(M,2))*(pow(r,5))))+(((1506400133)*((M)*(pow(r,6))))+((1615109552)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),12))*((((3)*(pow(a,8)))+(((323)*(pow(r,8)))+(((12)*((pow(a,6))*((r)*(((16)*(M))+((9)*(r))))))+(((68)*((pow(a,2))*((pow(r,5))*(((16)*(M))+((11)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((448)*(pow(M,2)))+(((640)*((M)*(r)))+((265)*(pow(r,2))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_606(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[606] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.0002441406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.207121724244434738877002645829687957040957072340974975683480769601153055591706361613619506100685209"))*((pow(a,-18))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((15)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((7)*(M))+((4)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((1699873)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((1021020)*((pow(a,2))*((pow(r,25))*(((29)*(M))+((185)*(r))))))+(((28)*((pow(a,26))*((r)*(((733261)*(M))+((1216567)*(r))))))+(((3003)*((pow(a,4))*((pow(r,22))*(((2016)*(pow(M,2)))+(((116304)*((M)*(r)))+((377309)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((660960)*(pow(M,2)))+(((12393136)*((M)*(r)))+((13886285)*(pow(r,2))))))))+(((10296)*((pow(a,6))*((pow(r,19))*(((-240)*(pow(M,3)))+(((6240)*((pow(M,2))*(r)))+(((183157)*((M)*(pow(r,2))))+((404014)*(pow(r,3)))))))))+(((8)*((pow(a,22))*((pow(r,3))*(((-1230480)*(pow(M,3)))+(((15504480)*((pow(M,2))*(r)))+(((187545651)*((M)*(pow(r,2))))+((182485598)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((10240)*(pow(M,4)))+(((-158720)*((pow(M,3))*(r)))+(((2153760)*((pow(M,2))*(pow(r,2))))+(((43090000)*((M)*(pow(r,3))))+((72960109)*(pow(r,4))))))))))+(((pow(a,20))*((pow(r,4))*(((7219200)*(pow(M,4)))+(((-64312320)*((pow(M,3))*(r)))+(((502544160)*((pow(M,2))*(pow(r,2))))+(((5210077360)*((M)*(pow(r,3))))+((4853488477)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,13))*(((-18432)*(pow(M,5)))+(((215040)*((pow(M,4))*(r)))+(((-1770880)*((pow(M,3))*(pow(r,2))))+(((16897920)*((pow(M,2))*(pow(r,3))))+(((260914185)*((M)*(pow(r,4))))+((363339431)*(pow(r,5)))))))))))+(((12)*((pow(a,18))*((pow(r,5))*(((-342016)*(pow(M,5)))+(((2754560)*((pow(M,4))*(r)))+(((-15401600)*((pow(M,3))*(pow(r,2))))+(((101296000)*((pow(M,2))*(pow(r,3))))+(((1012683175)*((M)*(pow(r,4))))+((953600375)*(pow(r,5)))))))))))+(((3)*((pow(a,12))*((pow(r,10))*(((196608)*(pow(M,6)))+(((-1867776)*((pow(M,5))*(r)))+(((12052480)*((pow(M,4))*(pow(r,2))))+(((-71910400)*((pow(M,3))*(pow(r,3))))+(((551047360)*((pow(M,2))*(pow(r,4))))+(((7067231136)*((M)*(pow(r,5))))+((8481013233)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((1507328)*(pow(M,6)))+(((-11894784)*((pow(M,5))*(r)))+(((62638080)*((pow(M,4))*(pow(r,2))))+(((-305843200)*((pow(M,3))*(pow(r,3))))+(((1943217600)*((pow(M,2))*(pow(r,4))))+(((20075270880)*((M)*(pow(r,5))))+((19850429165)*(pow(r,6)))))))))))+((16)*((pow(a,14))*((pow(r,7))*(((-16384)*(pow(M,7)))+(((131072)*((pow(M,6))*(r)))+(((-777216)*((pow(M,5))*(pow(r,2))))+(((3952640)*((pow(M,4))*(pow(r,3))))+(((-19960240)*((pow(M,3))*(pow(r,4))))+(((134018688)*((pow(M,2))*(pow(r,5))))+(((1506400133)*((M)*(pow(r,6))))+((1615109552)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),12))*((((3)*(pow(a,8)))+(((323)*(pow(r,8)))+(((12)*((pow(a,6))*((r)*(((16)*(M))+((9)*(r))))))+(((68)*((pow(a,2))*((pow(r,5))*(((16)*(M))+((11)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((448)*(pow(M,2)))+(((640)*((M)*(r)))+((265)*(pow(r,2))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_607(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[607] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0003906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("2.915475947422650235437076438772791538260699167442985977225003372433905030998356313832620163226517699"))*((pow(a,-15))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,4)))+(((-3)*((pow(a,2))*((r)*(((2)*(M))+((15)*(r))))))+((2)*((pow(r,2))*(((2)*(pow(M,2)))+(((71)*((M)*(r)))+((-36)*(pow(r,2)))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((10240)*(pow(a,24)))+(((225225)*(pow(r,24)))+(((15015)*((pow(a,2))*((pow(r,21))*(((34)*(M))+((163)*(r))))))+(((5)*((pow(a,22))*((r)*(((63902)*(M))+((56527)*(r))))))+(((15015)*((pow(a,4))*((pow(r,18))*(((8)*(pow(M,2)))+(((332)*((M)*(r)))+((805)*(pow(r,2))))))))+(((5)*((pow(a,20))*((pow(r,2))*(((61208)*(pow(M,2)))+(((700228)*((M)*(r)))+((501931)*(pow(r,2))))))))+(((429)*((pow(a,6))*((pow(r,15))*(((-128)*(pow(M,3)))+(((2432)*((pow(M,2))*(r)))+(((50934)*((M)*(pow(r,2))))+((83491)*(pow(r,3)))))))))+(((pow(a,18))*((pow(r,3))*(((-235648)*(pow(M,3)))+(((2094848)*((pow(M,2))*(r)))+(((16955574)*((M)*(pow(r,2))))+((11774969)*(pow(r,3))))))))+(((286)*((pow(a,8))*((pow(r,12))*(((128)*(pow(M,4)))+(((-1408)*((pow(M,3))*(r)))+(((13968)*((pow(M,2))*(pow(r,2))))+(((197864)*((M)*(pow(r,3))))+((247499)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((164608)*(pow(M,4)))+(((-1084672)*((pow(M,3))*(r)))+(((6341728)*((pow(M,2))*(pow(r,2))))+(((48027056)*((M)*(pow(r,3))))+((34616509)*(pow(r,4)))))))))+(((26)*((pow(a,10))*((pow(r,9))*(((-1024)*(pow(M,5)))+(((8192)*((pow(M,4))*(r)))+(((-48320)*((pow(M,3))*(pow(r,2))))+(((339200)*((pow(M,2))*(pow(r,3))))+(((3685670)*((M)*(pow(r,4))))+((3769765)*(pow(r,5)))))))))))+(((2)*((pow(a,14))*((pow(r,5))*(((-37888)*(pow(M,5)))+(((234496)*((pow(M,4))*(r)))+(((-1039040)*((pow(M,3))*(pow(r,2))))+(((5551040)*((pow(M,2))*(pow(r,3))))+(((44204150)*((M)*(pow(r,4))))+((34514975)*(pow(r,5)))))))))))+((2)*((pow(a,12))*((pow(r,6))*(((8192)*(pow(M,6)))+(((-51200)*((pow(M,5))*(r)))+(((240384)*((pow(M,4))*(pow(r,2))))+(((-1068800)*((pow(M,3))*(pow(r,3))))+(((6148360)*((pow(M,2))*(pow(r,4))))+(((55384860)*((M)*(pow(r,5))))+((48566555)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),10))*((((5)*(pow(r,7)))+(((pow(a,6))*(((2)*(M))+(r)))+(((pow(a,2))*((pow(r,4))*(((18)*(M))+((11)*(r)))))+((pow(a,4))*((r)*(((16)*(pow(M,2)))+(((20)*((M)*(r)))+((7)*(pow(r,2))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_608(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[608] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.001660156250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-17))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((((2)*(pow(a,8)))+(((pow(a,6))*((((10)*(M))+((-33)*(r)))*(r)))+(((10)*((pow(r,6))*(((2)*(pow(M,2)))+(((71)*((M)*(r)))+((-36)*(pow(r,2)))))))+(((-2)*((pow(a,4))*((pow(r,2))*(((22)*(pow(M,2)))+(((127)*((M)*(r)))+((166)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((32)*(pow(M,3)))+(((1160)*((pow(M,2))*(r)))+(((246)*((M)*(pow(r,2))))+((-657)*(pow(r,3))))))))))))*((expr[0])*(((((10240)*(pow(a,25)))+(((225225)*((a)*(pow(r,24))))+(((15015)*((pow(a,3))*((pow(r,21))*(((34)*(M))+((163)*(r))))))+(((5)*((pow(a,23))*((r)*(((63902)*(M))+((56527)*(r))))))+(((15015)*((pow(a,5))*((pow(r,18))*(((8)*(pow(M,2)))+(((332)*((M)*(r)))+((805)*(pow(r,2))))))))+(((5)*((pow(a,21))*((pow(r,2))*(((61208)*(pow(M,2)))+(((700228)*((M)*(r)))+((501931)*(pow(r,2))))))))+(((429)*((pow(a,7))*((pow(r,15))*(((-128)*(pow(M,3)))+(((2432)*((pow(M,2))*(r)))+(((50934)*((M)*(pow(r,2))))+((83491)*(pow(r,3)))))))))+(((pow(a,19))*((pow(r,3))*(((-235648)*(pow(M,3)))+(((2094848)*((pow(M,2))*(r)))+(((16955574)*((M)*(pow(r,2))))+((11774969)*(pow(r,3))))))))+(((286)*((pow(a,9))*((pow(r,12))*(((128)*(pow(M,4)))+(((-1408)*((pow(M,3))*(r)))+(((13968)*((pow(M,2))*(pow(r,2))))+(((197864)*((M)*(pow(r,3))))+((247499)*(pow(r,4))))))))))+(((pow(a,17))*((pow(r,4))*(((164608)*(pow(M,4)))+(((-1084672)*((pow(M,3))*(r)))+(((6341728)*((pow(M,2))*(pow(r,2))))+(((48027056)*((M)*(pow(r,3))))+((34616509)*(pow(r,4)))))))))+(((26)*((pow(a,11))*((pow(r,9))*(((-1024)*(pow(M,5)))+(((8192)*((pow(M,4))*(r)))+(((-48320)*((pow(M,3))*(pow(r,2))))+(((339200)*((pow(M,2))*(pow(r,3))))+(((3685670)*((M)*(pow(r,4))))+((3769765)*(pow(r,5)))))))))))+(((2)*((pow(a,15))*((pow(r,5))*(((-37888)*(pow(M,5)))+(((234496)*((pow(M,4))*(r)))+(((-1039040)*((pow(M,3))*(pow(r,2))))+(((5551040)*((pow(M,2))*(pow(r,3))))+(((44204150)*((M)*(pow(r,4))))+((34514975)*(pow(r,5)))))))))))+((2)*((pow(a,13))*((pow(r,6))*(((8192)*(pow(M,6)))+(((-51200)*((pow(M,5))*(r)))+(((240384)*((pow(M,4))*(pow(r,2))))+(((-1068800)*((pow(M,3))*(pow(r,3))))+(((6148360)*((pow(M,2))*(pow(r,4))))+(((55384860)*((M)*(pow(r,5))))+((48566555)*(pow(r,6))))))))))))))))))))))))*(expr[0]))+((-45045)*((pow((pow(a,2))+(pow(r,2)),10))*(((pow(a,4))+(((5)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((3)*(r))))))))*((expr[1])*((expr[2])*(expr[3]))))))))))))).cast<double>());
}

void compute_coeffs_609(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[609] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.003320312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-15))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((5)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((3)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((10240)*(pow(a,24)))+(((225225)*(pow(r,24)))+(((15015)*((pow(a,2))*((pow(r,21))*(((34)*(M))+((163)*(r))))))+(((5)*((pow(a,22))*((r)*(((63902)*(M))+((56527)*(r))))))+(((15015)*((pow(a,4))*((pow(r,18))*(((8)*(pow(M,2)))+(((332)*((M)*(r)))+((805)*(pow(r,2))))))))+(((5)*((pow(a,20))*((pow(r,2))*(((61208)*(pow(M,2)))+(((700228)*((M)*(r)))+((501931)*(pow(r,2))))))))+(((429)*((pow(a,6))*((pow(r,15))*(((-128)*(pow(M,3)))+(((2432)*((pow(M,2))*(r)))+(((50934)*((M)*(pow(r,2))))+((83491)*(pow(r,3)))))))))+(((pow(a,18))*((pow(r,3))*(((-235648)*(pow(M,3)))+(((2094848)*((pow(M,2))*(r)))+(((16955574)*((M)*(pow(r,2))))+((11774969)*(pow(r,3))))))))+(((286)*((pow(a,8))*((pow(r,12))*(((128)*(pow(M,4)))+(((-1408)*((pow(M,3))*(r)))+(((13968)*((pow(M,2))*(pow(r,2))))+(((197864)*((M)*(pow(r,3))))+((247499)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((164608)*(pow(M,4)))+(((-1084672)*((pow(M,3))*(r)))+(((6341728)*((pow(M,2))*(pow(r,2))))+(((48027056)*((M)*(pow(r,3))))+((34616509)*(pow(r,4)))))))))+(((26)*((pow(a,10))*((pow(r,9))*(((-1024)*(pow(M,5)))+(((8192)*((pow(M,4))*(r)))+(((-48320)*((pow(M,3))*(pow(r,2))))+(((339200)*((pow(M,2))*(pow(r,3))))+(((3685670)*((M)*(pow(r,4))))+((3769765)*(pow(r,5)))))))))))+(((2)*((pow(a,14))*((pow(r,5))*(((-37888)*(pow(M,5)))+(((234496)*((pow(M,4))*(r)))+(((-1039040)*((pow(M,3))*(pow(r,2))))+(((5551040)*((pow(M,2))*(pow(r,3))))+(((44204150)*((M)*(pow(r,4))))+((34514975)*(pow(r,5)))))))))))+((2)*((pow(a,12))*((pow(r,6))*(((8192)*(pow(M,6)))+(((-51200)*((pow(M,5))*(r)))+(((240384)*((pow(M,4))*(pow(r,2))))+(((-1068800)*((pow(M,3))*(pow(r,3))))+(((6148360)*((pow(M,2))*(pow(r,4))))+(((55384860)*((M)*(pow(r,5))))+((48566555)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),10))*((((5)*(pow(r,7)))+(((pow(a,6))*(((2)*(M))+(r)))+(((pow(a,2))*((pow(r,4))*(((18)*(M))+((11)*(r)))))+((pow(a,4))*((r)*(((16)*(pow(M,2)))+(((20)*((M)*(r)))+((7)*(pow(r,2))))))))))*(expr[3]))))))))))))))).cast<double>());
}
