
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_110(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[110] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0005580357142857142857142857142857142857142857142857142857142857142857142857142857142857142857142857143"))*((HighPrecisionScalar("1.843908891458577462000454856352558631449361009744492801601550441088534205360375092153578818158656113"))*((pow(a,-11))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*(((pow(a,4))+(((3)*(pow(r,4)))+((4)*((pow(a,2))*((r)*((M)+(r)))))))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((a)*((r)*(((-225225)*((((2)*(M))+((-1)*(r)))*(pow(r,16))))+(((15159)*((pow(a,16))*(((2)*(M))+(r))))+(((30030)*((pow(a,2))*((pow(r,13))*(((-74)*(pow(M,2)))+(((-46)*((M)*(r)))+((49)*(pow(r,2))))))))+(((2)*((pow(a,14))*((r)*(((173638)*(pow(M,2)))+(((294910)*((M)*(r)))+((111625)*(pow(r,2))))))))+(((770)*((pow(a,4))*((pow(r,10))*(((-4808)*(pow(M,3)))+(((-10104)*((pow(M,2))*(r)))+(((216)*((M)*(pow(r,2))))+((5359)*(pow(r,3)))))))))+(((2)*((pow(a,12))*((pow(r,2))*(((-24264)*(pow(M,3)))+(((1005432)*((pow(M,2))*(r)))+(((1621720)*((M)*(pow(r,2))))+((617105)*(pow(r,3)))))))))+(((2)*((pow(a,10))*((pow(r,3))*(((-669888)*(pow(M,4)))+(((-1436832)*((pow(M,3))*(r)))+(((1417758)*((pow(M,2))*(pow(r,2))))+(((4051170)*((M)*(pow(r,3))))+((1789045)*(pow(r,4))))))))))+(((2)*((pow(a,6))*((pow(r,7))*(((-1156928)*(pow(M,4)))+(((-5090464)*((pow(M,3))*(r)))+(((-4518942)*((pow(M,2))*(pow(r,2))))+(((2969314)*((M)*(pow(r,3))))+((3229067)*(pow(r,4))))))))))+((-4)*((pow(a,8))*((pow(r,4))*(((97408)*(pow(M,5)))+(((913408)*((pow(M,4))*(r)))+(((2325976)*((pow(M,3))*(pow(r,2))))+(((577024)*((pow(M,2))*(pow(r,3))))+(((-2564945)*((M)*(pow(r,4))))+((-1532480)*(pow(r,5)))))))))))))))))))))+((-35)*((((35)*(pow(a,16)))+(((6435)*(pow(r,16)))+(((280)*((pow(a,14))*((r)*(((8)*(M))+((5)*(r))))))+(((3432)*((pow(a,2))*((pow(r,13))*(((8)*(M))+((11)*(r))))))+(((420)*((pow(a,12))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((29)*(pow(r,2))))))))+(((132)*((pow(a,4))*((pow(r,10))*(((288)*(pow(M,2)))+(((960)*((M)*(r)))+((709)*(pow(r,2))))))))+(((56)*((pow(a,10))*((pow(r,3))*(((256)*(pow(M,3)))+(((1344)*((pow(M,2))*(r)))+(((1992)*((M)*(pow(r,2))))+((847)*(pow(r,3)))))))))+(((72)*((pow(a,6))*((pow(r,7))*(((256)*(pow(M,3)))+(((1728)*((pow(M,2))*(r)))+(((3272)*((M)*(pow(r,2))))+((1761)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((16384)*((pow(M,3))*(r)))+(((74112)*((pow(M,2))*(pow(r,2))))+(((111616)*((M)*(pow(r,3))))+((50569)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_111(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[111] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.001302083333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((HighPrecisionScalar("0.09759000729485331793543846362401001895938126346147459932897122380847950462576527688502125360360520702"))*((pow(a,-13))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,6))+(((pow(a,4))*((r)*(((3)*(M))+(r))))+(((-3)*((pow(r,5))*((M)+((3)*(r)))))+((-1)*((pow(a,2))*((pow(r,2))*(((4)*(pow(M,2)))+(((16)*((M)*(r)))+((9)*(pow(r,2)))))))))))*(((11)*((a)*((r)*(((-1322685)*((((2)*(M))+((-1)*(r)))*(pow(r,20))))+(((27985)*((pow(a,20))*(((2)*(M))+(r))))+(((46410)*((pow(a,2))*((pow(r,17))*(((-338)*(pow(M,2)))+(((-232)*((M)*(r)))+((229)*(pow(r,2))))))))+(((10)*((pow(a,18))*((r)*(((119062)*(pow(M,2)))+(((175032)*((M)*(r)))+((60549)*(pow(r,2))))))))+(((-273)*((pow(a,4))*((pow(r,14))*(((124832)*(pow(M,3)))+(((272432)*((pow(M,2))*(r)))+(((12534)*((M)*(pow(r,2))))+((-138429)*(pow(r,3)))))))))+(((pow(a,16))*((pow(r,2))*(((2637536)*(pow(M,3)))+(((13481264)*((pow(M,2))*(r)))+(((15212382)*((M)*(pow(r,2))))+((4845417)*(pow(r,3))))))))+(((312)*((pow(a,6))*((pow(r,11))*(((-104568)*(pow(M,4)))+(((-446232)*((pow(M,3))*(r)))+(((-417728)*((pow(M,2))*(pow(r,2))))+(((189456)*((M)*(pow(r,3))))+((250221)*(pow(r,4))))))))))+(((8)*((pow(a,14))*((pow(r,3))*(((-726152)*(pow(M,4)))+(((525848)*((pow(M,3))*(r)))+(((6539708)*((pow(M,2))*(pow(r,2))))+(((7812416)*((M)*(pow(r,3))))+((2577019)*(pow(r,4))))))))))+(((-2)*((pow(a,8))*((pow(r,8))*(((6393856)*(pow(M,5)))+(((49265792)*((pow(M,4))*(r)))+(((108452080)*((pow(M,3))*(pow(r,2))))+(((41299000)*((pow(M,2))*(pow(r,3))))+(((-78337630)*((M)*(pow(r,4))))+((-51665885)*(pow(r,5)))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((-4332544)*(pow(M,5)))+(((-22449792)*((pow(M,4))*(r)))+(((-20095920)*((pow(M,3))*(pow(r,2))))+(((43321400)*((pow(M,2))*(pow(r,3))))+(((72056970)*((M)*(pow(r,4))))+((26823585)*(pow(r,5)))))))))))+((4)*((pow(a,10))*((pow(r,5))*(((-343552)*(pow(M,6)))+(((-5363200)*((pow(M,5))*(r)))+(((-26249184)*((pow(M,4))*(pow(r,2))))+(((-38380000)*((pow(M,3))*(pow(r,3))))+(((8915390)*((pow(M,2))*(pow(r,4))))+(((49349400)*((M)*(pow(r,5))))+((22761915)*(pow(r,6)))))))))))))))))))))))))+((-315)*((((63)*(pow(a,20)))+(((46189)*(pow(r,20)))+(((1260)*((pow(a,18))*((r)*(((5)*(M))+((3)*(r))))))+(((48620)*((pow(a,2))*((pow(r,17))*(((5)*(M))+((7)*(r))))))+(((105)*((pow(a,16))*((pow(r,2))*(((640)*(pow(M,2)))+(((1120)*((M)*(r)))+((457)*(pow(r,2))))))))+(((715)*((pow(a,4))*((pow(r,14))*(((640)*(pow(M,2)))+(((2080)*((M)*(r)))+((1537)*(pow(r,2))))))))+(((1680)*((pow(a,14))*((pow(r,3))*(((96)*(pow(M,3)))+(((384)*((pow(M,2))*(r)))+(((457)*((M)*(pow(r,2))))+((164)*(pow(r,3)))))))))+(((11440)*((pow(a,6))*((pow(r,11))*(((32)*(pow(M,3)))+(((192)*((pow(M,2))*(r)))+(((339)*((M)*(pow(r,2))))+((178)*(pow(r,3)))))))))+(((110)*((pow(a,8))*((pow(r,8))*(((1024)*(pow(M,4)))+(((11264)*((pow(M,3))*(r)))+(((38976)*((pow(M,2))*(pow(r,2))))+(((50864)*((M)*(pow(r,3))))+((21631)*(pow(r,4))))))))))+(((30)*((pow(a,12))*((pow(r,4))*(((3072)*(pow(M,4)))+(((27648)*((pow(M,3))*(r)))+(((78528)*((pow(M,2))*(pow(r,2))))+(((84528)*((M)*(pow(r,3))))+((29837)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((25600)*((pow(M,4))*(r)))+(((192640)*((pow(M,3))*(pow(r,2))))+(((540800)*((pow(M,2))*(pow(r,3))))+(((605045)*((M)*(pow(r,4))))+((226469)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_112(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[112] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.001302083333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((HighPrecisionScalar("0.09759000729485331793543846362401001895938126346147459932897122380847950462576527688502125360360520702"))*((pow(a,-11))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*(((pow(a,4))+(((3)*(pow(r,4)))+((4)*((pow(a,2))*((r)*((M)+(r)))))))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-11)*((a)*((((27985)*(pow(a,16)))+(((1322685)*(pow(r,16)))+(((185640)*((pow(a,2))*((pow(r,13))*(((28)*(M))+((43)*(r))))))+(((80)*((pow(a,14))*((r)*(((8141)*(M))+((6869)*(r))))))+(((4368)*((pow(a,4))*((pow(r,10))*(((1521)*(pow(M,2)))+(((5619)*((M)*(r)))+((4694)*(pow(r,2))))))))+(((24)*((pow(a,12))*((pow(r,2))*(((109222)*(pow(M,2)))+(((272042)*((M)*(r)))+((154933)*(pow(r,2))))))))+(((1872)*((pow(a,6))*((pow(r,7))*(((1616)*(pow(M,3)))+(((11772)*((pow(M,2))*(r)))+(((25117)*((M)*(pow(r,2))))+((15534)*(pow(r,3)))))))))+(((8)*((pow(a,10))*((pow(r,3))*(((292256)*(pow(M,3)))+(((1749048)*((pow(M,2))*(r)))+(((3078672)*((M)*(pow(r,2))))+((1578731)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((171776)*(pow(M,4)))+(((2681600)*((pow(M,3))*(r)))+(((13382256)*((pow(M,2))*(pow(r,2))))+(((23212400)*((M)*(pow(r,3))))+((12334541)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((((63)*(pow(a,20)))+(((46189)*(pow(r,20)))+(((1260)*((pow(a,18))*((r)*(((5)*(M))+((3)*(r))))))+(((48620)*((pow(a,2))*((pow(r,17))*(((5)*(M))+((7)*(r))))))+(((105)*((pow(a,16))*((pow(r,2))*(((640)*(pow(M,2)))+(((1120)*((M)*(r)))+((457)*(pow(r,2))))))))+(((715)*((pow(a,4))*((pow(r,14))*(((640)*(pow(M,2)))+(((2080)*((M)*(r)))+((1537)*(pow(r,2))))))))+(((1680)*((pow(a,14))*((pow(r,3))*(((96)*(pow(M,3)))+(((384)*((pow(M,2))*(r)))+(((457)*((M)*(pow(r,2))))+((164)*(pow(r,3)))))))))+(((11440)*((pow(a,6))*((pow(r,11))*(((32)*(pow(M,3)))+(((192)*((pow(M,2))*(r)))+(((339)*((M)*(pow(r,2))))+((178)*(pow(r,3)))))))))+(((110)*((pow(a,8))*((pow(r,8))*(((1024)*(pow(M,4)))+(((11264)*((pow(M,3))*(r)))+(((38976)*((pow(M,2))*(pow(r,2))))+(((50864)*((M)*(pow(r,3))))+((21631)*(pow(r,4))))))))))+(((30)*((pow(a,12))*((pow(r,4))*(((3072)*(pow(M,4)))+(((27648)*((pow(M,3))*(r)))+(((78528)*((pow(M,2))*(pow(r,2))))+(((84528)*((M)*(pow(r,3))))+((29837)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((25600)*((pow(M,4))*(r)))+(((192640)*((pow(M,3))*(pow(r,2))))+(((540800)*((pow(M,2))*(pow(r,3))))+(((605045)*((M)*(pow(r,4))))+((226469)*(pow(r,5)))))))))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_113(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[113] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0006510416666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666667"))*((HighPrecisionScalar("0.09759000729485331793543846362401001895938126346147459932897122380847950462576527688502125360360520702"))*((pow(a,-13))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*(((pow(a,4))+(((3)*(pow(r,4)))+((4)*((pow(a,2))*((r)*((M)+(r)))))))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((11)*((a)*((r)*(((-1322685)*((((2)*(M))+((-1)*(r)))*(pow(r,20))))+(((27985)*((pow(a,20))*(((2)*(M))+(r))))+(((46410)*((pow(a,2))*((pow(r,17))*(((-338)*(pow(M,2)))+(((-232)*((M)*(r)))+((229)*(pow(r,2))))))))+(((10)*((pow(a,18))*((r)*(((119062)*(pow(M,2)))+(((175032)*((M)*(r)))+((60549)*(pow(r,2))))))))+(((-273)*((pow(a,4))*((pow(r,14))*(((124832)*(pow(M,3)))+(((272432)*((pow(M,2))*(r)))+(((12534)*((M)*(pow(r,2))))+((-138429)*(pow(r,3)))))))))+(((pow(a,16))*((pow(r,2))*(((2637536)*(pow(M,3)))+(((13481264)*((pow(M,2))*(r)))+(((15212382)*((M)*(pow(r,2))))+((4845417)*(pow(r,3))))))))+(((312)*((pow(a,6))*((pow(r,11))*(((-104568)*(pow(M,4)))+(((-446232)*((pow(M,3))*(r)))+(((-417728)*((pow(M,2))*(pow(r,2))))+(((189456)*((M)*(pow(r,3))))+((250221)*(pow(r,4))))))))))+(((8)*((pow(a,14))*((pow(r,3))*(((-726152)*(pow(M,4)))+(((525848)*((pow(M,3))*(r)))+(((6539708)*((pow(M,2))*(pow(r,2))))+(((7812416)*((M)*(pow(r,3))))+((2577019)*(pow(r,4))))))))))+(((-2)*((pow(a,8))*((pow(r,8))*(((6393856)*(pow(M,5)))+(((49265792)*((pow(M,4))*(r)))+(((108452080)*((pow(M,3))*(pow(r,2))))+(((41299000)*((pow(M,2))*(pow(r,3))))+(((-78337630)*((M)*(pow(r,4))))+((-51665885)*(pow(r,5)))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((-4332544)*(pow(M,5)))+(((-22449792)*((pow(M,4))*(r)))+(((-20095920)*((pow(M,3))*(pow(r,2))))+(((43321400)*((pow(M,2))*(pow(r,3))))+(((72056970)*((M)*(pow(r,4))))+((26823585)*(pow(r,5)))))))))))+((4)*((pow(a,10))*((pow(r,5))*(((-343552)*(pow(M,6)))+(((-5363200)*((pow(M,5))*(r)))+(((-26249184)*((pow(M,4))*(pow(r,2))))+(((-38380000)*((pow(M,3))*(pow(r,3))))+(((8915390)*((pow(M,2))*(pow(r,4))))+(((49349400)*((M)*(pow(r,5))))+((22761915)*(pow(r,6)))))))))))))))))))))))))+((-315)*((((63)*(pow(a,20)))+(((46189)*(pow(r,20)))+(((1260)*((pow(a,18))*((r)*(((5)*(M))+((3)*(r))))))+(((48620)*((pow(a,2))*((pow(r,17))*(((5)*(M))+((7)*(r))))))+(((105)*((pow(a,16))*((pow(r,2))*(((640)*(pow(M,2)))+(((1120)*((M)*(r)))+((457)*(pow(r,2))))))))+(((715)*((pow(a,4))*((pow(r,14))*(((640)*(pow(M,2)))+(((2080)*((M)*(r)))+((1537)*(pow(r,2))))))))+(((1680)*((pow(a,14))*((pow(r,3))*(((96)*(pow(M,3)))+(((384)*((pow(M,2))*(r)))+(((457)*((M)*(pow(r,2))))+((164)*(pow(r,3)))))))))+(((11440)*((pow(a,6))*((pow(r,11))*(((32)*(pow(M,3)))+(((192)*((pow(M,2))*(r)))+(((339)*((M)*(pow(r,2))))+((178)*(pow(r,3)))))))))+(((110)*((pow(a,8))*((pow(r,8))*(((1024)*(pow(M,4)))+(((11264)*((pow(M,3))*(r)))+(((38976)*((pow(M,2))*(pow(r,2))))+(((50864)*((M)*(pow(r,3))))+((21631)*(pow(r,4))))))))))+(((30)*((pow(a,12))*((pow(r,4))*(((3072)*(pow(M,4)))+(((27648)*((pow(M,3))*(r)))+(((78528)*((pow(M,2))*(pow(r,2))))+(((84528)*((M)*(pow(r,3))))+((29837)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((25600)*((pow(M,4))*(r)))+(((192640)*((pow(M,3))*(pow(r,2))))+(((540800)*((pow(M,2))*(pow(r,3))))+(((605045)*((M)*(pow(r,4))))+((226469)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_114(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[114] = std::complex<double>(0.0,1.0)*(((-5)*((pow(a,-4))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-3))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((-1)*((a)*((r)*(((3)*((pow(r,8))*(((-2)*(M))+(r))))+(((2)*((pow(a,8))*(((2)*(M))+(r))))+(((pow(a,6))*((r)*(((-4)*(pow(M,2)))+(((12)*((M)*(r)))+((9)*(pow(r,2)))))))+(((pow(a,2))*((pow(r,5))*(((-16)*(pow(M,2)))+(((-8)*((M)*(r)))+((11)*(pow(r,2)))))))+((pow(a,4))*((pow(r,2))*(((-8)*(pow(M,3)))+(((-20)*((pow(M,2))*(r)))+(((6)*((M)*(pow(r,2))))+((15)*(pow(r,3)))))))))))))))+(((-1)*((a)*((((2)*(pow(a,4)))+(((3)*(pow(r,4)))+((pow(a,2))*((r)*(((2)*(M))+((5)*(r)))))))*((pow(expr[0],2))*((pow(expr[1],2))*(pow(expr[2],2)))))))+((6)*((r)*((pow((pow(a,2))+(pow(r,2)),2))*(((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}
