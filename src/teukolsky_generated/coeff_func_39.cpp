
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_195(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[195] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.06250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("3.316624790355399849114932736670686683927088545589353597058682146116484642609043846708843399128290651"))*((pow(a,-8))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[2])*(((((945)*((a)*((((2)*(M))+((-1)*(r)))*(pow(r,16)))))+(((-663)*((pow(a,17))*(((2)*(M))+(r))))+(((210)*((pow(a,3))*((pow(r,13))*(((22)*(pow(M,2)))+(((50)*((M)*(r)))+((-35)*(pow(r,2))))))))+(((-2)*((pow(a,15))*((r)*(((-586)*(pow(M,2)))+(((4718)*((M)*(r)))+((2837)*(pow(r,2))))))))+(((2)*((pow(a,13))*((pow(r,2))*(((1896)*(pow(M,3)))+(((6360)*((pow(M,2))*(r)))+(((-13040)*((M)*(pow(r,2))))+((-10525)*(pow(r,3)))))))))+(((14)*((pow(a,5))*((pow(r,10))*(((88)*(pow(M,3)))+(((1848)*((pow(M,2))*(r)))+(((1536)*((M)*(pow(r,2))))+((-1781)*(pow(r,3)))))))))+(((2)*((pow(a,7))*((pow(r,7))*(((-320)*(pow(M,4)))+(((3104)*((pow(M,3))*(r)))+(((29550)*((pow(M,2))*(pow(r,2))))+(((7342)*((M)*(pow(r,3))))+((-24079)*(pow(r,4))))))))))+(((-2)*((pow(a,11))*((pow(r,3))*(((960)*(pow(M,4)))+(((-5664)*((pow(M,3))*(r)))+(((-21570)*((pow(M,2))*(pow(r,2))))+(((16770)*((M)*(pow(r,3))))+((22145)*(pow(r,4))))))))))+((4)*((pow(a,9))*((pow(r,4))*(((128)*(pow(M,5)))+(((-640)*((pow(M,4))*(r)))+(((3128)*((pow(M,3))*(pow(r,2))))+(((17360)*((pow(M,2))*(pow(r,3))))+(((-3445)*((M)*(pow(r,4))))+((-14470)*(pow(r,5)))))))))))))))))))*(expr[2]))+((105)*((pow((pow(a,2))+(pow(r,2)),6))*(((pow(a,4))+(((9)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((8)*(M))+((5)*(r))))))))*((expr[0])*((expr[1])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_196(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[196] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.03125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.7071067811865475244008443621048490392848359376884740365883398689953662392310535194251937671638207864"))*((pow(a,-10))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((a)*((r)*(((45045)*((((2)*(M))+((-1)*(r)))*(pow(r,20))))+(((-9295)*((pow(a,20))*(((2)*(M))+(r))))+(((4620)*((pow(a,2))*((pow(r,17))*(((73)*(pow(M,2)))+(((122)*((M)*(r)))+((-89)*(pow(r,2))))))))+(((-20)*((pow(a,18))*((r)*(((4475)*(pow(M,2)))+(((13770)*((M)*(r)))+((6231)*(pow(r,2))))))))+(((21)*((pow(a,4))*((pow(r,14))*(((16112)*(pow(M,3)))+(((104312)*((pow(M,2))*(r)))+(((60594)*((M)*(pow(r,2))))+((-79839)*(pow(r,3)))))))))+(((-1)*((pow(a,16))*((pow(r,2))*(((-215728)*(pow(M,3)))+(((392408)*((pow(M,2))*(r)))+(((1480254)*((M)*(pow(r,2))))+((708009)*(pow(r,3)))))))))+(((24)*((pow(a,6))*((pow(r,11))*(((1728)*(pow(M,4)))+(((81132)*((pow(M,3))*(r)))+(((248033)*((pow(M,2))*(pow(r,2))))+(((28284)*((M)*(pow(r,3))))+((-167346)*(pow(r,4))))))))))+(((-8)*((pow(a,14))*((pow(r,3))*(((-10784)*(pow(M,4)))+(((-183364)*((pow(M,3))*(r)))+(((13931)*((pow(M,2))*(pow(r,2))))+(((514412)*((M)*(pow(r,3))))+((286558)*(pow(r,4))))))))))+(((-2)*((pow(a,8))*((pow(r,8))*(((5888)*(pow(M,5)))+(((-97664)*((pow(M,4))*(r)))+(((-2315560)*((pow(M,3))*(pow(r,2))))+(((-4308220)*((pow(M,2))*(pow(r,3))))+(((1227190)*((M)*(pow(r,4))))+((3124265)*(pow(r,5)))))))))))+(((8)*((pow(a,10))*((pow(r,5))*(((512)*(pow(M,6)))+(((-4480)*((pow(M,5))*(r)))+(((44064)*((pow(M,4))*(pow(r,2))))+(((726200)*((pow(M,3))*(pow(r,3))))+(((856910)*((pow(M,2))*(pow(r,4))))+(((-754950)*((M)*(pow(r,5))))+((-822765)*(pow(r,6))))))))))))+((pow(a,12))*(((-24064)*((pow(M,5))*(pow(r,4))))+(((284928)*((pow(M,4))*(pow(r,5))))+(((4038480)*((pow(M,3))*(pow(r,6))))+(((2529800)*((pow(M,2))*(pow(r,7))))+(((-6597180)*((M)*(pow(r,8))))+((-4739190)*(pow(r,9)))))))))))))))))))))+((315)*((pow((pow(a,2))+(pow(r,2)),6))*((((3)*(pow(a,8)))+(((143)*(pow(r,8)))+(((24)*((pow(a,6))*((r)*(((5)*(M))+((3)*(r))))))+(((88)*((pow(a,2))*((pow(r,5))*(((5)*(M))+((4)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((160)*(pow(M,2)))+(((280)*((M)*(r)))+((139)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_197(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[197] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.007812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.7587869106393281462690342781122674276441125639702901794971577937282469954573703412035671243024329437"))*((pow(a,-12))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((a)*((r)*(((765765)*((((2)*(M))+((-1)*(r)))*(pow(r,24))))+(((-45687)*((pow(a,24))*(((2)*(M))+(r))))+(((30030)*((pow(a,2))*((pow(r,21))*(((250)*(pow(M,2)))+(((362)*((M)*(r)))+((-269)*(pow(r,2))))))))+(((-2)*((pow(a,22))*((r)*(((604798)*(pow(M,2)))+(((1153042)*((M)*(r)))+((448165)*(pow(r,2))))))))+(((12012)*((pow(a,4))*((pow(r,18))*(((1012)*(pow(M,3)))+(((4732)*((pow(M,2))*(r)))+(((2299)*((M)*(pow(r,2))))+((-3224)*(pow(r,3)))))))))+(((-4)*((pow(a,20))*((pow(r,2))*(((6148)*(pow(M,3)))+(((3033212)*((pow(M,2))*(r)))+(((4838671)*((M)*(pow(r,2))))+((1798862)*(pow(r,3)))))))))+(((66)*((pow(a,6))*((pow(r,15))*(((102848)*(pow(M,4)))+(((1267776)*((pow(M,3))*(r)))+(((2786538)*((pow(M,2))*(pow(r,2))))+(((178806)*((M)*(pow(r,3))))+((-1688265)*(pow(r,4))))))))))+(((-2)*((pow(a,18))*((pow(r,3))*(((-2627264)*(pow(M,4)))+(((-5156160)*((pow(M,3))*(r)))+(((23441010)*((pow(M,2))*(pow(r,2))))+(((42093618)*((M)*(pow(r,3))))+((16365111)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((793600)*(pow(M,5)))+(((33511168)*((pow(M,4))*(r)))+(((74858816)*((pow(M,3))*(pow(r,2))))+(((-82433152)*((pow(M,2))*(pow(r,3))))+(((-221750074)*((M)*(pow(r,4))))+((-96054175)*(pow(r,5))))))))))+(((11)*((pow(a,8))*((pow(r,12))*(((41984)*(pow(M,5)))+(((3597568)*((pow(M,4))*(r)))+(((22408640)*((pow(M,3))*(pow(r,2))))+(((29576960)*((pow(M,2))*(pow(r,3))))+(((-9160166)*((M)*(pow(r,4))))+((-19450447)*(pow(r,5)))))))))))+(((-4)*((pow(a,14))*((pow(r,5))*(((34816)*(pow(M,6)))+(((-689152)*((pow(M,5))*(r)))+(((-22053920)*((pow(M,4))*(pow(r,2))))+(((-57717216)*((pow(M,3))*(pow(r,3))))+(((7402534)*((pow(M,2))*(pow(r,4))))+(((94302194)*((M)*(pow(r,5))))+((48498625)*(pow(r,6))))))))))))+(((-4)*((pow(a,10))*((pow(r,9))*(((20480)*(pow(M,6)))+(((-523264)*((pow(M,5))*(r)))+(((-23934880)*((pow(M,4))*(pow(r,2))))+(((-100695392)*((pow(M,3))*(pow(r,3))))+(((-81469438)*((pow(M,2))*(pow(r,4))))+(((72865946)*((M)*(pow(r,5))))+((72061727)*(pow(r,6))))))))))))+((8)*((pow(a,12))*((pow(r,6))*(((2048)*(pow(M,7)))+(((-27648)*((pow(M,6))*(r)))+(((449280)*((pow(M,5))*(pow(r,2))))+(((15364160)*((pow(M,4))*(pow(r,3))))+(((49268820)*((pow(M,3))*(pow(r,4))))+(((18996708)*((pow(M,2))*(pow(r,5))))+(((-52460373)*((M)*(pow(r,6))))+((-34828605)*(pow(r,7)))))))))))))))))))))))))))+((3465)*((pow((pow(a,2))+(pow(r,2)),6))*(((pow(a,12))+(((221)*(pow(r,12)))+(((6)*((pow(a,10))*((r)*(((12)*(M))+((7)*(r))))))+(((78)*((pow(a,2))*((pow(r,9))*(((12)*(M))+((11)*(r))))))+(((39)*((pow(a,4))*((pow(r,6))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((33)*(pow(r,2))))))))+(((3)*((pow(a,8))*((pow(r,2))*(((160)*(pow(M,2)))+(((256)*((M)*(r)))+((105)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((432)*((pow(M,2))*(r)))+(((564)*((M)*(pow(r,2))))+((231)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_198(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[198] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.02343750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-9))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((-1)*((pow(a,2))*((r)*(((3)*(M))+(r)))))+((pow(r,2))*(((2)*(pow(M,2)))+(((19)*((M)*(r)))+((-10)*(pow(r,2))))))))*((expr[2])*(((a)*((((279)*(pow(a,12)))+(((-140)*((pow(a,2))*(((M)+((-5)*(r)))*(pow(r,9)))))+(((105)*(pow(r,12)))+(((4)*((pow(a,10))*((r)*(((-163)*(M))+((337)*(r))))))+(((7)*((pow(a,4))*((pow(r,6))*(((32)*(pow(M,2)))+(((-112)*((M)*(r)))+((283)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((800)*(pow(M,2)))+(((-1808)*((M)*(r)))+((2755)*(pow(r,2)))))))+((8)*((pow(a,6))*((pow(r,3))*(((-48)*(pow(M,3)))+(((128)*((pow(M,2))*(r)))+(((-225)*((M)*(pow(r,2))))+((384)*(pow(r,3)))))))))))))))*((((pow(r,4))*(((-2)*(M))+(r)))+(((pow(a,4))*(((2)*(M))+(r)))+(((pow(a,2))*(((-4)*((pow(M,2))*(r)))+((2)*(pow(r,3)))))+((pow(expr[0],2))*(pow(expr[1],2))))))*(expr[2]))))+((-210)*((pow((pow(a,2))+(pow(r,2)),8))*((expr[0])*((expr[1])*(expr[3]))))))))))))).cast<double>());
}

void compute_coeffs_199(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[199] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.04687500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-7))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-4))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((279)*(pow(a,12)))+(((-140)*((pow(a,2))*(((M)+((-5)*(r)))*(pow(r,9)))))+(((105)*(pow(r,12)))+(((4)*((pow(a,10))*((r)*(((-163)*(M))+((337)*(r))))))+(((7)*((pow(a,4))*((pow(r,6))*(((32)*(pow(M,2)))+(((-112)*((M)*(r)))+((283)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((800)*(pow(M,2)))+(((-1808)*((M)*(r)))+((2755)*(pow(r,2)))))))+((8)*((pow(a,6))*((pow(r,3))*(((-48)*(pow(M,3)))+(((128)*((pow(M,2))*(r)))+(((-225)*((M)*(pow(r,2))))+((384)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((105)*((pow((pow(a,2))+(pow(r,2)),8))*(expr[3])))))))))))).cast<double>());
}
