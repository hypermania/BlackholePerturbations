
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_685(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[685] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.000004601857018849206349206349206349206349206349206349206349206349206349206349206349206349206349206349206"))*((pow(a,-19))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,4)))+(((-1)*((pow(a,2))*((r)*(((6)*(M))+((7)*(r))))))+((2)*((pow(r,2))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2)))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((3363003)*(pow(a,32)))+(((-42)*((pow(a,30))*((((483062)*(M))+((-1039613)*(r)))*(r))))+(((-510510)*((pow(a,2))*((((2)*(M))+((-25)*(r)))*(pow(r,29)))))+(((765765)*(pow(r,32)))+(((102102)*((pow(a,4))*((pow(r,26))*(((16)*(pow(M,2)))+(((-156)*((M)*(r)))+((979)*(pow(r,2))))))))+(((42)*((pow(a,28))*((pow(r,2))*(((2058256)*(pow(M,2)))+(((-4704612)*((M)*(r)))+((6500179)*(pow(r,2))))))))+(((14586)*((pow(a,6))*((pow(r,23))*(((-192)*(pow(M,3)))+(((1632)*((pow(M,2))*(r)))+(((-7970)*((M)*(pow(r,2))))+((33491)*(pow(r,3)))))))))+(((6)*((pow(a,26))*((pow(r,3))*(((-41361216)*(pow(M,3)))+(((110851680)*((pow(M,2))*(r)))+(((-151430110)*((M)*(pow(r,2))))+((181612115)*(pow(r,3)))))))))+(((4862)*((pow(a,8))*((pow(r,20))*(((1024)*(pow(M,4)))+(((-7808)*((pow(M,3))*(r)))+(((33216)*((pow(M,2))*(pow(r,2))))+(((-108344)*((M)*(pow(r,3))))+((343069)*(pow(r,4))))))))))+(((2)*((pow(a,24))*((pow(r,4))*(((241828864)*(pow(M,4)))+(((-757178752)*((pow(M,3))*(r)))+(((1168105920)*((pow(M,2))*(pow(r,2))))+(((-1316941000)*((M)*(pow(r,3))))+((1549314205)*(pow(r,4))))))))))+(((442)*((pow(a,10))*((pow(r,17))*(((-20480)*(pow(M,5)))+(((141312)*((pow(M,4))*(r)))+(((-539072)*((pow(M,3))*(pow(r,2))))+(((1530400)*((pow(M,2))*(pow(r,3))))+(((-3751350)*((M)*(pow(r,4))))+((9551335)*(pow(r,5)))))))))))+(((2)*((pow(a,22))*((pow(r,5))*(((-317001728)*(pow(M,5)))+(((1142126592)*((pow(M,4))*(r)))+(((-2023348928)*((pow(M,3))*(pow(r,2))))+(((2503422560)*((pow(M,2))*(pow(r,3))))+(((-2703705630)*((M)*(pow(r,4))))+((3316289429)*(pow(r,5)))))))))))+(((34)*((pow(a,12))*((pow(r,14))*(((491520)*(pow(M,6)))+(((-3072000)*((pow(M,5))*(r)))+(((10602496)*((pow(M,4))*(pow(r,2))))+(((-26980864)*((pow(M,3))*(pow(r,3))))+(((57510000)*((pow(M,2))*(pow(r,4))))+(((-113016140)*((M)*(pow(r,5))))+((241122125)*(pow(r,6))))))))))))+(((2)*((pow(a,20))*((pow(r,6))*(((268468224)*(pow(M,6)))+(((-1096605696)*((pow(M,5))*(r)))+(((2230433792)*((pow(M,4))*(pow(r,2))))+(((-3147223552)*((pow(M,3))*(pow(r,3))))+(((3693736080)*((pow(M,2))*(pow(r,4))))+(((-4167979532)*((M)*(pow(r,5))))+((5507223523)*(pow(r,6))))))))))))+(((34)*((pow(a,14))*((pow(r,11))*(((-917504)*(pow(M,7)))+(((5177344)*((pow(M,6))*(r)))+(((-16183296)*((pow(M,5))*(pow(r,2))))+(((37251072)*((pow(M,4))*(pow(r,3))))+(((-71143296)*((pow(M,3))*(pow(r,4))))+(((121453248)*((pow(M,2))*(pow(r,5))))+(((-199351418)*((M)*(pow(r,6))))+((366772147)*(pow(r,7)))))))))))))+(((2)*((pow(a,18))*((pow(r,7))*(((-133038080)*(pow(M,7)))+(((608239616)*((pow(M,6))*(r)))+(((-1426452480)*((pow(M,5))*(pow(r,2))))+(((2358319104)*((pow(M,4))*(pow(r,3))))+(((-3213264768)*((pow(M,3))*(pow(r,4))))+(((4001831232)*((pow(M,2))*(pow(r,5))))+(((-4969374746)*((M)*(pow(r,6))))+((7214794013)*(pow(r,7)))))))))))))+((32)*((pow(a,16))*((pow(r,8))*(((1835008)*(pow(M,8)))+(((-9289728)*((pow(M,7))*(r)))+(((26214400)*((pow(M,6))*(pow(r,2))))+(((-54641664)*((pow(M,5))*(pow(r,3))))+(((94371840)*((pow(M,4))*(pow(r,4))))+(((-144288144)*((pow(M,3))*(pow(r,5))))+(((205520896)*((pow(M,2))*(pow(r,6))))+(((-289864575)*((M)*(pow(r,7))))+((469762048)*(pow(r,8))))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((765765)*((pow((pow(a,2))+(pow(r,2)),18))*(expr[3]))))))))))))).cast<double>());
}

void compute_coeffs_686(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[686] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.000009203714037698412698412698412698412698412698412698412698412698412698412698412698412698412698412698413"))*((pow(a,-17))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((3363003)*(pow(a,32)))+(((-42)*((pow(a,30))*((((483062)*(M))+((-1039613)*(r)))*(r))))+(((-510510)*((pow(a,2))*((((2)*(M))+((-25)*(r)))*(pow(r,29)))))+(((765765)*(pow(r,32)))+(((102102)*((pow(a,4))*((pow(r,26))*(((16)*(pow(M,2)))+(((-156)*((M)*(r)))+((979)*(pow(r,2))))))))+(((42)*((pow(a,28))*((pow(r,2))*(((2058256)*(pow(M,2)))+(((-4704612)*((M)*(r)))+((6500179)*(pow(r,2))))))))+(((14586)*((pow(a,6))*((pow(r,23))*(((-192)*(pow(M,3)))+(((1632)*((pow(M,2))*(r)))+(((-7970)*((M)*(pow(r,2))))+((33491)*(pow(r,3)))))))))+(((6)*((pow(a,26))*((pow(r,3))*(((-41361216)*(pow(M,3)))+(((110851680)*((pow(M,2))*(r)))+(((-151430110)*((M)*(pow(r,2))))+((181612115)*(pow(r,3)))))))))+(((4862)*((pow(a,8))*((pow(r,20))*(((1024)*(pow(M,4)))+(((-7808)*((pow(M,3))*(r)))+(((33216)*((pow(M,2))*(pow(r,2))))+(((-108344)*((M)*(pow(r,3))))+((343069)*(pow(r,4))))))))))+(((2)*((pow(a,24))*((pow(r,4))*(((241828864)*(pow(M,4)))+(((-757178752)*((pow(M,3))*(r)))+(((1168105920)*((pow(M,2))*(pow(r,2))))+(((-1316941000)*((M)*(pow(r,3))))+((1549314205)*(pow(r,4))))))))))+(((442)*((pow(a,10))*((pow(r,17))*(((-20480)*(pow(M,5)))+(((141312)*((pow(M,4))*(r)))+(((-539072)*((pow(M,3))*(pow(r,2))))+(((1530400)*((pow(M,2))*(pow(r,3))))+(((-3751350)*((M)*(pow(r,4))))+((9551335)*(pow(r,5)))))))))))+(((2)*((pow(a,22))*((pow(r,5))*(((-317001728)*(pow(M,5)))+(((1142126592)*((pow(M,4))*(r)))+(((-2023348928)*((pow(M,3))*(pow(r,2))))+(((2503422560)*((pow(M,2))*(pow(r,3))))+(((-2703705630)*((M)*(pow(r,4))))+((3316289429)*(pow(r,5)))))))))))+(((34)*((pow(a,12))*((pow(r,14))*(((491520)*(pow(M,6)))+(((-3072000)*((pow(M,5))*(r)))+(((10602496)*((pow(M,4))*(pow(r,2))))+(((-26980864)*((pow(M,3))*(pow(r,3))))+(((57510000)*((pow(M,2))*(pow(r,4))))+(((-113016140)*((M)*(pow(r,5))))+((241122125)*(pow(r,6))))))))))))+(((2)*((pow(a,20))*((pow(r,6))*(((268468224)*(pow(M,6)))+(((-1096605696)*((pow(M,5))*(r)))+(((2230433792)*((pow(M,4))*(pow(r,2))))+(((-3147223552)*((pow(M,3))*(pow(r,3))))+(((3693736080)*((pow(M,2))*(pow(r,4))))+(((-4167979532)*((M)*(pow(r,5))))+((5507223523)*(pow(r,6))))))))))))+(((34)*((pow(a,14))*((pow(r,11))*(((-917504)*(pow(M,7)))+(((5177344)*((pow(M,6))*(r)))+(((-16183296)*((pow(M,5))*(pow(r,2))))+(((37251072)*((pow(M,4))*(pow(r,3))))+(((-71143296)*((pow(M,3))*(pow(r,4))))+(((121453248)*((pow(M,2))*(pow(r,5))))+(((-199351418)*((M)*(pow(r,6))))+((366772147)*(pow(r,7)))))))))))))+(((2)*((pow(a,18))*((pow(r,7))*(((-133038080)*(pow(M,7)))+(((608239616)*((pow(M,6))*(r)))+(((-1426452480)*((pow(M,5))*(pow(r,2))))+(((2358319104)*((pow(M,4))*(pow(r,3))))+(((-3213264768)*((pow(M,3))*(pow(r,4))))+(((4001831232)*((pow(M,2))*(pow(r,5))))+(((-4969374746)*((M)*(pow(r,6))))+((7214794013)*(pow(r,7)))))))))))))+((32)*((pow(a,16))*((pow(r,8))*(((1835008)*(pow(M,8)))+(((-9289728)*((pow(M,7))*(r)))+(((26214400)*((pow(M,6))*(pow(r,2))))+(((-54641664)*((pow(M,5))*(pow(r,3))))+(((94371840)*((pow(M,4))*(pow(r,4))))+(((-144288144)*((pow(M,3))*(pow(r,5))))+(((205520896)*((pow(M,2))*(pow(r,6))))+(((-289864575)*((M)*(pow(r,7))))+((469762048)*(pow(r,8))))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((765765)*((pow((pow(a,2))+(pow(r,2)),18))*(expr[3])))))))))))).cast<double>());
}

void compute_coeffs_687(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[687] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.000004601857018849206349206349206349206349206349206349206349206349206349206349206349206349206349206349206"))*((pow(a,-19))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((3363003)*(pow(a,32)))+(((-42)*((pow(a,30))*((((483062)*(M))+((-1039613)*(r)))*(r))))+(((-510510)*((pow(a,2))*((((2)*(M))+((-25)*(r)))*(pow(r,29)))))+(((765765)*(pow(r,32)))+(((102102)*((pow(a,4))*((pow(r,26))*(((16)*(pow(M,2)))+(((-156)*((M)*(r)))+((979)*(pow(r,2))))))))+(((42)*((pow(a,28))*((pow(r,2))*(((2058256)*(pow(M,2)))+(((-4704612)*((M)*(r)))+((6500179)*(pow(r,2))))))))+(((14586)*((pow(a,6))*((pow(r,23))*(((-192)*(pow(M,3)))+(((1632)*((pow(M,2))*(r)))+(((-7970)*((M)*(pow(r,2))))+((33491)*(pow(r,3)))))))))+(((6)*((pow(a,26))*((pow(r,3))*(((-41361216)*(pow(M,3)))+(((110851680)*((pow(M,2))*(r)))+(((-151430110)*((M)*(pow(r,2))))+((181612115)*(pow(r,3)))))))))+(((4862)*((pow(a,8))*((pow(r,20))*(((1024)*(pow(M,4)))+(((-7808)*((pow(M,3))*(r)))+(((33216)*((pow(M,2))*(pow(r,2))))+(((-108344)*((M)*(pow(r,3))))+((343069)*(pow(r,4))))))))))+(((2)*((pow(a,24))*((pow(r,4))*(((241828864)*(pow(M,4)))+(((-757178752)*((pow(M,3))*(r)))+(((1168105920)*((pow(M,2))*(pow(r,2))))+(((-1316941000)*((M)*(pow(r,3))))+((1549314205)*(pow(r,4))))))))))+(((442)*((pow(a,10))*((pow(r,17))*(((-20480)*(pow(M,5)))+(((141312)*((pow(M,4))*(r)))+(((-539072)*((pow(M,3))*(pow(r,2))))+(((1530400)*((pow(M,2))*(pow(r,3))))+(((-3751350)*((M)*(pow(r,4))))+((9551335)*(pow(r,5)))))))))))+(((2)*((pow(a,22))*((pow(r,5))*(((-317001728)*(pow(M,5)))+(((1142126592)*((pow(M,4))*(r)))+(((-2023348928)*((pow(M,3))*(pow(r,2))))+(((2503422560)*((pow(M,2))*(pow(r,3))))+(((-2703705630)*((M)*(pow(r,4))))+((3316289429)*(pow(r,5)))))))))))+(((34)*((pow(a,12))*((pow(r,14))*(((491520)*(pow(M,6)))+(((-3072000)*((pow(M,5))*(r)))+(((10602496)*((pow(M,4))*(pow(r,2))))+(((-26980864)*((pow(M,3))*(pow(r,3))))+(((57510000)*((pow(M,2))*(pow(r,4))))+(((-113016140)*((M)*(pow(r,5))))+((241122125)*(pow(r,6))))))))))))+(((2)*((pow(a,20))*((pow(r,6))*(((268468224)*(pow(M,6)))+(((-1096605696)*((pow(M,5))*(r)))+(((2230433792)*((pow(M,4))*(pow(r,2))))+(((-3147223552)*((pow(M,3))*(pow(r,3))))+(((3693736080)*((pow(M,2))*(pow(r,4))))+(((-4167979532)*((M)*(pow(r,5))))+((5507223523)*(pow(r,6))))))))))))+(((34)*((pow(a,14))*((pow(r,11))*(((-917504)*(pow(M,7)))+(((5177344)*((pow(M,6))*(r)))+(((-16183296)*((pow(M,5))*(pow(r,2))))+(((37251072)*((pow(M,4))*(pow(r,3))))+(((-71143296)*((pow(M,3))*(pow(r,4))))+(((121453248)*((pow(M,2))*(pow(r,5))))+(((-199351418)*((M)*(pow(r,6))))+((366772147)*(pow(r,7)))))))))))))+(((2)*((pow(a,18))*((pow(r,7))*(((-133038080)*(pow(M,7)))+(((608239616)*((pow(M,6))*(r)))+(((-1426452480)*((pow(M,5))*(pow(r,2))))+(((2358319104)*((pow(M,4))*(pow(r,3))))+(((-3213264768)*((pow(M,3))*(pow(r,4))))+(((4001831232)*((pow(M,2))*(pow(r,5))))+(((-4969374746)*((M)*(pow(r,6))))+((7214794013)*(pow(r,7)))))))))))))+((32)*((pow(a,16))*((pow(r,8))*(((1835008)*(pow(M,8)))+(((-9289728)*((pow(M,7))*(r)))+(((26214400)*((pow(M,6))*(pow(r,2))))+(((-54641664)*((pow(M,5))*(pow(r,3))))+(((94371840)*((pow(M,4))*(pow(r,4))))+(((-144288144)*((pow(M,3))*(pow(r,5))))+(((205520896)*((pow(M,2))*(pow(r,6))))+(((-289864575)*((M)*(pow(r,7))))+((469762048)*(pow(r,8))))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((765765)*((pow((pow(a,2))+(pow(r,2)),18))*(expr[3])))))))))))).cast<double>());
}

void compute_coeffs_688(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[688] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.0001656668526785714285714285714285714285714285714285714285714285714285714285714285714285714285714285714"))*((pow(a,-18))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*(((-1)*((a)*((r)*((((3363003)*(pow(a,32)))+(((-42)*((pow(a,30))*((((483062)*(M))+((-1039613)*(r)))*(r))))+(((-510510)*((pow(a,2))*((((2)*(M))+((-25)*(r)))*(pow(r,29)))))+(((765765)*(pow(r,32)))+(((102102)*((pow(a,4))*((pow(r,26))*(((16)*(pow(M,2)))+(((-156)*((M)*(r)))+((979)*(pow(r,2))))))))+(((42)*((pow(a,28))*((pow(r,2))*(((2058256)*(pow(M,2)))+(((-4704612)*((M)*(r)))+((6500179)*(pow(r,2))))))))+(((14586)*((pow(a,6))*((pow(r,23))*(((-192)*(pow(M,3)))+(((1632)*((pow(M,2))*(r)))+(((-7970)*((M)*(pow(r,2))))+((33491)*(pow(r,3)))))))))+(((6)*((pow(a,26))*((pow(r,3))*(((-41361216)*(pow(M,3)))+(((110851680)*((pow(M,2))*(r)))+(((-151430110)*((M)*(pow(r,2))))+((181612115)*(pow(r,3)))))))))+(((4862)*((pow(a,8))*((pow(r,20))*(((1024)*(pow(M,4)))+(((-7808)*((pow(M,3))*(r)))+(((33216)*((pow(M,2))*(pow(r,2))))+(((-108344)*((M)*(pow(r,3))))+((343069)*(pow(r,4))))))))))+(((2)*((pow(a,24))*((pow(r,4))*(((241828864)*(pow(M,4)))+(((-757178752)*((pow(M,3))*(r)))+(((1168105920)*((pow(M,2))*(pow(r,2))))+(((-1316941000)*((M)*(pow(r,3))))+((1549314205)*(pow(r,4))))))))))+(((442)*((pow(a,10))*((pow(r,17))*(((-20480)*(pow(M,5)))+(((141312)*((pow(M,4))*(r)))+(((-539072)*((pow(M,3))*(pow(r,2))))+(((1530400)*((pow(M,2))*(pow(r,3))))+(((-3751350)*((M)*(pow(r,4))))+((9551335)*(pow(r,5)))))))))))+(((2)*((pow(a,22))*((pow(r,5))*(((-317001728)*(pow(M,5)))+(((1142126592)*((pow(M,4))*(r)))+(((-2023348928)*((pow(M,3))*(pow(r,2))))+(((2503422560)*((pow(M,2))*(pow(r,3))))+(((-2703705630)*((M)*(pow(r,4))))+((3316289429)*(pow(r,5)))))))))))+(((34)*((pow(a,12))*((pow(r,14))*(((491520)*(pow(M,6)))+(((-3072000)*((pow(M,5))*(r)))+(((10602496)*((pow(M,4))*(pow(r,2))))+(((-26980864)*((pow(M,3))*(pow(r,3))))+(((57510000)*((pow(M,2))*(pow(r,4))))+(((-113016140)*((M)*(pow(r,5))))+((241122125)*(pow(r,6))))))))))))+(((2)*((pow(a,20))*((pow(r,6))*(((268468224)*(pow(M,6)))+(((-1096605696)*((pow(M,5))*(r)))+(((2230433792)*((pow(M,4))*(pow(r,2))))+(((-3147223552)*((pow(M,3))*(pow(r,3))))+(((3693736080)*((pow(M,2))*(pow(r,4))))+(((-4167979532)*((M)*(pow(r,5))))+((5507223523)*(pow(r,6))))))))))))+(((34)*((pow(a,14))*((pow(r,11))*(((-917504)*(pow(M,7)))+(((5177344)*((pow(M,6))*(r)))+(((-16183296)*((pow(M,5))*(pow(r,2))))+(((37251072)*((pow(M,4))*(pow(r,3))))+(((-71143296)*((pow(M,3))*(pow(r,4))))+(((121453248)*((pow(M,2))*(pow(r,5))))+(((-199351418)*((M)*(pow(r,6))))+((366772147)*(pow(r,7)))))))))))))+(((2)*((pow(a,18))*((pow(r,7))*(((-133038080)*(pow(M,7)))+(((608239616)*((pow(M,6))*(r)))+(((-1426452480)*((pow(M,5))*(pow(r,2))))+(((2358319104)*((pow(M,4))*(pow(r,3))))+(((-3213264768)*((pow(M,3))*(pow(r,4))))+(((4001831232)*((pow(M,2))*(pow(r,5))))+(((-4969374746)*((M)*(pow(r,6))))+((7214794013)*(pow(r,7)))))))))))))+((32)*((pow(a,16))*((pow(r,8))*(((1835008)*(pow(M,8)))+(((-9289728)*((pow(M,7))*(r)))+(((26214400)*((pow(M,6))*(pow(r,2))))+(((-54641664)*((pow(M,5))*(pow(r,3))))+(((94371840)*((pow(M,4))*(pow(r,4))))+(((-144288144)*((pow(M,3))*(pow(r,5))))+(((205520896)*((pow(M,2))*(pow(r,6))))+(((-289864575)*((M)*(pow(r,7))))+((469762048)*(pow(r,8))))))))))))))))))))))))))))))*((expr[0])*(expr[1]))))))+((765765)*((pow((pow(a,2))+(pow(r,2)),18))*((expr[2])*(expr[3])))))))))))).cast<double>());
}

void compute_coeffs_689(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[689] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0001656668526785714285714285714285714285714285714285714285714285714285714285714285714285714285714285714"))*((pow(a,-19))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((-3)*((pow(a,2))*((r)*((M)+((4)*(r))))))+((pow(r,2))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((229376)*(pow(a,32)))+(((765765)*(pow(r,32)))+(((255255)*((pow(a,2))*((pow(r,29))*(((2)*(M))+((47)*(r))))))+(((7)*((pow(a,30))*((r)*(((371034)*(M))+((709805)*(r))))))+(((51051)*((pow(a,4))*((pow(r,26))*(((-8)*(pow(M,2)))+(((148)*((M)*(r)))+((1723)*(pow(r,2))))))))+(((21)*((pow(a,28))*((pow(r,2))*(((-359384)*(pow(M,2)))+(((1372108)*((M)*(r)))+((2148459)*(pow(r,2))))))))+(((7293)*((pow(a,6))*((pow(r,23))*(((64)*(pow(M,3)))+(((-768)*((pow(M,2))*(r)))+(((7146)*((M)*(pow(r,2))))+((54921)*(pow(r,3)))))))))+(((7)*((pow(a,26))*((pow(r,3))*(((2678976)*(pow(M,3)))+(((-8919360)*((pow(M,2))*(r)))+(((21757350)*((M)*(pow(r,2))))+((34390705)*(pow(r,3)))))))))+(((2431)*((pow(a,8))*((pow(r,20))*(((-256)*(pow(M,4)))+(((2432)*((pow(M,3))*(r)))+(((-14640)*((pow(M,2))*(pow(r,2))))+(((91400)*((M)*(pow(r,3))))+((521375)*(pow(r,4))))))))))+(((pow(a,24))*((pow(r,4))*(((-33912576)*(pow(M,4)))+(((119703168)*((pow(M,3))*(r)))+(((-239553360)*((pow(M,2))*(pow(r,2))))+(((508542840)*((M)*(pow(r,3))))+((864994075)*(pow(r,4)))))))))+(((221)*((pow(a,10))*((pow(r,17))*(((4096)*(pow(M,5)))+(((-32768)*((pow(M,4))*(r)))+(((155968)*((pow(M,3))*(pow(r,2))))+(((-628160)*((pow(M,2))*(pow(r,3))))+(((2962150)*((M)*(pow(r,4))))+((13367545)*(pow(r,5)))))))))))+(((pow(a,22))*((pow(r,5))*(((42471424)*(pow(M,5)))+(((-165122048)*((pow(M,4))*(r)))+(((339629632)*((pow(M,3))*(pow(r,2))))+(((-568844800)*((pow(M,2))*(pow(r,3))))+(((1196393270)*((M)*(pow(r,4))))+((2246479391)*(pow(r,5))))))))))+(((17)*((pow(a,12))*((pow(r,14))*(((-81920)*(pow(M,6)))+(((565248)*((pow(M,5))*(r)))+(((-2264064)*((pow(M,4))*(pow(r,2))))+(((7200256)*((pow(M,3))*(pow(r,3))))+(((-21834120)*((pow(M,2))*(pow(r,4))))+(((83015940)*((M)*(pow(r,5))))+((308466165)*(pow(r,6))))))))))))+(((pow(a,20))*((pow(r,6))*(((-34881536)*(pow(M,6)))+(((150183936)*((pow(M,5))*(r)))+(((-337107968)*((pow(M,4))*(pow(r,2))))+(((570859008)*((pow(M,3))*(pow(r,3))))+(((-938467560)*((pow(M,2))*(pow(r,4))))+(((2091324068)*((M)*(pow(r,5))))+((4392521995)*(pow(r,6)))))))))))+(((17)*((pow(a,14))*((pow(r,11))*(((131072)*(pow(M,7)))+(((-786432)*((pow(M,6))*(r)))+(((2715648)*((pow(M,5))*(pow(r,2))))+(((-7262208)*((pow(M,4))*(pow(r,3))))+(((17363584)*((pow(M,3))*(pow(r,4))))+(((-42303744)*((pow(M,2))*(pow(r,5))))+(((135213554)*((M)*(pow(r,6))))+((425078129)*(pow(r,7)))))))))))))+(((pow(a,18))*((pow(r,7))*(((16908288)*(pow(M,7)))+(((-80347136)*((pow(M,6))*(r)))+(((202616832)*((pow(M,5))*(pow(r,2))))+(((-380215296)*((pow(M,4))*(pow(r,3))))+(((640341632)*((pow(M,3))*(pow(r,4))))+(((-1138187904)*((pow(M,2))*(pow(r,5))))+(((2790876858)*((M)*(pow(r,6))))+((6623760059)*(pow(r,7))))))))))))+((pow(a,16))*((pow(r,8))*(((-3670016)*(pow(M,8)))+(((19136512)*((pow(M,7))*(r)))+(((-57442304)*((pow(M,6))*(pow(r,2))))+(((132366336)*((pow(M,5))*(pow(r,3))))+(((-265904640)*((pow(M,4))*(pow(r,4))))+(((509961984)*((pow(M,3))*(pow(r,5))))+(((-1040309984)*((pow(M,2))*(pow(r,6))))+(((2878359568)*((M)*(pow(r,7))))+((7806057343)*(pow(r,8)))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((765765)*((r)*((pow((pow(a,2))+(pow(r,2)),16))*(((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))))*(expr[3]))))))))))))))).cast<double>());
}
