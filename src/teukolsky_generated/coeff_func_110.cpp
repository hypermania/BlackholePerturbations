
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_550(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[550] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.001464843750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-15))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((10)*(pow(a,16)))+(((5)*((pow(a,14))*((r)*(((90)*(M))+((7)*(r))))))+(((858)*((pow(r,14))*(((2)*(pow(M,2)))+(((55)*((M)*(r)))+((-28)*(pow(r,2)))))))+(((-10)*((pow(a,12))*((pow(r,2))*(((-50)*(pow(M,2)))+(((923)*((M)*(r)))+((640)*(pow(r,2))))))))+(((33)*((pow(a,2))*((pow(r,11))*(((192)*(pow(M,3)))+(((5496)*((pow(M,2))*(r)))+(((3174)*((M)*(pow(r,2))))+((-3713)*(pow(r,3)))))))))+(((-1)*((pow(a,10))*((pow(r,3))*(((3776)*(pow(M,3)))+(((30024)*((pow(M,2))*(r)))+(((94782)*((M)*(pow(r,2))))+((52247)*(pow(r,3)))))))))+(((6)*((pow(a,4))*((pow(r,8))*(((1152)*(pow(M,4)))+(((34752)*((pow(M,3))*(r)))+(((68706)*((pow(M,2))*(pow(r,2))))+(((-5487)*((M)*(pow(r,3))))+((-42730)*(pow(r,4))))))))))+(((-2)*((pow(a,8))*((pow(r,4))*(((-384)*(pow(M,4)))+(((-35008)*((pow(M,3))*(r)))+(((3066)*((pow(M,2))*(pow(r,2))))+(((130455)*((M)*(pow(r,3))))+((84299)*(pow(r,4))))))))))+((pow(a,6))*((pow(r,5))*(((2048)*(pow(M,5)))+(((67072)*((pow(M,4))*(r)))+(((275456)*((pow(M,3))*(pow(r,2))))+(((256976)*((pow(M,2))*(pow(r,3))))+(((-266282)*((M)*(pow(r,4))))+((-280651)*(pow(r,5))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((1873)*(pow(a,12)))+(((15015)*(pow(r,12)))+(((1540)*((pow(a,2))*((pow(r,9))*(((23)*(M))+((47)*(r))))))+(((4)*((pow(a,10))*((r)*(((4327)*(M))+((4973)*(r))))))+(((7)*((pow(a,4))*((pow(r,6))*(((2656)*(pow(M,2)))+(((17584)*((M)*(r)))+((20189)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((17632)*(pow(M,2)))+(((86864)*((M)*(r)))+((75773)*(pow(r,2)))))))+((8)*((pow(a,6))*((pow(r,3))*(((80)*(pow(M,3)))+(((4528)*((pow(M,2))*(r)))+(((19653)*((M)*(pow(r,2))))+((17714)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((35)*((pow((pow(a,2))+(pow(r,2)),2))*((((5)*(pow(a,12)))+(((429)*(pow(r,12)))+(((30)*((pow(a,10))*((r)*(((8)*(M))+((5)*(r))))))+(((198)*((pow(a,2))*((pow(r,9))*(((8)*(M))+((9)*(r))))))+(((15)*((pow(a,8))*((pow(r,2))*(((64)*(pow(M,2)))+(((128)*((M)*(r)))+((61)*(pow(r,2))))))))+(((9)*((pow(a,4))*((pow(r,6))*(((192)*(pow(M,2)))+(((512)*((M)*(r)))+((323)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((672)*((pow(M,2))*(r)))+(((1176)*((M)*(pow(r,2))))+((581)*(pow(r,3)))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_551(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[551] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.002929687500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-13))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((5)*(pow(a,12)))+(((429)*(pow(r,12)))+(((30)*((pow(a,10))*((r)*(((8)*(M))+((5)*(r))))))+(((198)*((pow(a,2))*((pow(r,9))*(((8)*(M))+((9)*(r))))))+(((15)*((pow(a,8))*((pow(r,2))*(((64)*(pow(M,2)))+(((128)*((M)*(r)))+((61)*(pow(r,2))))))))+(((9)*((pow(a,4))*((pow(r,6))*(((192)*(pow(M,2)))+(((512)*((M)*(r)))+((323)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((672)*((pow(M,2))*(r)))+(((1176)*((M)*(pow(r,2))))+((581)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((1873)*(pow(a,12)))+(((15015)*(pow(r,12)))+(((1540)*((pow(a,2))*((pow(r,9))*(((23)*(M))+((47)*(r))))))+(((4)*((pow(a,10))*((r)*(((4327)*(M))+((4973)*(r))))))+(((7)*((pow(a,4))*((pow(r,6))*(((2656)*(pow(M,2)))+(((17584)*((M)*(r)))+((20189)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((17632)*(pow(M,2)))+(((86864)*((M)*(r)))+((75773)*(pow(r,2)))))))+((8)*((pow(a,6))*((pow(r,3))*(((80)*(pow(M,3)))+(((4528)*((pow(M,2))*(r)))+(((19653)*((M)*(pow(r,2))))+((17714)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((35)*((pow((pow(a,2))+(pow(r,2)),2))*((((5)*(pow(a,12)))+(((429)*(pow(r,12)))+(((30)*((pow(a,10))*((r)*(((8)*(M))+((5)*(r))))))+(((198)*((pow(a,2))*((pow(r,9))*(((8)*(M))+((9)*(r))))))+(((15)*((pow(a,8))*((pow(r,2))*(((64)*(pow(M,2)))+(((128)*((M)*(r)))+((61)*(pow(r,2))))))))+(((9)*((pow(a,4))*((pow(r,6))*(((192)*(pow(M,2)))+(((512)*((M)*(r)))+((323)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((672)*((pow(M,2))*(r)))+(((1176)*((M)*(pow(r,2))))+((581)*(pow(r,3)))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_552(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[552] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.001464843750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-15))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((((5)*(pow(a,12)))+(((429)*(pow(r,12)))+(((30)*((pow(a,10))*((r)*(((8)*(M))+((5)*(r))))))+(((198)*((pow(a,2))*((pow(r,9))*(((8)*(M))+((9)*(r))))))+(((15)*((pow(a,8))*((pow(r,2))*(((64)*(pow(M,2)))+(((128)*((M)*(r)))+((61)*(pow(r,2))))))))+(((9)*((pow(a,4))*((pow(r,6))*(((192)*(pow(M,2)))+(((512)*((M)*(r)))+((323)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((672)*((pow(M,2))*(r)))+(((1176)*((M)*(pow(r,2))))+((581)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((1873)*(pow(a,12)))+(((15015)*(pow(r,12)))+(((1540)*((pow(a,2))*((pow(r,9))*(((23)*(M))+((47)*(r))))))+(((4)*((pow(a,10))*((r)*(((4327)*(M))+((4973)*(r))))))+(((7)*((pow(a,4))*((pow(r,6))*(((2656)*(pow(M,2)))+(((17584)*((M)*(r)))+((20189)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((17632)*(pow(M,2)))+(((86864)*((M)*(r)))+((75773)*(pow(r,2)))))))+((8)*((pow(a,6))*((pow(r,3))*(((80)*(pow(M,3)))+(((4528)*((pow(M,2))*(r)))+(((19653)*((M)*(pow(r,2))))+((17714)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((35)*((pow((pow(a,2))+(pow(r,2)),2))*((((5)*(pow(a,12)))+(((429)*(pow(r,12)))+(((30)*((pow(a,10))*((r)*(((8)*(M))+((5)*(r))))))+(((198)*((pow(a,2))*((pow(r,9))*(((8)*(M))+((9)*(r))))))+(((15)*((pow(a,8))*((pow(r,2))*(((64)*(pow(M,2)))+(((128)*((M)*(r)))+((61)*(pow(r,2))))))))+(((9)*((pow(a,4))*((pow(r,6))*(((192)*(pow(M,2)))+(((512)*((M)*(r)))+((323)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((672)*((pow(M,2))*(r)))+(((1176)*((M)*(pow(r,2))))+((581)*(pow(r,3)))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_553(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[553] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.005859375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-14))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((5)*(pow(a,12)))+(((429)*(pow(r,12)))+(((30)*((pow(a,10))*((r)*(((8)*(M))+((5)*(r))))))+(((198)*((pow(a,2))*((pow(r,9))*(((8)*(M))+((9)*(r))))))+(((15)*((pow(a,8))*((pow(r,2))*(((64)*(pow(M,2)))+(((128)*((M)*(r)))+((61)*(pow(r,2))))))))+(((9)*((pow(a,4))*((pow(r,6))*(((192)*(pow(M,2)))+(((512)*((M)*(r)))+((323)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((672)*((pow(M,2))*(r)))+(((1176)*((M)*(pow(r,2))))+((581)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((1873)*(pow(a,12)))+(((15015)*(pow(r,12)))+(((1540)*((pow(a,2))*((pow(r,9))*(((23)*(M))+((47)*(r))))))+(((4)*((pow(a,10))*((r)*(((4327)*(M))+((4973)*(r))))))+(((7)*((pow(a,4))*((pow(r,6))*(((2656)*(pow(M,2)))+(((17584)*((M)*(r)))+((20189)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((17632)*(pow(M,2)))+(((86864)*((M)*(r)))+((75773)*(pow(r,2)))))))+((8)*((pow(a,6))*((pow(r,3))*(((80)*(pow(M,3)))+(((4528)*((pow(M,2))*(r)))+(((19653)*((M)*(pow(r,2))))+((17714)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((35)*((pow((pow(a,2))+(pow(r,2)),2))*((((5)*(pow(a,12)))+(((429)*(pow(r,12)))+(((30)*((pow(a,10))*((r)*(((8)*(M))+((5)*(r))))))+(((198)*((pow(a,2))*((pow(r,9))*(((8)*(M))+((9)*(r))))))+(((15)*((pow(a,8))*((pow(r,2))*(((64)*(pow(M,2)))+(((128)*((M)*(r)))+((61)*(pow(r,2))))))))+(((9)*((pow(a,4))*((pow(r,6))*(((192)*(pow(M,2)))+(((512)*((M)*(r)))+((323)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((672)*((pow(M,2))*(r)))+(((1176)*((M)*(pow(r,2))))+((581)*(pow(r,3)))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_554(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[554] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0001220703125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.9511897312113418531323991584789660570410750531734017398944334776513036033630068815595926266925440328"))*((pow(a,-17))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((10)*(pow(a,16)))+(((5)*((pow(a,14))*((r)*(((90)*(M))+((7)*(r))))))+(((858)*((pow(r,14))*(((2)*(pow(M,2)))+(((55)*((M)*(r)))+((-28)*(pow(r,2)))))))+(((-10)*((pow(a,12))*((pow(r,2))*(((-50)*(pow(M,2)))+(((923)*((M)*(r)))+((640)*(pow(r,2))))))))+(((33)*((pow(a,2))*((pow(r,11))*(((192)*(pow(M,3)))+(((5496)*((pow(M,2))*(r)))+(((3174)*((M)*(pow(r,2))))+((-3713)*(pow(r,3)))))))))+(((-1)*((pow(a,10))*((pow(r,3))*(((3776)*(pow(M,3)))+(((30024)*((pow(M,2))*(r)))+(((94782)*((M)*(pow(r,2))))+((52247)*(pow(r,3)))))))))+(((6)*((pow(a,4))*((pow(r,8))*(((1152)*(pow(M,4)))+(((34752)*((pow(M,3))*(r)))+(((68706)*((pow(M,2))*(pow(r,2))))+(((-5487)*((M)*(pow(r,3))))+((-42730)*(pow(r,4))))))))))+(((-2)*((pow(a,8))*((pow(r,4))*(((-384)*(pow(M,4)))+(((-35008)*((pow(M,3))*(r)))+(((3066)*((pow(M,2))*(pow(r,2))))+(((130455)*((M)*(pow(r,3))))+((84299)*(pow(r,4))))))))))+((pow(a,6))*((pow(r,5))*(((2048)*(pow(M,5)))+(((67072)*((pow(M,4))*(r)))+(((275456)*((pow(M,3))*(pow(r,2))))+(((256976)*((pow(M,2))*(pow(r,3))))+(((-266282)*((M)*(pow(r,4))))+((-280651)*(pow(r,5))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((30563)*(pow(a,16)))+(((765765)*(pow(r,16)))+(((30030)*((pow(a,2))*((pow(r,13))*(((86)*(M))+((161)*(r))))))+(((2)*((pow(a,14))*((r)*(((270778)*(M))+((257641)*(r))))))+(((6006)*((pow(a,4))*((pow(r,10))*(((432)*(pow(M,2)))+(((2148)*((M)*(r)))+((2173)*(pow(r,2))))))))+(((6)*((pow(a,12))*((pow(r,2))*(((249104)*(pow(M,2)))+(((790660)*((M)*(r)))+((520811)*(pow(r,2))))))))+(((198)*((pow(a,6))*((pow(r,7))*(((3776)*(pow(M,3)))+(((46752)*((pow(M,2))*(r)))+(((132962)*((M)*(pow(r,2))))+((98809)*(pow(r,3)))))))))+(((2)*((pow(a,10))*((pow(r,3))*(((359488)*(pow(M,3)))+(((3528480)*((pow(M,2))*(r)))+(((8067846)*((M)*(pow(r,2))))+((4864837)*(pow(r,3)))))))))+((8)*((pow(a,8))*((pow(r,4))*(((1792)*(pow(M,4)))+(((183328)*((pow(M,3))*(r)))+(((1528080)*((pow(M,2))*(pow(r,2))))+(((3492682)*((M)*(pow(r,3))))+((2208967)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((pow((pow(a,2))+(pow(r,2)),2))*((((7)*(pow(a,16)))+(((2431)*(pow(r,16)))+(((112)*((pow(a,14))*((r)*(((5)*(M))+((3)*(r))))))+(((2288)*((pow(a,2))*((pow(r,13))*(((5)*(M))+((6)*(r))))))+(((572)*((pow(a,4))*((pow(r,10))*(((32)*(pow(M,2)))+(((88)*((M)*(r)))+((57)*(pow(r,2))))))))+(((28)*((pow(a,12))*((pow(r,2))*(((160)*(pow(M,2)))+(((280)*((M)*(r)))+((117)*(pow(r,2))))))))+(((112)*((pow(a,10))*((pow(r,3))*(((64)*(pow(M,3)))+(((256)*((pow(M,2))*(r)))+(((323)*((M)*(pow(r,2))))+((124)*(pow(r,3)))))))))+(((176)*((pow(a,6))*((pow(r,7))*(((64)*(pow(M,3)))+(((320)*((pow(M,2))*(r)))+(((503)*((M)*(pow(r,2))))+((239)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((9216)*((pow(M,3))*(r)))+(((31104)*((pow(M,2))*(pow(r,2))))+(((39264)*((M)*(pow(r,3))))+((15849)*(pow(r,4))))))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}
