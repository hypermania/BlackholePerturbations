
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_290(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[290] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.02343750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.08362420100070907707083804724612319310483277122473564973537084974932814650837318816667645408824322535"))*((pow(a,-14))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((49152)*(pow(a,24)))+(((14549535)*(pow(r,24)))+(((255255)*((pow(a,2))*((pow(r,21))*(((254)*(M))+((557)*(r))))))+(((3)*((pow(a,22))*((r)*(((1297118)*(M))+((845167)*(r))))))+(((3003)*((pow(a,4))*((pow(r,18))*(((31256)*(pow(M,2)))+(((184644)*((M)*(r)))+((208839)*(pow(r,2))))))))+(((pow(a,20))*((pow(r,2))*(((29571560)*(pow(M,2)))+(((68485100)*((M)*(r)))+((32039369)*(pow(r,2)))))))+(((429)*((pow(a,6))*((pow(r,15))*(((106688)*(pow(M,3)))+(((1590304)*((pow(M,2))*(r)))+(((4911738)*((M)*(pow(r,2))))+((3838869)*(pow(r,3)))))))))+(((pow(a,18))*((pow(r,3))*(((39568832)*(pow(M,3)))+(((295925728)*((pow(M,2))*(r)))+(((470931594)*((M)*(pow(r,2))))+((196700679)*(pow(r,3))))))))+(((286)*((pow(a,8))*((pow(r,12))*(((8960)*(pow(M,4)))+(((942272)*((pow(M,3))*(r)))+(((7522368)*((pow(M,2))*(pow(r,2))))+(((16344344)*((M)*(pow(r,3))))+((9992189)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((3709440)*(pow(M,4)))+(((244831872)*((pow(M,3))*(r)))+(((1249040576)*((pow(M,2))*(pow(r,2))))+(((1770806352)*((M)*(pow(r,3))))+((722793771)*(pow(r,4)))))))))+(((26)*((pow(a,10))*((pow(r,9))*(((-14336)*(pow(M,5)))+(((430080)*((pow(M,4))*(r)))+(((25383840)*((pow(M,3))*(pow(r,2))))+(((147617680)*((pow(M,2))*(pow(r,3))))+(((257037690)*((M)*(pow(r,4))))+((132179979)*(pow(r,5)))))))))))+(((2)*((pow(a,14))*((pow(r,5))*(((-272384)*(pow(M,5)))+(((6737920)*((pow(M,4))*(r)))+(((314632480)*((pow(M,3))*(pow(r,2))))+(((1467564784)*((pow(M,2))*(pow(r,3))))+(((2072476826)*((M)*(pow(r,4))))+((874023017)*(pow(r,5)))))))))))+((2)*((pow(a,12))*((pow(r,6))*(((28672)*(pow(M,6)))+(((-458752)*((pow(M,5))*(r)))+(((9192960)*((pow(M,4))*(pow(r,2))))+(((430130560)*((pow(M,3))*(pow(r,3))))+(((2113742120)*((pow(M,2))*(pow(r,4))))+(((3203233572)*((M)*(pow(r,5))))+((1459336053)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),6))*((((323)*(pow(r,15)))+(((7)*((pow(a,14))*(((2)*(M))+(r))))+(((17)*((pow(a,2))*((pow(r,12))*(((110)*(M))+((97)*(r))))))+(((7)*((pow(a,12))*((r)*(((48)*(pow(M,2)))+(((60)*((M)*(r)))+((19)*(pow(r,2))))))))+(((3)*((pow(a,4))*((pow(r,9))*(((1296)*(pow(M,2)))+(((2444)*((M)*(r)))+((1157)*(pow(r,2))))))))+(((21)*((pow(a,10))*((pow(r,2))*(((64)*(pow(M,3)))+(((160)*((pow(M,2))*(r)))+(((138)*((M)*(pow(r,2))))+((39)*(pow(r,3)))))))))+(((pow(a,6))*((pow(r,6))*(((3392)*(pow(M,3)))+(((10464)*((pow(M,2))*(r)))+(((11154)*((M)*(pow(r,2))))+((3861)*(pow(r,3))))))))+((pow(a,8))*((pow(r,3))*(((1024)*(pow(M,4)))+(((4736)*((pow(M,3))*(r)))+(((9600)*((pow(M,2))*(pow(r,2))))+(((8184)*((M)*(pow(r,3))))+((2409)*(pow(r,4))))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_291(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[291] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.3750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-8))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*(((-1)*((a)*((r)*((((279)*(pow(a,12)))+(((-140)*((pow(a,2))*(((M)+((-5)*(r)))*(pow(r,9)))))+(((105)*(pow(r,12)))+(((4)*((pow(a,10))*((r)*(((-163)*(M))+((337)*(r))))))+(((7)*((pow(a,4))*((pow(r,6))*(((32)*(pow(M,2)))+(((-112)*((M)*(r)))+((283)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((800)*(pow(M,2)))+(((-1808)*((M)*(r)))+((2755)*(pow(r,2)))))))+((8)*((pow(a,6))*((pow(r,3))*(((-48)*(pow(M,3)))+(((128)*((pow(M,2))*(r)))+(((-225)*((M)*(pow(r,2))))+((384)*(pow(r,3)))))))))))))))*((expr[0])*(expr[1]))))))+((105)*((pow((pow(a,2))+(pow(r,2)),8))*((expr[2])*(expr[3])))))))))))).cast<double>());
}

void compute_coeffs_292(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[292] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.06250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.612451549659709930473322646060754226226879261121714677587318477852774990205137640592030853343446129"))*((pow(a,-10))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((a)*((r)*(((3465)*((pow(r,20))*(((-2)*(M))+(r))))+(((2245)*((pow(a,20))*(((2)*(M))+(r))))+(((210)*((pow(a,2))*((pow(r,17))*(((-82)*(pow(M,2)))+(((-248)*((M)*(r)))+((161)*(pow(r,2))))))))+(((10)*((pow(a,18))*((r)*(((-194)*(pow(M,2)))+(((4296)*((M)*(r)))+((2421)*(pow(r,2))))))))+(((-21)*((pow(a,4))*((pow(r,14))*(((224)*(pow(M,3)))+(((6224)*((pow(M,2))*(r)))+(((7638)*((M)*(pow(r,2))))+((-7053)*(pow(r,3)))))))))+(((pow(a,16))*((pow(r,2))*(((-19936)*(pow(M,3)))+(((-45424)*((pow(M,2))*(r)))+(((169638)*((M)*(pow(r,2))))+((116133)*(pow(r,3))))))))+(((24)*((pow(a,6))*((pow(r,11))*(((104)*(pow(M,4)))+(((-1384)*((pow(M,3))*(r)))+(((-17876)*((pow(M,2))*(pow(r,2))))+(((-10048)*((M)*(pow(r,3))))+((15977)*(pow(r,4))))))))))+(((8)*((pow(a,14))*((pow(r,3))*(((1912)*(pow(M,4)))+(((-11128)*((pow(M,3))*(r)))+(((-30088)*((pow(M,2))*(pow(r,2))))+(((44624)*((M)*(pow(r,3))))+((40891)*(pow(r,4))))))))))+(((-2)*((pow(a,8))*((pow(r,8))*(((1024)*(pow(M,5)))+(((-7552)*((pow(M,4))*(r)))+(((50320)*((pow(M,3))*(pow(r,2))))+(((395560)*((pow(M,2))*(pow(r,3))))+(((58490)*((M)*(pow(r,4))))+((-324665)*(pow(r,5)))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((-4096)*(pow(M,5)))+(((20352)*((pow(M,4))*(r)))+(((-83280)*((pow(M,3))*(pow(r,2))))+(((-304600)*((pow(M,2))*(pow(r,3))))+(((206130)*((M)*(pow(r,4))))+((300165)*(pow(r,5)))))))))))+((4)*((pow(a,10))*((pow(r,5))*(((512)*(pow(M,6)))+(((-2560)*((pow(M,5))*(r)))+(((9504)*((pow(M,4))*(pow(r,2))))+(((-42400)*((pow(M,3))*(pow(r,3))))+(((-221890)*((pow(M,2))*(pow(r,4))))+(((48840)*((M)*(pow(r,5))))+((187755)*(pow(r,6))))))))))))))))))))))))+((-315)*((pow((pow(a,2))+(pow(r,2)),8))*(((pow(a,4))+(((11)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((5)*(M))+((3)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_293(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[293] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.01562500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.5559594491425692918556411711519360281021923504648278133485961923502843354175494660168202602962809760"))*((pow(a,-12))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((a)*((r)*(((-225225)*((((2)*(M))+((-1)*(r)))*(pow(r,24))))+(((37495)*((pow(a,24))*(((2)*(M))+(r))))+(((30030)*((pow(a,2))*((pow(r,21))*(((-58)*(pow(M,2)))+(((-122)*((M)*(r)))+((83)*(pow(r,2))))))))+(((10)*((pow(a,22))*((r)*(((49118)*(pow(M,2)))+(((139106)*((M)*(r)))+((61023)*(pow(r,2))))))))+(((-4620)*((pow(a,4))*((pow(r,18))*(((396)*(pow(M,3)))+(((3176)*((pow(M,2))*(r)))+(((2585)*((M)*(pow(r,2))))+((-2721)*(pow(r,3)))))))))+(((4)*((pow(a,20))*((pow(r,2))*(((-253604)*(pow(M,3)))+(((847544)*((pow(M,2))*(r)))+(((2397877)*((M)*(pow(r,2))))+((1067837)*(pow(r,3)))))))))+(((-66)*((pow(a,6))*((pow(r,15))*(((3712)*(pow(M,4)))+(((214336)*((pow(M,3))*(r)))+(((818898)*((pow(M,2))*(pow(r,2))))+(((256094)*((M)*(pow(r,3))))+((-578423)*(pow(r,4))))))))))+(((2)*((pow(a,18))*((pow(r,3))*(((-326016)*(pow(M,4)))+(((-4709696)*((pow(M,3))*(r)))+(((3715218)*((pow(M,2))*(pow(r,2))))+(((17789282)*((M)*(pow(r,3))))+((8696233)*(pow(r,4))))))))))+(((11)*((pow(a,8))*((pow(r,12))*(((7168)*(pow(M,5)))+(((-151552)*((pow(M,4))*(r)))+(((-4327232)*((pow(M,3))*(pow(r,2))))+(((-10295744)*((pow(M,2))*(pow(r,3))))+(((345014)*((M)*(pow(r,4))))+((7060231)*(pow(r,5)))))))))))+(((pow(a,16))*((pow(r,4))*(((275456)*(pow(M,5)))+(((-3223552)*((pow(M,4))*(r)))+(((-36843456)*((pow(M,3))*(pow(r,2))))+(((-3316928)*((pow(M,2))*(pow(r,3))))+(((81080146)*((M)*(pow(r,4))))+((46450803)*(pow(r,5))))))))))+(((4)*((pow(a,14))*((pow(r,5))*(((-23552)*(pow(M,6)))+(((204800)*((pow(M,5))*(r)))+(((-1672640)*((pow(M,4))*(pow(r,2))))+(((-20074080)*((pow(M,3))*(pow(r,3))))+(((-12433010)*((pow(M,2))*(pow(r,4))))+(((29779610)*((M)*(pow(r,5))))+((21589855)*(pow(r,6))))))))))))+(((4)*((pow(a,10))*((pow(r,9))*(((-9216)*(pow(M,6)))+(((106496)*((pow(M,5))*(r)))+(((-1199680)*((pow(M,4))*(pow(r,2))))+(((-22722144)*((pow(M,3))*(pow(r,3))))+(((-36565006)*((pow(M,2))*(pow(r,4))))+(((14493722)*((M)*(pow(r,5))))+((27836577)*(pow(r,6))))))))))))+((8)*((pow(a,12))*((pow(r,6))*(((2048)*(pow(M,7)))+(((-16384)*((pow(M,6))*(r)))+(((111360)*((pow(M,5))*(pow(r,2))))+(((-936960)*((pow(M,4))*(pow(r,3))))+(((-13432940)*((pow(M,3))*(pow(r,4))))+(((-14500800)*((pow(M,2))*(pow(r,5))))+(((13918555)*((M)*(pow(r,6))))+((14394800)*(pow(r,7)))))))))))))))))))))))))))+((-3465)*((pow((pow(a,2))+(pow(r,2)),8))*(((pow(a,8))+(((65)*(pow(r,8)))+(((52)*((pow(a,2))*((pow(r,5))*(((4)*(M))+((3)*(r))))))+(((4)*((pow(a,6))*((r)*(((12)*(M))+((7)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((80)*(pow(M,2)))+(((128)*((M)*(r)))+((59)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_294(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[294] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.007812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.08362420100070907707083804724612319310483277122473564973537084974932814650837318816667645408824322535"))*((pow(a,-14))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*(((-1)*((a)*((r)*((((643083)*(pow(a,24)))+(((14549535)*(pow(r,24)))+(((1021020)*((pow(a,2))*((pow(r,21))*(((44)*(M))+((149)*(r))))))+(((28)*((pow(a,22))*((r)*(((419776)*(M))+((485495)*(r))))))+(((6006)*((pow(a,4))*((pow(r,18))*(((6008)*(pow(M,2)))+(((68792)*((M)*(r)))+((120247)*(pow(r,2))))))))+(((14)*((pow(a,20))*((pow(r,2))*(((2123672)*(pow(M,2)))+(((10519192)*((M)*(r)))+((8180131)*(pow(r,2))))))))+(((1716)*((pow(a,6))*((pow(r,15))*(((1920)*(pow(M,3)))+(((165344)*((pow(M,2))*(r)))+(((990288)*((M)*(pow(r,2))))+((1197705)*(pow(r,3)))))))))+(((4)*((pow(a,18))*((pow(r,3))*(((1353600)*(pow(M,3)))+(((61493216)*((pow(M,2))*(r)))+(((200140308)*((M)*(pow(r,2))))+((134927775)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,12))*(((-5120)*(pow(M,4)))+(((148480)*((pow(M,3))*(r)))+(((6815808)*((pow(M,2))*(pow(r,2))))+(((28755904)*((M)*(pow(r,3))))+((27258115)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((-1448960)*(pow(M,4)))+(((29588480)*((pow(M,3))*(r)))+(((887157184)*((pow(M,2))*(pow(r,2))))+(((2512539968)*((M)*(pow(r,3))))+((1628487625)*(pow(r,4)))))))))+(((104)*((pow(a,10))*((pow(r,9))*(((2048)*(pow(M,5)))+(((-33280)*((pow(M,4))*(r)))+(((550720)*((pow(M,3))*(pow(r,2))))+(((18366032)*((pow(M,2))*(pow(r,3))))+(((62259452)*((M)*(pow(r,4))))+((49787971)*(pow(r,5)))))))))))+(((8)*((pow(a,14))*((pow(r,5))*(((45056)*(pow(M,5)))+(((-611840)*((pow(M,4))*(r)))+(((8453440)*((pow(M,3))*(pow(r,2))))+(((227865296)*((pow(M,2))*(pow(r,3))))+(((634308104)*((M)*(pow(r,4))))+((420535085)*(pow(r,5)))))))))))+((4)*((pow(a,12))*((pow(r,6))*(((-12288)*(pow(M,6)))+(((143360)*((pow(M,5))*(r)))+(((-1543680)*((pow(M,4))*(pow(r,2))))+(((20697600)*((pow(M,3))*(pow(r,3))))+(((583764920)*((pow(M,2))*(pow(r,4))))+(((1730238552)*((M)*(pow(r,5))))+((1231153095)*(pow(r,6))))))))))))))))))))))))*((expr[0])*(expr[1]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),8))*(((pow(a,12))+(((323)*(pow(r,12)))+(((12)*((pow(a,10))*((r)*(((7)*(M))+((4)*(r))))))+(((204)*((pow(a,2))*((pow(r,9))*(((7)*(M))+((6)*(r))))))+(((3)*((pow(a,8))*((pow(r,2))*(((224)*(pow(M,2)))+(((336)*((M)*(r)))+((131)*(pow(r,2))))))))+(((3)*((pow(a,4))*((pow(r,6))*(((672)*(pow(M,2)))+(((1232)*((M)*(r)))+((593)*(pow(r,2))))))))+((8)*((pow(a,6))*((pow(r,3))*(((112)*(pow(M,3)))+(((336)*((pow(M,2))*(r)))+(((399)*((M)*(pow(r,2))))+((153)*(pow(r,3)))))))))))))))*((expr[2])*(expr[3])))))))))))))).cast<double>());
}
