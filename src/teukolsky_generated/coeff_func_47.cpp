
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_235(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[235] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.01562500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.669045920792560372951740698944006107565542879767808631529961041172119508474714341804554631752452914"))*((pow(a,-11))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,8))+(((pow(a,6))*((r)*(((9)*(M))+(r))))+(((7)*((pow(r,6))*(((2)*(pow(M,2)))+(((19)*((M)*(r)))+((-10)*(pow(r,2)))))))+(((-1)*((pow(a,4))*((pow(r,2))*(((34)*(pow(M,2)))+(((89)*((M)*(r)))+((59)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((24)*(pow(M,3)))+(((244)*((pow(M,2))*(r)))+(((11)*((M)*(pow(r,2))))+((-129)*(pow(r,3))))))))))))*(((a)*((r)*(((3465)*((pow(r,16))*(((-2)*(M))+(r))))+(((919)*((pow(a,16))*(((2)*(M))+(r))))+(((210)*((pow(a,2))*((pow(r,13))*(((-118)*(pow(M,2)))+(((-146)*((M)*(r)))+((119)*(pow(r,2))))))))+(((2)*((pow(a,14))*((r)*(((2854)*(pow(M,2)))+(((10206)*((M)*(r)))+((4849)*(pow(r,2))))))))+(((-42)*((pow(a,4))*((pow(r,10))*(((552)*(pow(M,3)))+(((2712)*((pow(M,2))*(r)))+(((904)*((M)*(pow(r,2))))+((-1859)*(pow(r,3)))))))))+(((2)*((pow(a,12))*((pow(r,2))*(((-8520)*(pow(M,3)))+(((4344)*((pow(M,2))*(r)))+(((39320)*((M)*(pow(r,2))))+((21185)*(pow(r,3)))))))))+(((2)*((pow(a,10))*((pow(r,3))*(((-1856)*(pow(M,4)))+(((-37792)*((pow(M,3))*(r)))+(((-23874)*((pow(M,2))*(pow(r,2))))+(((72130)*((M)*(pow(r,3))))+((51005)*(pow(r,4))))))))))+(((2)*((pow(a,6))*((pow(r,7))*(((-1216)*(pow(M,4)))+(((-43936)*((pow(M,3))*(r)))+(((-100734)*((pow(M,2))*(pow(r,2))))+(((14594)*((M)*(pow(r,3))))+((68867)*(pow(r,4))))))))))+((4)*((pow(a,8))*((pow(r,4))*(((128)*(pow(M,5)))+(((-1536)*((pow(M,4))*(r)))+(((-30808)*((pow(M,3))*(pow(r,2))))+(((-40768)*((pow(M,2))*(pow(r,3))))+(((31905)*((M)*(pow(r,4))))+((37400)*(pow(r,5)))))))))))))))))))))+((-105)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,8))+(((33)*(pow(r,8)))+(((4)*((pow(a,6))*((r)*(((8)*(M))+((5)*(r))))))+(((12)*((pow(a,2))*((pow(r,5))*(((8)*(M))+((7)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((35)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_236(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[236] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.01562500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.669045920792560372951740698944006107565542879767808631529961041172119508474714341804554631752452914"))*((pow(a,-9))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((7)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((3)*(M))+((2)*(r))))))))*(((a)*((r)*(((3465)*((pow(r,16))*(((-2)*(M))+(r))))+(((919)*((pow(a,16))*(((2)*(M))+(r))))+(((210)*((pow(a,2))*((pow(r,13))*(((-118)*(pow(M,2)))+(((-146)*((M)*(r)))+((119)*(pow(r,2))))))))+(((2)*((pow(a,14))*((r)*(((2854)*(pow(M,2)))+(((10206)*((M)*(r)))+((4849)*(pow(r,2))))))))+(((-42)*((pow(a,4))*((pow(r,10))*(((552)*(pow(M,3)))+(((2712)*((pow(M,2))*(r)))+(((904)*((M)*(pow(r,2))))+((-1859)*(pow(r,3)))))))))+(((2)*((pow(a,12))*((pow(r,2))*(((-8520)*(pow(M,3)))+(((4344)*((pow(M,2))*(r)))+(((39320)*((M)*(pow(r,2))))+((21185)*(pow(r,3)))))))))+(((2)*((pow(a,10))*((pow(r,3))*(((-1856)*(pow(M,4)))+(((-37792)*((pow(M,3))*(r)))+(((-23874)*((pow(M,2))*(pow(r,2))))+(((72130)*((M)*(pow(r,3))))+((51005)*(pow(r,4))))))))))+(((2)*((pow(a,6))*((pow(r,7))*(((-1216)*(pow(M,4)))+(((-43936)*((pow(M,3))*(r)))+(((-100734)*((pow(M,2))*(pow(r,2))))+(((14594)*((M)*(pow(r,3))))+((68867)*(pow(r,4))))))))))+((4)*((pow(a,8))*((pow(r,4))*(((128)*(pow(M,5)))+(((-1536)*((pow(M,4))*(r)))+(((-30808)*((pow(M,3))*(pow(r,2))))+(((-40768)*((pow(M,2))*(pow(r,3))))+(((31905)*((M)*(pow(r,4))))+((37400)*(pow(r,5)))))))))))))))))))))+((-105)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,8))+(((33)*(pow(r,8)))+(((4)*((pow(a,6))*((r)*(((8)*(M))+((5)*(r))))))+(((12)*((pow(a,2))*((pow(r,5))*(((8)*(M))+((7)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((35)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_237(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[237] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.007812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.669045920792560372951740698944006107565542879767808631529961041172119508474714341804554631752452914"))*((pow(a,-11))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((pow(a,4))+(((7)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((3)*(M))+((2)*(r))))))))*(((a)*((r)*(((3465)*((pow(r,16))*(((-2)*(M))+(r))))+(((919)*((pow(a,16))*(((2)*(M))+(r))))+(((210)*((pow(a,2))*((pow(r,13))*(((-118)*(pow(M,2)))+(((-146)*((M)*(r)))+((119)*(pow(r,2))))))))+(((2)*((pow(a,14))*((r)*(((2854)*(pow(M,2)))+(((10206)*((M)*(r)))+((4849)*(pow(r,2))))))))+(((-42)*((pow(a,4))*((pow(r,10))*(((552)*(pow(M,3)))+(((2712)*((pow(M,2))*(r)))+(((904)*((M)*(pow(r,2))))+((-1859)*(pow(r,3)))))))))+(((2)*((pow(a,12))*((pow(r,2))*(((-8520)*(pow(M,3)))+(((4344)*((pow(M,2))*(r)))+(((39320)*((M)*(pow(r,2))))+((21185)*(pow(r,3)))))))))+(((2)*((pow(a,10))*((pow(r,3))*(((-1856)*(pow(M,4)))+(((-37792)*((pow(M,3))*(r)))+(((-23874)*((pow(M,2))*(pow(r,2))))+(((72130)*((M)*(pow(r,3))))+((51005)*(pow(r,4))))))))))+(((2)*((pow(a,6))*((pow(r,7))*(((-1216)*(pow(M,4)))+(((-43936)*((pow(M,3))*(r)))+(((-100734)*((pow(M,2))*(pow(r,2))))+(((14594)*((M)*(pow(r,3))))+((68867)*(pow(r,4))))))))))+((4)*((pow(a,8))*((pow(r,4))*(((128)*(pow(M,5)))+(((-1536)*((pow(M,4))*(r)))+(((-30808)*((pow(M,3))*(pow(r,2))))+(((-40768)*((pow(M,2))*(pow(r,3))))+(((31905)*((M)*(pow(r,4))))+((37400)*(pow(r,5)))))))))))))))))))))+((-105)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,8))+(((33)*(pow(r,8)))+(((4)*((pow(a,6))*((r)*(((8)*(M))+((5)*(r))))))+(((12)*((pow(a,2))*((pow(r,5))*(((8)*(M))+((7)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((35)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_238(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[238] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.06250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.669045920792560372951740698944006107565542879767808631529961041172119508474714341804554631752452914"))*((pow(a,-10))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((7)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((3)*(M))+((2)*(r))))))))*(((a)*((r)*(((3465)*((pow(r,16))*(((-2)*(M))+(r))))+(((919)*((pow(a,16))*(((2)*(M))+(r))))+(((210)*((pow(a,2))*((pow(r,13))*(((-118)*(pow(M,2)))+(((-146)*((M)*(r)))+((119)*(pow(r,2))))))))+(((2)*((pow(a,14))*((r)*(((2854)*(pow(M,2)))+(((10206)*((M)*(r)))+((4849)*(pow(r,2))))))))+(((-42)*((pow(a,4))*((pow(r,10))*(((552)*(pow(M,3)))+(((2712)*((pow(M,2))*(r)))+(((904)*((M)*(pow(r,2))))+((-1859)*(pow(r,3)))))))))+(((2)*((pow(a,12))*((pow(r,2))*(((-8520)*(pow(M,3)))+(((4344)*((pow(M,2))*(r)))+(((39320)*((M)*(pow(r,2))))+((21185)*(pow(r,3)))))))))+(((2)*((pow(a,10))*((pow(r,3))*(((-1856)*(pow(M,4)))+(((-37792)*((pow(M,3))*(r)))+(((-23874)*((pow(M,2))*(pow(r,2))))+(((72130)*((M)*(pow(r,3))))+((51005)*(pow(r,4))))))))))+(((2)*((pow(a,6))*((pow(r,7))*(((-1216)*(pow(M,4)))+(((-43936)*((pow(M,3))*(r)))+(((-100734)*((pow(M,2))*(pow(r,2))))+(((14594)*((M)*(pow(r,3))))+((68867)*(pow(r,4))))))))))+((4)*((pow(a,8))*((pow(r,4))*(((128)*(pow(M,5)))+(((-1536)*((pow(M,4))*(r)))+(((-30808)*((pow(M,3))*(pow(r,2))))+(((-40768)*((pow(M,2))*(pow(r,3))))+(((31905)*((M)*(pow(r,4))))+((37400)*(pow(r,5)))))))))))))))))))))+((-105)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,8))+(((33)*(pow(r,8)))+(((4)*((pow(a,6))*((r)*(((8)*(M))+((5)*(r))))))+(((12)*((pow(a,2))*((pow(r,5))*(((8)*(M))+((7)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((35)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_239(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[239] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.007812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.101946330038679463505627181220627660134315136320075228294314864900461034523877515744485001885445175"))*((pow(a,-13))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,8))+(((pow(a,6))*((r)*(((9)*(M))+(r))))+(((7)*((pow(r,6))*(((2)*(pow(M,2)))+(((19)*((M)*(r)))+((-10)*(pow(r,2)))))))+(((-1)*((pow(a,4))*((pow(r,2))*(((34)*(pow(M,2)))+(((89)*((M)*(r)))+((59)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((24)*(pow(M,3)))+(((244)*((pow(M,2))*(r)))+(((11)*((M)*(pow(r,2))))+((-129)*(pow(r,3))))))))))))*(((a)*((r)*(((-45045)*((((2)*(M))+((-1)*(r)))*(pow(r,20))))+(((3781)*((pow(a,20))*(((2)*(M))+(r))))+(((30030)*((pow(a,2))*((pow(r,17))*(((-14)*(pow(M,2)))+(((-16)*((M)*(r)))+((13)*(pow(r,2))))))))+(((2)*((pow(a,18))*((r)*(((38654)*(pow(M,2)))+(((76464)*((M)*(r)))+((30459)*(pow(r,2))))))))+(((-231)*((pow(a,4))*((pow(r,14))*(((2752)*(pow(M,3)))+(((10432)*((pow(M,2))*(r)))+(((3234)*((M)*(pow(r,2))))+((-6519)*(pow(r,3)))))))))+(((pow(a,16))*((pow(r,2))*(((-44992)*(pow(M,3)))+(((550976)*((pow(M,2))*(r)))+(((1002318)*((M)*(pow(r,2))))+((395601)*(pow(r,3))))))))+(((24)*((pow(a,6))*((pow(r,11))*(((-13320)*(pow(M,4)))+(((-132288)*((pow(M,3))*(r)))+(((-232346)*((pow(M,2))*(pow(r,2))))+(((27912)*((M)*(pow(r,3))))+((141579)*(pow(r,4))))))))))+(((8)*((pow(a,14))*((pow(r,3))*(((-33560)*(pow(M,4)))+(((-100864)*((pow(M,3))*(r)))+(((161186)*((pow(M,2))*(pow(r,2))))+(((410792)*((M)*(pow(r,3))))+((178273)*(pow(r,4))))))))))+(((-2)*((pow(a,8))*((pow(r,8))*(((8704)*(pow(M,5)))+(((617600)*((pow(M,4))*(r)))+(((3191200)*((pow(M,3))*(pow(r,2))))+(((3186976)*((pow(M,2))*(pow(r,3))))+(((-2079934)*((M)*(pow(r,4))))+((-2476829)*(pow(r,5)))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((-11776)*(pow(M,5)))+(((-566400)*((pow(M,4))*(r)))+(((-1709280)*((pow(M,3))*(pow(r,2))))+(((233120)*((pow(M,2))*(pow(r,3))))+(((3095010)*((M)*(pow(r,4))))+((1614765)*(pow(r,5)))))))))))+((4)*((pow(a,10))*((pow(r,5))*(((512)*(pow(M,6)))+(((-10240)*((pow(M,5))*(r)))+(((-444960)*((pow(M,4))*(pow(r,2))))+(((-1624960)*((pow(M,3))*(pow(r,3))))+(((-784150)*((pow(M,2))*(pow(r,4))))+(((1723488)*((M)*(pow(r,5))))+((1214529)*(pow(r,6))))))))))))))))))))))))+((-315)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,12))+(((143)*(pow(r,12)))+(((572)*((pow(a,2))*((pow(r,9))*((M)+(r)))))+(((12)*((pow(a,10))*((r)*(((5)*(M))+((3)*(r))))))+(((5)*((pow(a,8))*((pow(r,2))*(pow(((8)*(M))+((7)*(r)),2)))))+(((11)*((pow(a,4))*((pow(r,6))*(pow(((8)*(M))+((9)*(r)),2)))))+((8)*((pow(a,6))*((pow(r,3))*(((32)*(pow(M,3)))+(((128)*((pow(M,2))*(r)))+(((189)*((M)*(pow(r,2))))+((84)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}
