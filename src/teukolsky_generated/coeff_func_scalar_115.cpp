
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_575(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[575] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.007812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.208941049653977767709106691471386719226321555561140362467667806564523743572026443872869899567603956"))*((pow(a,-16))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((3)*(pow(a,4)))+(((13)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((5)*(M))+((4)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((8192)*(pow(a,24)))+(((765765)*(pow(r,24)))+(((15015)*((pow(a,2))*((pow(r,21))*(((178)*(M))+((523)*(r))))))+(((3)*((pow(a,22))*((r)*(((150194)*(M))+((107865)*(r))))))+(((3003)*((pow(a,4))*((pow(r,18))*(((824)*(pow(M,2)))+(((8076)*((M)*(r)))+((12141)*(pow(r,2))))))))+(((pow(a,20))*((pow(r,2))*(((1911848)*(pow(M,2)))+(((6417668)*((M)*(r)))+((3496835)*(pow(r,2)))))))+(((429)*((pow(a,6))*((pow(r,15))*(((640)*(pow(M,3)))+(((45184)*((pow(M,2))*(r)))+(((228918)*((M)*(pow(r,2))))+((235715)*(pow(r,3)))))))))+(((pow(a,18))*((pow(r,3))*(((508032)*(pow(M,3)))+(((16056832)*((pow(M,2))*(r)))+(((37863846)*((M)*(pow(r,2))))+((19036369)*(pow(r,3))))))))+(((286)*((pow(a,8))*((pow(r,12))*(((-256)*(pow(M,4)))+(((6272)*((pow(M,3))*(r)))+(((231792)*((pow(M,2))*(pow(r,2))))+(((815816)*((M)*(pow(r,3))))+((650639)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((-170496)*(pow(M,4)))+(((2707200)*((pow(M,3))*(r)))+(((58610336)*((pow(M,2))*(pow(r,2))))+(((125859312)*((M)*(pow(r,3))))+((63297225)*(pow(r,4)))))))))+(((26)*((pow(a,10))*((pow(r,9))*(((1024)*(pow(M,5)))+(((-13824)*((pow(M,4))*(r)))+(((189120)*((pow(M,3))*(pow(r,2))))+(((4970368)*((pow(M,2))*(pow(r,3))))+(((13824438)*((M)*(pow(r,4))))+((9171405)*(pow(r,5)))))))))))+(((2)*((pow(a,14))*((pow(r,5))*(((25600)*(pow(M,5)))+(((-276992)*((pow(M,4))*(r)))+(((3021760)*((pow(M,3))*(pow(r,2))))+(((60798016)*((pow(M,2))*(pow(r,3))))+(((132652694)*((M)*(pow(r,4))))+((70196015)*(pow(r,5)))))))))))+((2)*((pow(a,12))*((pow(r,6))*(((-4096)*(pow(M,6)))+(((38912)*((pow(M,5))*(r)))+(((-334848)*((pow(M,4))*(pow(r,2))))+(((3621120)*((pow(M,3))*(pow(r,3))))+(((78488600)*((pow(M,2))*(pow(r,4))))+(((187040556)*((M)*(pow(r,5))))+((108536455)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),8))*((((17)*(pow(r,11)))+(((pow(a,10))*(((2)*(M))+(r)))+(((pow(a,2))*((pow(r,8))*(((82)*(M))+((61)*(r)))))+(((pow(a,8))*((r)*(((32)*(pow(M,2)))+(((40)*((M)*(r)))+((13)*(pow(r,2)))))))+(((2)*((pow(a,4))*((pow(r,5))*(((64)*(pow(M,2)))+(((100)*((M)*(r)))+((41)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((32)*(pow(M,3)))+(((80)*((pow(M,2))*(r)))+(((78)*((M)*(pow(r,2))))+((25)*(pow(r,3))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_576(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[576] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.009765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-14))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((13)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((12)*(M))+((7)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((27255)*(pow(a,20)))+(((45045)*(pow(r,20)))+(((23100)*((pow(a,2))*((pow(r,17))*((M)+((19)*(r))))))+(((20)*((pow(a,18))*((r)*(((2779)*(M))+((15017)*(r))))))+(((231)*((pow(a,4))*((pow(r,14))*(((-64)*(pow(M,2)))+(((864)*((M)*(r)))+((8309)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((-60928)*(pow(M,2)))+(((383712)*((M)*(r)))+((1461353)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((24)*(pow(M,3)))+(((-204)*((pow(M,2))*(r)))+(((1439)*((M)*(pow(r,2))))+((9391)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((3480)*(pow(M,3)))+(((-17628)*((pow(M,2))*(r)))+(((73219)*((M)*(pow(r,2))))+((259759)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((-512)*(pow(M,4)))+(((3328)*((pow(M,3))*(r)))+(((-15168)*((pow(M,2))*(pow(r,2))))+(((75760)*((M)*(pow(r,3))))+((380635)*(pow(r,4))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((-15872)*(pow(M,4)))+(((79616)*((pow(M,3))*(r)))+(((-271968)*((pow(M,2))*(pow(r,2))))+(((1033840)*((M)*(pow(r,3))))+((3839075)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((-5376)*((pow(M,4))*(r)))+(((20512)*((pow(M,3))*(pow(r,2))))+(((-70448)*((pow(M,2))*(pow(r,3))))+(((288465)*((M)*(pow(r,4))))+((1206415)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((pow((pow(a,2))+(pow(r,2)),10))*(((pow(a,4))+(((13)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((12)*(M))+((7)*(r))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_577(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[577] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.0009765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.7224804647725929883586984410951477527425773142761316185228157565439663542223929152622262424328770964"))*((pow(a,-16))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((13)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((12)*(M))+((7)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((528395)*(pow(a,24)))+(((3828825)*(pow(r,24)))+(((150150)*((pow(a,2))*((pow(r,21))*(((50)*(M))+((281)*(r))))))+(((70)*((pow(a,22))*((r)*(((77794)*(M))+((129479)*(r))))))+(((120120)*((pow(a,4))*((pow(r,18))*(((12)*(pow(M,2)))+(((613)*((M)*(r)))+((1763)*(pow(r,2))))))))+(((56)*((pow(a,20))*((pow(r,2))*(((52956)*(pow(M,2)))+(((1025381)*((M)*(r)))+((1170824)*(pow(r,2))))))))+(((4290)*((pow(a,6))*((pow(r,15))*(((-128)*(pow(M,3)))+(((2880)*((pow(M,2))*(r)))+(((75630)*((M)*(pow(r,2))))+((149081)*(pow(r,3)))))))))+(((2)*((pow(a,18))*((pow(r,3))*(((-849024)*(pow(M,3)))+(((10588608)*((pow(M,2))*(r)))+(((135233694)*((M)*(pow(r,2))))+((136600967)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,12))*(((2048)*(pow(M,4)))+(((-27136)*((pow(M,3))*(r)))+(((325632)*((pow(M,2))*(pow(r,2))))+(((5913056)*((M)*(pow(r,3))))+((9040223)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((937984)*(pow(M,4)))+(((-8312320)*((pow(M,3))*(r)))+(((66612480)*((pow(M,2))*(pow(r,2))))+(((750509600)*((M)*(pow(r,3))))+((742326475)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,9))*(((-3072)*(pow(M,5)))+(((30208)*((pow(M,4))*(r)))+(((-222400)*((pow(M,3))*(pow(r,2))))+(((1939488)*((pow(M,2))*(pow(r,3))))+(((27747838)*((M)*(pow(r,4))))+((35376107)*(pow(r,5)))))))))))+(((4)*((pow(a,14))*((pow(r,5))*(((-89088)*(pow(M,5)))+(((715264)*((pow(M,4))*(r)))+(((-4245440)*((pow(M,3))*(pow(r,2))))+(((30144480)*((pow(M,2))*(pow(r,3))))+(((340047350)*((M)*(pow(r,4))))+((349698065)*(pow(r,5)))))))))))+((8)*((pow(a,12))*((pow(r,6))*(((8192)*(pow(M,6)))+(((-64512)*((pow(M,5))*(r)))+(((400128)*((pow(M,4))*(pow(r,2))))+(((-2325120)*((pow(M,3))*(pow(r,3))))+(((17172360)*((pow(M,2))*(pow(r,4))))+(((210477330)*((M)*(pow(r,5))))+((235698955)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),10))*(((pow(a,8))+(((85)*(pow(r,8)))+(((8)*((pow(a,6))*((r)*(((7)*(M))+((4)*(r))))))+(((40)*((pow(a,2))*((pow(r,5))*(((7)*(M))+((5)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((112)*(pow(M,2)))+(((168)*((M)*(r)))+((73)*(pow(r,2))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_578(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[578] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.02343750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-14))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((15360)*(pow(a,24)))+(((45045)*(pow(r,24)))+(((15015)*((pow(a,2))*((pow(r,21))*(((2)*(M))+((35)*(r))))))+(((15)*((pow(a,22))*((r)*(((8330)*(M))+((16453)*(r))))))+(((3003)*((pow(a,4))*((pow(r,18))*(((-8)*(pow(M,2)))+(((108)*((M)*(r)))+((933)*(pow(r,2))))))))+(((5)*((pow(a,20))*((pow(r,2))*(((-52696)*(pow(M,2)))+(((197204)*((M)*(r)))+((327023)*(pow(r,2))))))))+(((429)*((pow(a,6))*((pow(r,15))*(((64)*(pow(M,3)))+(((-544)*((pow(M,2))*(r)))+(((3702)*((M)*(pow(r,2))))+((21027)*(pow(r,3)))))))))+(((pow(a,18))*((pow(r,3))*(((438592)*(pow(M,3)))+(((-1449952)*((pow(M,2))*(r)))+(((3580374)*((M)*(pow(r,2))))+((6211449)*(pow(r,3))))))))+(((286)*((pow(a,8))*((pow(r,12))*(((-128)*(pow(M,4)))+(((832)*((pow(M,3))*(r)))+(((-3552)*((pow(M,2))*(pow(r,2))))+(((16264)*((M)*(pow(r,3))))+((68239)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((-476928)*(pow(M,4)))+(((1677696)*((pow(M,3))*(r)))+(((-3487616)*((pow(M,2))*(pow(r,2))))+(((7901808)*((M)*(pow(r,3))))+((15411033)*(pow(r,4)))))))))+(((26)*((pow(a,10))*((pow(r,9))*(((2048)*(pow(M,5)))+(((-10752)*((pow(M,4))*(r)))+(((35040)*((pow(M,3))*(pow(r,2))))+(((-100240)*((pow(M,2))*(pow(r,3))))+(((347910)*((M)*(pow(r,4))))+((1148325)*(pow(r,5)))))))))))+(((2)*((pow(a,14))*((pow(r,5))*(((149504)*(pow(M,5)))+(((-580096)*((pow(M,4))*(r)))+(((1278560)*((pow(M,3))*(pow(r,2))))+(((-2428912)*((pow(M,2))*(pow(r,3))))+(((5870902)*((M)*(pow(r,4))))+((13311007)*(pow(r,5)))))))))))+((2)*((pow(a,12))*((pow(r,6))*(((-40960)*(pow(M,6)))+(((176128)*((pow(M,5))*(r)))+(((-463104)*((pow(M,4))*(pow(r,2))))+(((1009280)*((pow(M,3))*(pow(r,3))))+(((-2178200)*((pow(M,2))*(pow(r,4))))+(((6123660)*((M)*(pow(r,5))))+((16529055)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),12))*(((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_579(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[579] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.003906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("2.853569193634025559397197475436898171123225159520205219683300432953910810089020644678777880077632098"))*((pow(a,-16))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((28672)*(pow(a,28)))+(((765765)*(pow(r,28)))+(((15015)*((pow(a,2))*((pow(r,25))*(((118)*(M))+((655)*(r))))))+(((7)*((pow(a,26))*((r)*(((149806)*(M))+((132247)*(r))))))+(((6006)*((pow(a,4))*((pow(r,22))*(((72)*(pow(M,2)))+(((3468)*((M)*(r)))+((9703)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((59328)*(pow(M,2)))+(((658552)*((M)*(r)))+((463657)*(pow(r,2))))))))+(((2574)*((pow(a,6))*((pow(r,19))*(((-80)*(pow(M,3)))+(((1800)*((pow(M,2))*(r)))+(((43522)*((M)*(pow(r,2))))+((81959)*(pow(r,3)))))))))+(((14)*((pow(a,22))*((pow(r,3))*(((-84816)*(pow(M,3)))+(((762696)*((pow(M,2))*(r)))+(((5858898)*((M)*(pow(r,2))))+((3923063)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((1024)*(pow(M,4)))+(((-13568)*((pow(M,3))*(r)))+(((157056)*((pow(M,2))*(pow(r,2))))+(((2548168)*((M)*(pow(r,3))))+((3640525)*(pow(r,4))))))))))+(((2)*((pow(a,20))*((pow(r,4))*(((550656)*(pow(M,4)))+(((-3648384)*((pow(M,3))*(r)))+(((20843352)*((pow(M,2))*(pow(r,2))))+(((145435028)*((M)*(pow(r,3))))+((98824877)*(pow(r,4))))))))))+(((13)*((pow(a,10))*((pow(r,13))*(((-9216)*(pow(M,5)))+(((90624)*((pow(M,4))*(r)))+(((-624256)*((pow(M,3))*(pow(r,2))))+(((4993728)*((pow(M,2))*(pow(r,3))))+(((61386822)*((M)*(pow(r,4))))+((71149883)*(pow(r,5)))))))))))+(((3)*((pow(a,18))*((pow(r,5))*(((-252928)*(pow(M,5)))+(((1570304)*((pow(M,4))*(r)))+(((-6575488)*((pow(M,3))*(pow(r,2))))+(((32550976)*((pow(M,2))*(pow(r,3))))+(((229764178)*((M)*(pow(r,4))))+((164438589)*(pow(r,5)))))))))))+(((12)*((pow(a,12))*((pow(r,10))*(((8192)*(pow(M,6)))+(((-64512)*((pow(M,5))*(r)))+(((338560)*((pow(M,4))*(pow(r,2))))+(((-1643712)*((pow(M,3))*(pow(r,3))))+(((10337272)*((pow(M,2))*(pow(r,4))))+(((103254396)*((M)*(pow(r,5))))+((101472161)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((327680)*(pow(M,6)))+(((-2052096)*((pow(M,5))*(r)))+(((8263680)*((pow(M,4))*(pow(r,2))))+(((-30803200)*((pow(M,3))*(pow(r,3))))+(((151944000)*((pow(M,2))*(pow(r,4))))+(((1152787440)*((M)*(pow(r,5))))+((893480315)*(pow(r,6)))))))))))+((4)*((pow(a,14))*((pow(r,7))*(((-16384)*(pow(M,7)))+(((106496)*((pow(M,6))*(r)))+(((-486912)*((pow(M,5))*(pow(r,2))))+(((1921280)*((pow(M,4))*(pow(r,3))))+(((-7632400)*((pow(M,3))*(pow(r,4))))+(((40983240)*((pow(M,2))*(pow(r,5))))+(((349391210)*((M)*(pow(r,6))))+((300822095)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),12))*((((17)*(pow(r,7)))+(((3)*((pow(a,6))*(((2)*(M))+(r))))+(((pow(a,2))*((pow(r,4))*(((62)*(M))+((37)*(r)))))+((pow(a,4))*((r)*(((56)*(pow(M,2)))+(((68)*((M)*(r)))+((23)*(pow(r,2))))))))))*(expr[3]))))))))))))))).cast<double>());
}

}
