
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_565(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[565] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00004650297619047619047619047619047619047619047619047619047619047619047619047619047619047619047619047619"))*((HighPrecisionScalar("1.125462867742275478874459293968140665923231810508323596843320248528839743353187215104283798292690589"))*((pow(a,-17))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((35)*(pow(a,14)))+(((35)*((pow(a,12))*((((11)*(M))+((-16)*(r)))*(r))))+(((-429)*((pow(r,13))*((M)+((28)*(r)))))+(((-63)*((pow(a,10))*((pow(r,2))*(((-4)*(pow(M,2)))+(((156)*((M)*(r)))+((159)*(pow(r,2))))))))+(((-33)*((pow(a,2))*((pow(r,10))*(((36)*(pow(M,2)))+(((1068)*((M)*(r)))+((1667)*(pow(r,2))))))))+(((-9)*((pow(a,4))*((pow(r,7))*(((96)*(pow(M,3)))+(((3120)*((pow(M,2))*(r)))+(((12373)*((M)*(pow(r,2))))+((11232)*(pow(r,3)))))))))+(((-1)*((pow(a,8))*((pow(r,3))*(((544)*(pow(M,3)))+(((19632)*((pow(M,2))*(r)))+(((62967)*((M)*(pow(r,2))))+((45316)*(pow(r,3)))))))))+((-1)*((pow(a,6))*((pow(r,4))*(((128)*(pow(M,4)))+(((5120)*((pow(M,3))*(r)))+(((46776)*((pow(M,2))*(pow(r,2))))+(((129296)*((M)*(pow(r,3))))+((93983)*(pow(r,4)))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((16384)*(pow(a,16)))+(((3828825)*(pow(r,16)))+(((75075)*((pow(a,2))*((pow(r,13))*(((226)*(M))+((295)*(r))))))+(((pow(a,14))*((r)*(((1145038)*(M))+((703591)*(r)))))+(((15015)*((pow(a,4))*((pow(r,10))*(((1656)*(pow(M,2)))+(((5124)*((M)*(r)))+((3599)*(pow(r,2))))))))+(((3)*((pow(a,12))*((pow(r,2))*(((2563832)*(pow(M,2)))+(((4853908)*((M)*(r)))+((2129753)*(pow(r,2))))))))+(((495)*((pow(a,6))*((pow(r,7))*(((26816)*(pow(M,3)))+(((160704)*((pow(M,2))*(r)))+(((283102)*((M)*(pow(r,2))))+((145251)*(pow(r,3)))))))))+(((pow(a,10))*((pow(r,3))*(((9623872)*(pow(M,3)))+(((45201792)*((pow(M,2))*(r)))+(((62850954)*((M)*(pow(r,2))))+((25680631)*(pow(r,3))))))))+((pow(a,8))*((pow(r,4))*(((1825024)*(pow(M,4)))+(((22897792)*((pow(M,3))*(r)))+(((92193936)*((pow(M,2))*(pow(r,2))))+(((129599848)*((M)*(pow(r,3))))+((56157139)*(pow(r,4)))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((r)*((((12155)*(pow(r,19)))+(((315)*((pow(a,18))*(((2)*(M))+(r))))+(((715)*((pow(a,2))*((pow(r,16))*(((98)*(M))+((121)*(r))))))+(((105)*((pow(a,16))*((r)*(((128)*(pow(M,2)))+(((176)*((M)*(r)))+((59)*(pow(r,2))))))))+(((572)*((pow(a,4))*((pow(r,13))*(((256)*(pow(M,2)))+(((724)*((M)*(r)))+((469)*(pow(r,2))))))))+(((84)*((pow(a,14))*((pow(r,2))*(((576)*(pow(M,3)))+(((1824)*((pow(M,2))*(r)))+(((1762)*((M)*(pow(r,2))))+((527)*(pow(r,3)))))))))+(((44)*((pow(a,6))*((pow(r,10))*(((3008)*(pow(M,3)))+(((15456)*((pow(M,2))*(r)))+(((23550)*((M)*(pow(r,2))))+((10765)*(pow(r,3)))))))))+(((12)*((pow(a,12))*((pow(r,3))*(((3072)*(pow(M,4)))+(((22272)*((pow(M,3))*(r)))+(((51648)*((pow(M,2))*(pow(r,2))))+(((46140)*((M)*(pow(r,3))))+((13765)*(pow(r,4))))))))))+(((2)*((pow(a,8))*((pow(r,7))*(((23552)*(pow(M,4)))+(((217600)*((pow(M,3))*(r)))+(((637248)*((pow(M,2))*(pow(r,2))))+(((710440)*((M)*(pow(r,3))))+((260885)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,4))*(((2048)*(pow(M,5)))+(((41984)*((pow(M,4))*(r)))+(((260864)*((pow(M,3))*(pow(r,2))))+(((610432)*((pow(M,2))*(pow(r,3))))+(((576130)*((M)*(pow(r,4))))+((184405)*(pow(r,5))))))))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_566(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[566] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00004650297619047619047619047619047619047619047619047619047619047619047619047619047619047619047619047619"))*((HighPrecisionScalar("1.125462867742275478874459293968140665923231810508323596843320248528839743353187215104283798292690589"))*((pow(a,-15))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((35)*(pow(a,12)))+(((429)*(pow(r,12)))+(((420)*((pow(a,10))*((r)*((M)+(r)))))+(((396)*((pow(a,2))*((pow(r,9))*(((3)*(M))+((5)*(r))))))+(((21)*((pow(a,8))*((pow(r,2))*(((32)*(pow(M,2)))+(((112)*((M)*(r)))+((83)*(pow(r,2))))))))+(((9)*((pow(a,4))*((pow(r,6))*(((96)*(pow(M,2)))+(((432)*((M)*(r)))+((409)*(pow(r,2))))))))+((8)*((pow(a,6))*((pow(r,3))*(((16)*(pow(M,3)))+(((192)*((pow(M,2))*(r)))+(((579)*((M)*(pow(r,2))))+((436)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((16384)*(pow(a,16)))+(((3828825)*(pow(r,16)))+(((75075)*((pow(a,2))*((pow(r,13))*(((226)*(M))+((295)*(r))))))+(((pow(a,14))*((r)*(((1145038)*(M))+((703591)*(r)))))+(((15015)*((pow(a,4))*((pow(r,10))*(((1656)*(pow(M,2)))+(((5124)*((M)*(r)))+((3599)*(pow(r,2))))))))+(((3)*((pow(a,12))*((pow(r,2))*(((2563832)*(pow(M,2)))+(((4853908)*((M)*(r)))+((2129753)*(pow(r,2))))))))+(((495)*((pow(a,6))*((pow(r,7))*(((26816)*(pow(M,3)))+(((160704)*((pow(M,2))*(r)))+(((283102)*((M)*(pow(r,2))))+((145251)*(pow(r,3)))))))))+(((pow(a,10))*((pow(r,3))*(((9623872)*(pow(M,3)))+(((45201792)*((pow(M,2))*(r)))+(((62850954)*((M)*(pow(r,2))))+((25680631)*(pow(r,3))))))))+((pow(a,8))*((pow(r,4))*(((1825024)*(pow(M,4)))+(((22897792)*((pow(M,3))*(r)))+(((92193936)*((pow(M,2))*(pow(r,2))))+(((129599848)*((M)*(pow(r,3))))+((56157139)*(pow(r,4)))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((r)*((((12155)*(pow(r,19)))+(((315)*((pow(a,18))*(((2)*(M))+(r))))+(((715)*((pow(a,2))*((pow(r,16))*(((98)*(M))+((121)*(r))))))+(((105)*((pow(a,16))*((r)*(((128)*(pow(M,2)))+(((176)*((M)*(r)))+((59)*(pow(r,2))))))))+(((572)*((pow(a,4))*((pow(r,13))*(((256)*(pow(M,2)))+(((724)*((M)*(r)))+((469)*(pow(r,2))))))))+(((84)*((pow(a,14))*((pow(r,2))*(((576)*(pow(M,3)))+(((1824)*((pow(M,2))*(r)))+(((1762)*((M)*(pow(r,2))))+((527)*(pow(r,3)))))))))+(((44)*((pow(a,6))*((pow(r,10))*(((3008)*(pow(M,3)))+(((15456)*((pow(M,2))*(r)))+(((23550)*((M)*(pow(r,2))))+((10765)*(pow(r,3)))))))))+(((12)*((pow(a,12))*((pow(r,3))*(((3072)*(pow(M,4)))+(((22272)*((pow(M,3))*(r)))+(((51648)*((pow(M,2))*(pow(r,2))))+(((46140)*((M)*(pow(r,3))))+((13765)*(pow(r,4))))))))))+(((2)*((pow(a,8))*((pow(r,7))*(((23552)*(pow(M,4)))+(((217600)*((pow(M,3))*(r)))+(((637248)*((pow(M,2))*(pow(r,2))))+(((710440)*((M)*(pow(r,3))))+((260885)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,4))*(((2048)*(pow(M,5)))+(((41984)*((pow(M,4))*(r)))+(((260864)*((pow(M,3))*(pow(r,2))))+(((610432)*((pow(M,2))*(pow(r,3))))+(((576130)*((M)*(pow(r,4))))+((184405)*(pow(r,5))))))))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_567(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[567] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00002325148809523809523809523809523809523809523809523809523809523809523809523809523809523809523809523810"))*((HighPrecisionScalar("1.125462867742275478874459293968140665923231810508323596843320248528839743353187215104283798292690589"))*((pow(a,-17))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((((35)*(pow(a,12)))+(((429)*(pow(r,12)))+(((420)*((pow(a,10))*((r)*((M)+(r)))))+(((396)*((pow(a,2))*((pow(r,9))*(((3)*(M))+((5)*(r))))))+(((21)*((pow(a,8))*((pow(r,2))*(((32)*(pow(M,2)))+(((112)*((M)*(r)))+((83)*(pow(r,2))))))))+(((9)*((pow(a,4))*((pow(r,6))*(((96)*(pow(M,2)))+(((432)*((M)*(r)))+((409)*(pow(r,2))))))))+((8)*((pow(a,6))*((pow(r,3))*(((16)*(pow(M,3)))+(((192)*((pow(M,2))*(r)))+(((579)*((M)*(pow(r,2))))+((436)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((16384)*(pow(a,16)))+(((3828825)*(pow(r,16)))+(((75075)*((pow(a,2))*((pow(r,13))*(((226)*(M))+((295)*(r))))))+(((pow(a,14))*((r)*(((1145038)*(M))+((703591)*(r)))))+(((15015)*((pow(a,4))*((pow(r,10))*(((1656)*(pow(M,2)))+(((5124)*((M)*(r)))+((3599)*(pow(r,2))))))))+(((3)*((pow(a,12))*((pow(r,2))*(((2563832)*(pow(M,2)))+(((4853908)*((M)*(r)))+((2129753)*(pow(r,2))))))))+(((495)*((pow(a,6))*((pow(r,7))*(((26816)*(pow(M,3)))+(((160704)*((pow(M,2))*(r)))+(((283102)*((M)*(pow(r,2))))+((145251)*(pow(r,3)))))))))+(((pow(a,10))*((pow(r,3))*(((9623872)*(pow(M,3)))+(((45201792)*((pow(M,2))*(r)))+(((62850954)*((M)*(pow(r,2))))+((25680631)*(pow(r,3))))))))+((pow(a,8))*((pow(r,4))*(((1825024)*(pow(M,4)))+(((22897792)*((pow(M,3))*(r)))+(((92193936)*((pow(M,2))*(pow(r,2))))+(((129599848)*((M)*(pow(r,3))))+((56157139)*(pow(r,4)))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((r)*((((12155)*(pow(r,19)))+(((315)*((pow(a,18))*(((2)*(M))+(r))))+(((715)*((pow(a,2))*((pow(r,16))*(((98)*(M))+((121)*(r))))))+(((105)*((pow(a,16))*((r)*(((128)*(pow(M,2)))+(((176)*((M)*(r)))+((59)*(pow(r,2))))))))+(((572)*((pow(a,4))*((pow(r,13))*(((256)*(pow(M,2)))+(((724)*((M)*(r)))+((469)*(pow(r,2))))))))+(((84)*((pow(a,14))*((pow(r,2))*(((576)*(pow(M,3)))+(((1824)*((pow(M,2))*(r)))+(((1762)*((M)*(pow(r,2))))+((527)*(pow(r,3)))))))))+(((44)*((pow(a,6))*((pow(r,10))*(((3008)*(pow(M,3)))+(((15456)*((pow(M,2))*(r)))+(((23550)*((M)*(pow(r,2))))+((10765)*(pow(r,3)))))))))+(((12)*((pow(a,12))*((pow(r,3))*(((3072)*(pow(M,4)))+(((22272)*((pow(M,3))*(r)))+(((51648)*((pow(M,2))*(pow(r,2))))+(((46140)*((M)*(pow(r,3))))+((13765)*(pow(r,4))))))))))+(((2)*((pow(a,8))*((pow(r,7))*(((23552)*(pow(M,4)))+(((217600)*((pow(M,3))*(r)))+(((637248)*((pow(M,2))*(pow(r,2))))+(((710440)*((M)*(pow(r,3))))+((260885)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,4))*(((2048)*(pow(M,5)))+(((41984)*((pow(M,4))*(r)))+(((260864)*((pow(M,3))*(pow(r,2))))+(((610432)*((pow(M,2))*(pow(r,3))))+(((576130)*((M)*(pow(r,4))))+((184405)*(pow(r,5))))))))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_568(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[568] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.005859375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-14))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((5)*(pow(a,12)))+(((429)*(pow(r,12)))+(((30)*((pow(a,10))*((r)*(((8)*(M))+((5)*(r))))))+(((198)*((pow(a,2))*((pow(r,9))*(((8)*(M))+((9)*(r))))))+(((15)*((pow(a,8))*((pow(r,2))*(((64)*(pow(M,2)))+(((128)*((M)*(r)))+((61)*(pow(r,2))))))))+(((9)*((pow(a,4))*((pow(r,6))*(((192)*(pow(M,2)))+(((512)*((M)*(r)))+((323)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((672)*((pow(M,2))*(r)))+(((1176)*((M)*(pow(r,2))))+((581)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((1873)*(pow(a,12)))+(((15015)*(pow(r,12)))+(((1540)*((pow(a,2))*((pow(r,9))*(((23)*(M))+((47)*(r))))))+(((4)*((pow(a,10))*((r)*(((4327)*(M))+((4973)*(r))))))+(((7)*((pow(a,4))*((pow(r,6))*(((2656)*(pow(M,2)))+(((17584)*((M)*(r)))+((20189)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((17632)*(pow(M,2)))+(((86864)*((M)*(r)))+((75773)*(pow(r,2)))))))+((8)*((pow(a,6))*((pow(r,3))*(((80)*(pow(M,3)))+(((4528)*((pow(M,2))*(r)))+(((19653)*((M)*(pow(r,2))))+((17714)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((35)*((pow((pow(a,2))+(pow(r,2)),2))*((((5)*(pow(a,12)))+(((429)*(pow(r,12)))+(((30)*((pow(a,10))*((r)*(((8)*(M))+((5)*(r))))))+(((198)*((pow(a,2))*((pow(r,9))*(((8)*(M))+((9)*(r))))))+(((15)*((pow(a,8))*((pow(r,2))*(((64)*(pow(M,2)))+(((128)*((M)*(r)))+((61)*(pow(r,2))))))))+(((9)*((pow(a,4))*((pow(r,6))*(((192)*(pow(M,2)))+(((512)*((M)*(r)))+((323)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((672)*((pow(M,2))*(r)))+(((1176)*((M)*(pow(r,2))))+((581)*(pow(r,3)))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_569(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[569] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.0004882812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.9511897312113418531323991584789660570410750531734017398944334776513036033630068815595926266925440328"))*((pow(a,-16))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((5)*(pow(a,12)))+(((429)*(pow(r,12)))+(((30)*((pow(a,10))*((r)*(((8)*(M))+((5)*(r))))))+(((198)*((pow(a,2))*((pow(r,9))*(((8)*(M))+((9)*(r))))))+(((15)*((pow(a,8))*((pow(r,2))*(((64)*(pow(M,2)))+(((128)*((M)*(r)))+((61)*(pow(r,2))))))))+(((9)*((pow(a,4))*((pow(r,6))*(((192)*(pow(M,2)))+(((512)*((M)*(r)))+((323)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((672)*((pow(M,2))*(r)))+(((1176)*((M)*(pow(r,2))))+((581)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((30563)*(pow(a,16)))+(((765765)*(pow(r,16)))+(((30030)*((pow(a,2))*((pow(r,13))*(((86)*(M))+((161)*(r))))))+(((2)*((pow(a,14))*((r)*(((270778)*(M))+((257641)*(r))))))+(((6006)*((pow(a,4))*((pow(r,10))*(((432)*(pow(M,2)))+(((2148)*((M)*(r)))+((2173)*(pow(r,2))))))))+(((6)*((pow(a,12))*((pow(r,2))*(((249104)*(pow(M,2)))+(((790660)*((M)*(r)))+((520811)*(pow(r,2))))))))+(((198)*((pow(a,6))*((pow(r,7))*(((3776)*(pow(M,3)))+(((46752)*((pow(M,2))*(r)))+(((132962)*((M)*(pow(r,2))))+((98809)*(pow(r,3)))))))))+(((2)*((pow(a,10))*((pow(r,3))*(((359488)*(pow(M,3)))+(((3528480)*((pow(M,2))*(r)))+(((8067846)*((M)*(pow(r,2))))+((4864837)*(pow(r,3)))))))))+((8)*((pow(a,8))*((pow(r,4))*(((1792)*(pow(M,4)))+(((183328)*((pow(M,3))*(r)))+(((1528080)*((pow(M,2))*(pow(r,2))))+(((3492682)*((M)*(pow(r,3))))+((2208967)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((pow((pow(a,2))+(pow(r,2)),2))*((((7)*(pow(a,16)))+(((2431)*(pow(r,16)))+(((112)*((pow(a,14))*((r)*(((5)*(M))+((3)*(r))))))+(((2288)*((pow(a,2))*((pow(r,13))*(((5)*(M))+((6)*(r))))))+(((572)*((pow(a,4))*((pow(r,10))*(((32)*(pow(M,2)))+(((88)*((M)*(r)))+((57)*(pow(r,2))))))))+(((28)*((pow(a,12))*((pow(r,2))*(((160)*(pow(M,2)))+(((280)*((M)*(r)))+((117)*(pow(r,2))))))))+(((112)*((pow(a,10))*((pow(r,3))*(((64)*(pow(M,3)))+(((256)*((pow(M,2))*(r)))+(((323)*((M)*(pow(r,2))))+((124)*(pow(r,3)))))))))+(((176)*((pow(a,6))*((pow(r,7))*(((64)*(pow(M,3)))+(((320)*((pow(M,2))*(r)))+(((503)*((M)*(pow(r,2))))+((239)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((9216)*((pow(M,3))*(r)))+(((31104)*((pow(M,2))*(pow(r,2))))+(((39264)*((M)*(pow(r,3))))+((15849)*(pow(r,4))))))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}
