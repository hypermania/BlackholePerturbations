
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_705(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[705] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00003313337053571428571428571428571428571428571428571428571428571428571428571428571428571428571428571429"))*((pow(a,-19))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,12)))+(((pow(a,10))*((r)*(((106)*(M))+(r))))+(((170)*((pow(r,10))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2)))))))+(((-2)*((pow(a,8))*((pow(r,2))*(((-58)*(pow(M,2)))+(((1435)*((M)*(r)))+((907)*(pow(r,2))))))))+(((5)*((pow(a,2))*((pow(r,7))*(((224)*(pow(M,3)))+(((10128)*((pow(M,2))*(r)))+(((1978)*((M)*(pow(r,2))))+((-4671)*(pow(r,3)))))))))+(((-2)*((pow(a,6))*((pow(r,3))*(((560)*(pow(M,3)))+(((3016)*((pow(M,2))*(r)))+(((10414)*((M)*(pow(r,2))))+((5839)*(pow(r,3)))))))))+((2)*((pow(a,4))*((pow(r,4))*(((448)*(pow(M,4)))+(((20608)*((pow(M,3))*(r)))+(((19276)*((pow(M,2))*(pow(r,2))))+(((-11546)*((M)*(pow(r,3))))+((-12785)*(pow(r,4))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((528395)*(pow(a,24)))+(((3828825)*(pow(r,24)))+(((150150)*((pow(a,2))*((pow(r,21))*(((50)*(M))+((281)*(r))))))+(((70)*((pow(a,22))*((r)*(((77794)*(M))+((129479)*(r))))))+(((120120)*((pow(a,4))*((pow(r,18))*(((12)*(pow(M,2)))+(((613)*((M)*(r)))+((1763)*(pow(r,2))))))))+(((56)*((pow(a,20))*((pow(r,2))*(((52956)*(pow(M,2)))+(((1025381)*((M)*(r)))+((1170824)*(pow(r,2))))))))+(((4290)*((pow(a,6))*((pow(r,15))*(((-128)*(pow(M,3)))+(((2880)*((pow(M,2))*(r)))+(((75630)*((M)*(pow(r,2))))+((149081)*(pow(r,3)))))))))+(((2)*((pow(a,18))*((pow(r,3))*(((-849024)*(pow(M,3)))+(((10588608)*((pow(M,2))*(r)))+(((135233694)*((M)*(pow(r,2))))+((136600967)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,12))*(((2048)*(pow(M,4)))+(((-27136)*((pow(M,3))*(r)))+(((325632)*((pow(M,2))*(pow(r,2))))+(((5913056)*((M)*(pow(r,3))))+((9040223)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((937984)*(pow(M,4)))+(((-8312320)*((pow(M,3))*(r)))+(((66612480)*((pow(M,2))*(pow(r,2))))+(((750509600)*((M)*(pow(r,3))))+((742326475)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,9))*(((-3072)*(pow(M,5)))+(((30208)*((pow(M,4))*(r)))+(((-222400)*((pow(M,3))*(pow(r,2))))+(((1939488)*((pow(M,2))*(pow(r,3))))+(((27747838)*((M)*(pow(r,4))))+((35376107)*(pow(r,5)))))))))))+(((4)*((pow(a,14))*((pow(r,5))*(((-89088)*(pow(M,5)))+(((715264)*((pow(M,4))*(r)))+(((-4245440)*((pow(M,3))*(pow(r,2))))+(((30144480)*((pow(M,2))*(pow(r,3))))+(((340047350)*((M)*(pow(r,4))))+((349698065)*(pow(r,5)))))))))))+((8)*((pow(a,12))*((pow(r,6))*(((8192)*(pow(M,6)))+(((-64512)*((pow(M,5))*(r)))+(((400128)*((pow(M,4))*(pow(r,2))))+(((-2325120)*((pow(M,3))*(pow(r,3))))+(((17172360)*((pow(M,2))*(pow(r,4))))+(((210477330)*((M)*(pow(r,5))))+((235698955)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),10))*(((pow(a,8))+(((85)*(pow(r,8)))+(((8)*((pow(a,6))*((r)*(((7)*(M))+((4)*(r))))))+(((40)*((pow(a,2))*((pow(r,5))*(((7)*(M))+((5)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((112)*(pow(M,2)))+(((168)*((M)*(r)))+((73)*(pow(r,2))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_706(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[706] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00006626674107142857142857142857142857142857142857142857142857142857142857142857142857142857142857142857"))*((pow(a,-17))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,8))+(((85)*(pow(r,8)))+(((8)*((pow(a,6))*((r)*(((7)*(M))+((4)*(r))))))+(((40)*((pow(a,2))*((pow(r,5))*(((7)*(M))+((5)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((112)*(pow(M,2)))+(((168)*((M)*(r)))+((73)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((528395)*(pow(a,24)))+(((3828825)*(pow(r,24)))+(((150150)*((pow(a,2))*((pow(r,21))*(((50)*(M))+((281)*(r))))))+(((70)*((pow(a,22))*((r)*(((77794)*(M))+((129479)*(r))))))+(((120120)*((pow(a,4))*((pow(r,18))*(((12)*(pow(M,2)))+(((613)*((M)*(r)))+((1763)*(pow(r,2))))))))+(((56)*((pow(a,20))*((pow(r,2))*(((52956)*(pow(M,2)))+(((1025381)*((M)*(r)))+((1170824)*(pow(r,2))))))))+(((4290)*((pow(a,6))*((pow(r,15))*(((-128)*(pow(M,3)))+(((2880)*((pow(M,2))*(r)))+(((75630)*((M)*(pow(r,2))))+((149081)*(pow(r,3)))))))))+(((2)*((pow(a,18))*((pow(r,3))*(((-849024)*(pow(M,3)))+(((10588608)*((pow(M,2))*(r)))+(((135233694)*((M)*(pow(r,2))))+((136600967)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,12))*(((2048)*(pow(M,4)))+(((-27136)*((pow(M,3))*(r)))+(((325632)*((pow(M,2))*(pow(r,2))))+(((5913056)*((M)*(pow(r,3))))+((9040223)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((937984)*(pow(M,4)))+(((-8312320)*((pow(M,3))*(r)))+(((66612480)*((pow(M,2))*(pow(r,2))))+(((750509600)*((M)*(pow(r,3))))+((742326475)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,9))*(((-3072)*(pow(M,5)))+(((30208)*((pow(M,4))*(r)))+(((-222400)*((pow(M,3))*(pow(r,2))))+(((1939488)*((pow(M,2))*(pow(r,3))))+(((27747838)*((M)*(pow(r,4))))+((35376107)*(pow(r,5)))))))))))+(((4)*((pow(a,14))*((pow(r,5))*(((-89088)*(pow(M,5)))+(((715264)*((pow(M,4))*(r)))+(((-4245440)*((pow(M,3))*(pow(r,2))))+(((30144480)*((pow(M,2))*(pow(r,3))))+(((340047350)*((M)*(pow(r,4))))+((349698065)*(pow(r,5)))))))))))+((8)*((pow(a,12))*((pow(r,6))*(((8192)*(pow(M,6)))+(((-64512)*((pow(M,5))*(r)))+(((400128)*((pow(M,4))*(pow(r,2))))+(((-2325120)*((pow(M,3))*(pow(r,3))))+(((17172360)*((pow(M,2))*(pow(r,4))))+(((210477330)*((M)*(pow(r,5))))+((235698955)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),10))*(((pow(a,8))+(((85)*(pow(r,8)))+(((8)*((pow(a,6))*((r)*(((7)*(M))+((4)*(r))))))+(((40)*((pow(a,2))*((pow(r,5))*(((7)*(M))+((5)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((112)*(pow(M,2)))+(((168)*((M)*(r)))+((73)*(pow(r,2))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_707(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[707] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00003313337053571428571428571428571428571428571428571428571428571428571428571428571428571428571428571429"))*((pow(a,-19))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((pow(a,8))+(((85)*(pow(r,8)))+(((8)*((pow(a,6))*((r)*(((7)*(M))+((4)*(r))))))+(((40)*((pow(a,2))*((pow(r,5))*(((7)*(M))+((5)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((112)*(pow(M,2)))+(((168)*((M)*(r)))+((73)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((528395)*(pow(a,24)))+(((3828825)*(pow(r,24)))+(((150150)*((pow(a,2))*((pow(r,21))*(((50)*(M))+((281)*(r))))))+(((70)*((pow(a,22))*((r)*(((77794)*(M))+((129479)*(r))))))+(((120120)*((pow(a,4))*((pow(r,18))*(((12)*(pow(M,2)))+(((613)*((M)*(r)))+((1763)*(pow(r,2))))))))+(((56)*((pow(a,20))*((pow(r,2))*(((52956)*(pow(M,2)))+(((1025381)*((M)*(r)))+((1170824)*(pow(r,2))))))))+(((4290)*((pow(a,6))*((pow(r,15))*(((-128)*(pow(M,3)))+(((2880)*((pow(M,2))*(r)))+(((75630)*((M)*(pow(r,2))))+((149081)*(pow(r,3)))))))))+(((2)*((pow(a,18))*((pow(r,3))*(((-849024)*(pow(M,3)))+(((10588608)*((pow(M,2))*(r)))+(((135233694)*((M)*(pow(r,2))))+((136600967)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,12))*(((2048)*(pow(M,4)))+(((-27136)*((pow(M,3))*(r)))+(((325632)*((pow(M,2))*(pow(r,2))))+(((5913056)*((M)*(pow(r,3))))+((9040223)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((937984)*(pow(M,4)))+(((-8312320)*((pow(M,3))*(r)))+(((66612480)*((pow(M,2))*(pow(r,2))))+(((750509600)*((M)*(pow(r,3))))+((742326475)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,9))*(((-3072)*(pow(M,5)))+(((30208)*((pow(M,4))*(r)))+(((-222400)*((pow(M,3))*(pow(r,2))))+(((1939488)*((pow(M,2))*(pow(r,3))))+(((27747838)*((M)*(pow(r,4))))+((35376107)*(pow(r,5)))))))))))+(((4)*((pow(a,14))*((pow(r,5))*(((-89088)*(pow(M,5)))+(((715264)*((pow(M,4))*(r)))+(((-4245440)*((pow(M,3))*(pow(r,2))))+(((30144480)*((pow(M,2))*(pow(r,3))))+(((340047350)*((M)*(pow(r,4))))+((349698065)*(pow(r,5)))))))))))+((8)*((pow(a,12))*((pow(r,6))*(((8192)*(pow(M,6)))+(((-64512)*((pow(M,5))*(r)))+(((400128)*((pow(M,4))*(pow(r,2))))+(((-2325120)*((pow(M,3))*(pow(r,3))))+(((17172360)*((pow(M,2))*(pow(r,4))))+(((210477330)*((M)*(pow(r,5))))+((235698955)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),10))*(((pow(a,8))+(((85)*(pow(r,8)))+(((8)*((pow(a,6))*((r)*(((7)*(M))+((4)*(r))))))+(((40)*((pow(a,2))*((pow(r,5))*(((7)*(M))+((5)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((112)*(pow(M,2)))+(((168)*((M)*(r)))+((73)*(pow(r,2))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_708(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[708] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.0006626674107142857142857142857142857142857142857142857142857142857142857142857142857142857142857142857"))*((pow(a,-18))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,8))+(((85)*(pow(r,8)))+(((8)*((pow(a,6))*((r)*(((7)*(M))+((4)*(r))))))+(((40)*((pow(a,2))*((pow(r,5))*(((7)*(M))+((5)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((112)*(pow(M,2)))+(((168)*((M)*(r)))+((73)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((528395)*(pow(a,24)))+(((3828825)*(pow(r,24)))+(((150150)*((pow(a,2))*((pow(r,21))*(((50)*(M))+((281)*(r))))))+(((70)*((pow(a,22))*((r)*(((77794)*(M))+((129479)*(r))))))+(((120120)*((pow(a,4))*((pow(r,18))*(((12)*(pow(M,2)))+(((613)*((M)*(r)))+((1763)*(pow(r,2))))))))+(((56)*((pow(a,20))*((pow(r,2))*(((52956)*(pow(M,2)))+(((1025381)*((M)*(r)))+((1170824)*(pow(r,2))))))))+(((4290)*((pow(a,6))*((pow(r,15))*(((-128)*(pow(M,3)))+(((2880)*((pow(M,2))*(r)))+(((75630)*((M)*(pow(r,2))))+((149081)*(pow(r,3)))))))))+(((2)*((pow(a,18))*((pow(r,3))*(((-849024)*(pow(M,3)))+(((10588608)*((pow(M,2))*(r)))+(((135233694)*((M)*(pow(r,2))))+((136600967)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,12))*(((2048)*(pow(M,4)))+(((-27136)*((pow(M,3))*(r)))+(((325632)*((pow(M,2))*(pow(r,2))))+(((5913056)*((M)*(pow(r,3))))+((9040223)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((937984)*(pow(M,4)))+(((-8312320)*((pow(M,3))*(r)))+(((66612480)*((pow(M,2))*(pow(r,2))))+(((750509600)*((M)*(pow(r,3))))+((742326475)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,9))*(((-3072)*(pow(M,5)))+(((30208)*((pow(M,4))*(r)))+(((-222400)*((pow(M,3))*(pow(r,2))))+(((1939488)*((pow(M,2))*(pow(r,3))))+(((27747838)*((M)*(pow(r,4))))+((35376107)*(pow(r,5)))))))))))+(((4)*((pow(a,14))*((pow(r,5))*(((-89088)*(pow(M,5)))+(((715264)*((pow(M,4))*(r)))+(((-4245440)*((pow(M,3))*(pow(r,2))))+(((30144480)*((pow(M,2))*(pow(r,3))))+(((340047350)*((M)*(pow(r,4))))+((349698065)*(pow(r,5)))))))))))+((8)*((pow(a,12))*((pow(r,6))*(((8192)*(pow(M,6)))+(((-64512)*((pow(M,5))*(r)))+(((400128)*((pow(M,4))*(pow(r,2))))+(((-2325120)*((pow(M,3))*(pow(r,3))))+(((17172360)*((pow(M,2))*(pow(r,4))))+(((210477330)*((M)*(pow(r,5))))+((235698955)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),10))*(((pow(a,8))+(((85)*(pow(r,8)))+(((8)*((pow(a,6))*((r)*(((7)*(M))+((4)*(r))))))+(((40)*((pow(a,2))*((pow(r,5))*(((7)*(M))+((5)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((112)*(pow(M,2)))+(((168)*((M)*(r)))+((73)*(pow(r,2))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_709(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[709] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.001953125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.208941049653977767709106691471386719226321555561140362467667806564523743572026443872869899567603956"))*((pow(a,-15))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((-3)*((pow(a,2))*((r)*((M)+((12)*(r))))))+((pow(r,2))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((8192)*(pow(a,24)))+(((765765)*(pow(r,24)))+(((15015)*((pow(a,2))*((pow(r,21))*(((178)*(M))+((523)*(r))))))+(((3)*((pow(a,22))*((r)*(((150194)*(M))+((107865)*(r))))))+(((3003)*((pow(a,4))*((pow(r,18))*(((824)*(pow(M,2)))+(((8076)*((M)*(r)))+((12141)*(pow(r,2))))))))+(((pow(a,20))*((pow(r,2))*(((1911848)*(pow(M,2)))+(((6417668)*((M)*(r)))+((3496835)*(pow(r,2)))))))+(((429)*((pow(a,6))*((pow(r,15))*(((640)*(pow(M,3)))+(((45184)*((pow(M,2))*(r)))+(((228918)*((M)*(pow(r,2))))+((235715)*(pow(r,3)))))))))+(((pow(a,18))*((pow(r,3))*(((508032)*(pow(M,3)))+(((16056832)*((pow(M,2))*(r)))+(((37863846)*((M)*(pow(r,2))))+((19036369)*(pow(r,3))))))))+(((286)*((pow(a,8))*((pow(r,12))*(((-256)*(pow(M,4)))+(((6272)*((pow(M,3))*(r)))+(((231792)*((pow(M,2))*(pow(r,2))))+(((815816)*((M)*(pow(r,3))))+((650639)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((-170496)*(pow(M,4)))+(((2707200)*((pow(M,3))*(r)))+(((58610336)*((pow(M,2))*(pow(r,2))))+(((125859312)*((M)*(pow(r,3))))+((63297225)*(pow(r,4)))))))))+(((26)*((pow(a,10))*((pow(r,9))*(((1024)*(pow(M,5)))+(((-13824)*((pow(M,4))*(r)))+(((189120)*((pow(M,3))*(pow(r,2))))+(((4970368)*((pow(M,2))*(pow(r,3))))+(((13824438)*((M)*(pow(r,4))))+((9171405)*(pow(r,5)))))))))))+(((2)*((pow(a,14))*((pow(r,5))*(((25600)*(pow(M,5)))+(((-276992)*((pow(M,4))*(r)))+(((3021760)*((pow(M,3))*(pow(r,2))))+(((60798016)*((pow(M,2))*(pow(r,3))))+(((132652694)*((M)*(pow(r,4))))+((70196015)*(pow(r,5)))))))))))+((2)*((pow(a,12))*((pow(r,6))*(((-4096)*(pow(M,6)))+(((38912)*((pow(M,5))*(r)))+(((-334848)*((pow(M,4))*(pow(r,2))))+(((3621120)*((pow(M,3))*(pow(r,3))))+(((78488600)*((pow(M,2))*(pow(r,4))))+(((187040556)*((M)*(pow(r,5))))+((108536455)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),8))*((((17)*(pow(r,11)))+(((pow(a,10))*(((2)*(M))+(r)))+(((pow(a,2))*((pow(r,8))*(((82)*(M))+((61)*(r)))))+(((pow(a,8))*((r)*(((32)*(pow(M,2)))+(((40)*((M)*(r)))+((13)*(pow(r,2)))))))+(((2)*((pow(a,4))*((pow(r,5))*(((64)*(pow(M,2)))+(((100)*((M)*(r)))+((41)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((32)*(pow(M,3)))+(((80)*((pow(M,2))*(r)))+(((78)*((M)*(pow(r,2))))+((25)*(pow(r,3))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}
