
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_5(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[5] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("2.236067977499789696409173668731276235440618359611525724270897245410520925637804899414414408378782275"))*((pow(a,-3))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-2))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-3)*((a)*((expr[0])*((expr[1])*(expr[2])))))+(((pow(a,4))+(((3)*(pow(r,4)))+((4)*((pow(a,2))*((r)*((M)+(r)))))))*(expr[3])))))))))))).cast<double>());
}

void compute_coeffs_6(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[6] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.2500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-5))*((pow(r,-3))*(((pow(a,2))+((-1)*((M)*(r))))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-2))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((5)*((a)*((r)*(((21)*((pow(r,8))*(((-2)*(M))+(r))))+(((11)*((pow(a,8))*(((2)*(M))+(r))))+(((2)*((pow(a,2))*((pow(r,5))*(((-62)*(pow(M,2)))+(((-22)*((M)*(r)))+((37)*(pow(r,2))))))))+(((4)*((pow(a,4))*((pow(r,2))*(((-20)*(pow(M,3)))+(((-32)*((pow(M,2))*(r)))+(((15)*((M)*(pow(r,2))))+((24)*(pow(r,3)))))))))+((pow(a,6))*(((-4)*((pow(M,2))*(r)))+(((84)*((M)*(pow(r,2))))+((54)*(pow(r,3)))))))))))))+((-3)*((((3)*(pow(a,8)))+(((35)*(pow(r,8)))+(((12)*((pow(a,6))*((r)*(((4)*(M))+((3)*(r))))))+(((20)*((pow(a,2))*((pow(r,5))*(((4)*(M))+((5)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((16)*(pow(M,2)))+(((64)*((M)*(r)))+((49)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))).cast<double>());
}

void compute_coeffs_7(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[7] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.2500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-3))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-2))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((-5)*((a)*((r)*(((21)*((pow(r,8))*(((-2)*(M))+(r))))+(((11)*((pow(a,8))*(((2)*(M))+(r))))+(((2)*((pow(a,2))*((pow(r,5))*(((-62)*(pow(M,2)))+(((-22)*((M)*(r)))+((37)*(pow(r,2))))))))+(((4)*((pow(a,4))*((pow(r,2))*(((-20)*(pow(M,3)))+(((-32)*((pow(M,2))*(r)))+(((15)*((M)*(pow(r,2))))+((24)*(pow(r,3)))))))))+((pow(a,6))*(((-4)*((pow(M,2))*(r)))+(((84)*((M)*(pow(r,2))))+((54)*(pow(r,3)))))))))))))+((3)*((((3)*(pow(a,8)))+(((35)*(pow(r,8)))+(((12)*((pow(a,6))*((r)*(((4)*(M))+((3)*(r))))))+(((20)*((pow(a,2))*((pow(r,5))*(((4)*(M))+((5)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((16)*(pow(M,2)))+(((64)*((M)*(r)))+((49)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))).cast<double>());
}

void compute_coeffs_8(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[8] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.1250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-5))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-3))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((5)*((a)*((r)*(((21)*((pow(r,8))*(((-2)*(M))+(r))))+(((11)*((pow(a,8))*(((2)*(M))+(r))))+(((2)*((pow(a,2))*((pow(r,5))*(((-62)*(pow(M,2)))+(((-22)*((M)*(r)))+((37)*(pow(r,2))))))))+(((4)*((pow(a,4))*((pow(r,2))*(((-20)*(pow(M,3)))+(((-32)*((pow(M,2))*(r)))+(((15)*((M)*(pow(r,2))))+((24)*(pow(r,3)))))))))+((pow(a,6))*(((-4)*((pow(M,2))*(r)))+(((84)*((M)*(pow(r,2))))+((54)*(pow(r,3)))))))))))))+((-3)*((((3)*(pow(a,8)))+(((35)*(pow(r,8)))+(((12)*((pow(a,6))*((r)*(((4)*(M))+((3)*(r))))))+(((20)*((pow(a,2))*((pow(r,5))*(((4)*(M))+((5)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((16)*(pow(M,2)))+(((64)*((M)*(r)))+((49)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))).cast<double>());
}

void compute_coeffs_9(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[9] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.02500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("3.605551275463989293119221267470495946251296573845246212710453056227166948293010445204619082018490718"))*((pow(a,-7))*((pow(r,-3))*(((pow(a,2))+((-1)*((M)*(r))))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-3))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((7)*((a)*((r)*(((165)*((pow(r,12))*(((-2)*(M))+(r))))+(((33)*((pow(a,12))*(((2)*(M))+(r))))+(((10)*((pow(a,2))*((pow(r,9))*(((-130)*(pow(M,2)))+(((-68)*((M)*(r)))+((83)*(pow(r,2))))))))+(((2)*((pow(a,10))*((r)*(((142)*(pow(M,2)))+(((340)*((M)*(r)))+((151)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((-608)*(pow(M,3)))+(((224)*((pow(M,2))*(r)))+(((1954)*((M)*(pow(r,2))))+((1043)*(pow(r,3))))))))+(((pow(a,4))*((pow(r,6))*(((-1504)*(pow(M,3)))+(((-2944)*((pow(M,2))*(r)))+(((422)*((M)*(pow(r,2))))+((1703)*(pow(r,3))))))))+((4)*((pow(a,6))*((pow(r,3))*(((-112)*(pow(M,4)))+(((-528)*((pow(M,3))*(r)))+(((-426)*((pow(M,2))*(pow(r,2))))+(((528)*((M)*(pow(r,3))))+((453)*(pow(r,4)))))))))))))))))))+((-5)*((((5)*(pow(a,12)))+(((231)*(pow(r,12)))+(((60)*((pow(a,10))*((r)*(((3)*(M))+((2)*(r))))))+(((252)*((pow(a,2))*((pow(r,9))*(((3)*(M))+((4)*(r))))))+(((15)*((pow(a,8))*((pow(r,2))*(((32)*(pow(M,2)))+(((80)*((M)*(r)))+((43)*(pow(r,2))))))))+(((21)*((pow(a,4))*((pow(r,6))*(((32)*(pow(M,2)))+(((112)*((M)*(r)))+((83)*(pow(r,2))))))))+((8)*((pow(a,6))*((pow(r,3))*(((16)*(pow(M,3)))+(((144)*((pow(M,2))*(r)))+(((327)*((M)*(pow(r,2))))+((187)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}
