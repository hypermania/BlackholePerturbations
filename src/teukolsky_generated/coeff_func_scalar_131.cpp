
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_655(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[655] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0002441406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.1213202980486559743380749480182916742372543537143119515325369844517727977088119830000364426217026143"))*((pow(a,-17))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((35)*(pow(a,12)))+(((715)*(pow(r,12)))+(((70)*((pow(a,10))*((r)*(((8)*(M))+((7)*(r))))))+(((286)*((pow(a,2))*((pow(r,9))*(((8)*(M))+((11)*(r))))))+(((7)*((pow(a,8))*((pow(r,2))*(((192)*(pow(M,2)))+(((512)*((M)*(r)))+((323)*(pow(r,2))))))))+(((11)*((pow(a,4))*((pow(r,6))*(((192)*(pow(M,2)))+(((640)*((M)*(r)))+((503)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((864)*((pow(M,2))*(r)))+(((1944)*((M)*(pow(r,2))))+((1227)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((32768)*(pow(a,20)))+(((14549535)*(pow(r,20)))+(((255255)*((pow(a,2))*((pow(r,17))*(((278)*(M))+((431)*(r))))))+(((5)*((pow(a,18))*((r)*(((568042)*(M))+((349557)*(r))))))+(((12012)*((pow(a,4))*((pow(r,14))*(((9954)*(pow(M,2)))+(((37306)*((M)*(r)))+((30411)*(pow(r,2))))))))+(((5)*((pow(a,16))*((pow(r,2))*(((5026200)*(pow(M,2)))+(((9570536)*((M)*(r)))+((4107651)*(pow(r,2))))))))+(((1716)*((pow(a,6))*((pow(r,11))*(((46608)*(pow(M,3)))+(((348156)*((pow(M,2))*(r)))+(((705080)*((M)*(pow(r,2))))+((406635)*(pow(r,3)))))))))+(((4)*((pow(a,14))*((pow(r,3))*(((11537744)*(pow(M,3)))+(((55003116)*((pow(M,2))*(r)))+(((72514028)*((M)*(pow(r,2))))+((27771703)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((783488)*(pow(M,4)))+(((12974720)*((pow(M,3))*(r)))+(((55432812)*((pow(M,2))*(pow(r,2))))+(((82462820)*((M)*(pow(r,3))))+((38323295)*(pow(r,4))))))))))+(((4)*((pow(a,12))*((pow(r,4))*(((4147904)*(pow(M,4)))+(((54446784)*((pow(M,3))*(r)))+(((186996186)*((pow(M,2))*(pow(r,2))))+(((225694490)*((M)*(pow(r,3))))+((85876545)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,5))*(((129024)*(pow(M,5)))+(((16914176)*((pow(M,4))*(r)))+(((188550336)*((pow(M,3))*(pow(r,2))))+(((647378448)*((pow(M,2))*(pow(r,3))))+(((819578930)*((M)*(pow(r,4))))+((333200499)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((r)*((pow((pow(a,2))+(pow(r,2)),2))*((((4199)*(pow(r,19)))+(((63)*((pow(a,18))*(((2)*(M))+(r))))+(((221)*((pow(a,2))*((pow(r,16))*(((118)*(M))+((131)*(r))))))+(((21)*((pow(a,16))*((r)*(((160)*(pow(M,2)))+(((208)*((M)*(r)))+((67)*(pow(r,2))))))))+(((52)*((pow(a,4))*((pow(r,13))*(((1160)*(pow(M,2)))+(((2852)*((M)*(r)))+((1667)*(pow(r,2))))))))+(((84)*((pow(a,14))*((pow(r,2))*(((192)*(pow(M,3)))+(((528)*((pow(M,2))*(r)))+(((466)*((M)*(pow(r,2))))+((131)*(pow(r,3)))))))))+(((52)*((pow(a,6))*((pow(r,10))*(((1216)*(pow(M,3)))+(((5136)*((pow(M,2))*(r)))+(((6834)*((M)*(pow(r,2))))+((2831)*(pow(r,3)))))))))+(((12)*((pow(a,12))*((pow(r,3))*(((1536)*(pow(M,4)))+(((8448)*((pow(M,3))*(r)))+(((16584)*((pow(M,2))*(pow(r,2))))+(((13284)*((M)*(pow(r,3))))+((3673)*(pow(r,4))))))))))+(((2)*((pow(a,8))*((pow(r,7))*(((14336)*(pow(M,4)))+(((97792)*((pow(M,3))*(r)))+(((236784)*((pow(M,2))*(pow(r,2))))+(((231928)*((M)*(pow(r,3))))+((77609)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,4))*(((2048)*(pow(M,5)))+(((23552)*((pow(M,4))*(r)))+(((108800)*((pow(M,3))*(pow(r,2))))+(((212416)*((pow(M,2))*(pow(r,3))))+(((177610)*((M)*(pow(r,4))))+((52177)*(pow(r,5))))))))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_656(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[656] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0001220703125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.1213202980486559743380749480182916742372543537143119515325369844517727977088119830000364426217026143"))*((pow(a,-19))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((((35)*(pow(a,12)))+(((715)*(pow(r,12)))+(((70)*((pow(a,10))*((r)*(((8)*(M))+((7)*(r))))))+(((286)*((pow(a,2))*((pow(r,9))*(((8)*(M))+((11)*(r))))))+(((7)*((pow(a,8))*((pow(r,2))*(((192)*(pow(M,2)))+(((512)*((M)*(r)))+((323)*(pow(r,2))))))))+(((11)*((pow(a,4))*((pow(r,6))*(((192)*(pow(M,2)))+(((640)*((M)*(r)))+((503)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((864)*((pow(M,2))*(r)))+(((1944)*((M)*(pow(r,2))))+((1227)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((32768)*(pow(a,20)))+(((14549535)*(pow(r,20)))+(((255255)*((pow(a,2))*((pow(r,17))*(((278)*(M))+((431)*(r))))))+(((5)*((pow(a,18))*((r)*(((568042)*(M))+((349557)*(r))))))+(((12012)*((pow(a,4))*((pow(r,14))*(((9954)*(pow(M,2)))+(((37306)*((M)*(r)))+((30411)*(pow(r,2))))))))+(((5)*((pow(a,16))*((pow(r,2))*(((5026200)*(pow(M,2)))+(((9570536)*((M)*(r)))+((4107651)*(pow(r,2))))))))+(((1716)*((pow(a,6))*((pow(r,11))*(((46608)*(pow(M,3)))+(((348156)*((pow(M,2))*(r)))+(((705080)*((M)*(pow(r,2))))+((406635)*(pow(r,3)))))))))+(((4)*((pow(a,14))*((pow(r,3))*(((11537744)*(pow(M,3)))+(((55003116)*((pow(M,2))*(r)))+(((72514028)*((M)*(pow(r,2))))+((27771703)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((783488)*(pow(M,4)))+(((12974720)*((pow(M,3))*(r)))+(((55432812)*((pow(M,2))*(pow(r,2))))+(((82462820)*((M)*(pow(r,3))))+((38323295)*(pow(r,4))))))))))+(((4)*((pow(a,12))*((pow(r,4))*(((4147904)*(pow(M,4)))+(((54446784)*((pow(M,3))*(r)))+(((186996186)*((pow(M,2))*(pow(r,2))))+(((225694490)*((M)*(pow(r,3))))+((85876545)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,5))*(((129024)*(pow(M,5)))+(((16914176)*((pow(M,4))*(r)))+(((188550336)*((pow(M,3))*(pow(r,2))))+(((647378448)*((pow(M,2))*(pow(r,3))))+(((819578930)*((M)*(pow(r,4))))+((333200499)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((r)*((pow((pow(a,2))+(pow(r,2)),2))*((((4199)*(pow(r,19)))+(((63)*((pow(a,18))*(((2)*(M))+(r))))+(((221)*((pow(a,2))*((pow(r,16))*(((118)*(M))+((131)*(r))))))+(((21)*((pow(a,16))*((r)*(((160)*(pow(M,2)))+(((208)*((M)*(r)))+((67)*(pow(r,2))))))))+(((52)*((pow(a,4))*((pow(r,13))*(((1160)*(pow(M,2)))+(((2852)*((M)*(r)))+((1667)*(pow(r,2))))))))+(((84)*((pow(a,14))*((pow(r,2))*(((192)*(pow(M,3)))+(((528)*((pow(M,2))*(r)))+(((466)*((M)*(pow(r,2))))+((131)*(pow(r,3)))))))))+(((52)*((pow(a,6))*((pow(r,10))*(((1216)*(pow(M,3)))+(((5136)*((pow(M,2))*(r)))+(((6834)*((M)*(pow(r,2))))+((2831)*(pow(r,3)))))))))+(((12)*((pow(a,12))*((pow(r,3))*(((1536)*(pow(M,4)))+(((8448)*((pow(M,3))*(r)))+(((16584)*((pow(M,2))*(pow(r,2))))+(((13284)*((M)*(pow(r,3))))+((3673)*(pow(r,4))))))))))+(((2)*((pow(a,8))*((pow(r,7))*(((14336)*(pow(M,4)))+(((97792)*((pow(M,3))*(r)))+(((236784)*((pow(M,2))*(pow(r,2))))+(((231928)*((M)*(pow(r,3))))+((77609)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,4))*(((2048)*(pow(M,5)))+(((23552)*((pow(M,4))*(r)))+(((108800)*((pow(M,3))*(pow(r,2))))+(((212416)*((pow(M,2))*(pow(r,3))))+(((177610)*((M)*(pow(r,4))))+((52177)*(pow(r,5))))))))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_657(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[657] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.0004882812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.1213202980486559743380749480182916742372543537143119515325369844517727977088119830000364426217026143"))*((pow(a,-18))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((35)*(pow(a,12)))+(((715)*(pow(r,12)))+(((70)*((pow(a,10))*((r)*(((8)*(M))+((7)*(r))))))+(((286)*((pow(a,2))*((pow(r,9))*(((8)*(M))+((11)*(r))))))+(((7)*((pow(a,8))*((pow(r,2))*(((192)*(pow(M,2)))+(((512)*((M)*(r)))+((323)*(pow(r,2))))))))+(((11)*((pow(a,4))*((pow(r,6))*(((192)*(pow(M,2)))+(((640)*((M)*(r)))+((503)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((864)*((pow(M,2))*(r)))+(((1944)*((M)*(pow(r,2))))+((1227)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((32768)*(pow(a,20)))+(((14549535)*(pow(r,20)))+(((255255)*((pow(a,2))*((pow(r,17))*(((278)*(M))+((431)*(r))))))+(((5)*((pow(a,18))*((r)*(((568042)*(M))+((349557)*(r))))))+(((12012)*((pow(a,4))*((pow(r,14))*(((9954)*(pow(M,2)))+(((37306)*((M)*(r)))+((30411)*(pow(r,2))))))))+(((5)*((pow(a,16))*((pow(r,2))*(((5026200)*(pow(M,2)))+(((9570536)*((M)*(r)))+((4107651)*(pow(r,2))))))))+(((1716)*((pow(a,6))*((pow(r,11))*(((46608)*(pow(M,3)))+(((348156)*((pow(M,2))*(r)))+(((705080)*((M)*(pow(r,2))))+((406635)*(pow(r,3)))))))))+(((4)*((pow(a,14))*((pow(r,3))*(((11537744)*(pow(M,3)))+(((55003116)*((pow(M,2))*(r)))+(((72514028)*((M)*(pow(r,2))))+((27771703)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((783488)*(pow(M,4)))+(((12974720)*((pow(M,3))*(r)))+(((55432812)*((pow(M,2))*(pow(r,2))))+(((82462820)*((M)*(pow(r,3))))+((38323295)*(pow(r,4))))))))))+(((4)*((pow(a,12))*((pow(r,4))*(((4147904)*(pow(M,4)))+(((54446784)*((pow(M,3))*(r)))+(((186996186)*((pow(M,2))*(pow(r,2))))+(((225694490)*((M)*(pow(r,3))))+((85876545)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,5))*(((129024)*(pow(M,5)))+(((16914176)*((pow(M,4))*(r)))+(((188550336)*((pow(M,3))*(pow(r,2))))+(((647378448)*((pow(M,2))*(pow(r,3))))+(((819578930)*((M)*(pow(r,4))))+((333200499)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((r)*((pow((pow(a,2))+(pow(r,2)),2))*((((4199)*(pow(r,19)))+(((63)*((pow(a,18))*(((2)*(M))+(r))))+(((221)*((pow(a,2))*((pow(r,16))*(((118)*(M))+((131)*(r))))))+(((21)*((pow(a,16))*((r)*(((160)*(pow(M,2)))+(((208)*((M)*(r)))+((67)*(pow(r,2))))))))+(((52)*((pow(a,4))*((pow(r,13))*(((1160)*(pow(M,2)))+(((2852)*((M)*(r)))+((1667)*(pow(r,2))))))))+(((84)*((pow(a,14))*((pow(r,2))*(((192)*(pow(M,3)))+(((528)*((pow(M,2))*(r)))+(((466)*((M)*(pow(r,2))))+((131)*(pow(r,3)))))))))+(((52)*((pow(a,6))*((pow(r,10))*(((1216)*(pow(M,3)))+(((5136)*((pow(M,2))*(r)))+(((6834)*((M)*(pow(r,2))))+((2831)*(pow(r,3)))))))))+(((12)*((pow(a,12))*((pow(r,3))*(((1536)*(pow(M,4)))+(((8448)*((pow(M,3))*(r)))+(((16584)*((pow(M,2))*(pow(r,2))))+(((13284)*((M)*(pow(r,3))))+((3673)*(pow(r,4))))))))))+(((2)*((pow(a,8))*((pow(r,7))*(((14336)*(pow(M,4)))+(((97792)*((pow(M,3))*(r)))+(((236784)*((pow(M,2))*(pow(r,2))))+(((231928)*((M)*(pow(r,3))))+((77609)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,4))*(((2048)*(pow(M,5)))+(((23552)*((pow(M,4))*(r)))+(((108800)*((pow(M,3))*(pow(r,2))))+(((212416)*((pow(M,2))*(pow(r,3))))+(((177610)*((M)*(pow(r,4))))+((52177)*(pow(r,5))))))))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_658(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[658] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0002232142857142857142857142857142857142857142857142857142857142857142857142857142857142857142857142857"))*((HighPrecisionScalar("4.123105625617660549821409855974077025147199225373620434398633573094954346337621593587863650810684297"))*((pow(a,-9))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-4))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,2))+((-1)*((r)*((M)+((36)*(r))))))*((expr[2])*(((a)*((((15159)*(pow(a,12)))+(((225225)*(pow(r,12)))+(((60060)*((pow(a,2))*((pow(r,9))*(((11)*(M))+((17)*(r))))))+(((4)*((pow(a,10))*((r)*(((50989)*(M))+((48233)*(r))))))+(((385)*((pow(a,4))*((pow(r,6))*(((1376)*(pow(M,2)))+(((5488)*((M)*(r)))+((4829)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((383648)*(pow(M,2)))+(((1199472)*((M)*(r)))+((833187)*(pow(r,2)))))))+((8)*((pow(a,6))*((pow(r,3))*(((12176)*(pow(M,3)))+(((114176)*((pow(M,2))*(r)))+(((305967)*((M)*(pow(r,2))))+((214848)*(pow(r,3)))))))))))))))*((((pow(r,4))*(((-2)*(M))+(r)))+(((pow(a,4))*(((2)*(M))+(r)))+(((pow(a,2))*(((-4)*((pow(M,2))*(r)))+((2)*(pow(r,3)))))+((pow(expr[0],2))*(pow(expr[1],2))))))*(expr[2]))))+((-70)*((((35)*(pow(a,16)))+(((6435)*(pow(r,16)))+(((280)*((pow(a,14))*((r)*(((8)*(M))+((5)*(r))))))+(((3432)*((pow(a,2))*((pow(r,13))*(((8)*(M))+((11)*(r))))))+(((420)*((pow(a,12))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((29)*(pow(r,2))))))))+(((132)*((pow(a,4))*((pow(r,10))*(((288)*(pow(M,2)))+(((960)*((M)*(r)))+((709)*(pow(r,2))))))))+(((56)*((pow(a,10))*((pow(r,3))*(((256)*(pow(M,3)))+(((1344)*((pow(M,2))*(r)))+(((1992)*((M)*(pow(r,2))))+((847)*(pow(r,3)))))))))+(((72)*((pow(a,6))*((pow(r,7))*(((256)*(pow(M,3)))+(((1728)*((pow(M,2))*(r)))+(((3272)*((M)*(pow(r,2))))+((1761)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((16384)*((pow(M,3))*(r)))+(((74112)*((pow(M,2))*(pow(r,2))))+(((111616)*((M)*(pow(r,3))))+((50569)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_659(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[659] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.001116071428571428571428571428571428571428571428571428571428571428571428571428571428571428571428571429"))*((HighPrecisionScalar("1.843908891458577462000454856352558631449361009744492801601550441088534205360375092153578818158656113"))*((pow(a,-11))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,6))+(((pow(a,4))*((((3)*(M))+((-32)*(r)))*(r)))+(((-3)*((pow(r,5))*((M)+((36)*(r)))))+((-1)*((pow(a,2))*((pow(r,2))*(((4)*(pow(M,2)))+(((148)*((M)*(r)))+((141)*(pow(r,2)))))))))))*(((a)*((r)*(((-225225)*((((2)*(M))+((-1)*(r)))*(pow(r,16))))+(((15159)*((pow(a,16))*(((2)*(M))+(r))))+(((30030)*((pow(a,2))*((pow(r,13))*(((-74)*(pow(M,2)))+(((-46)*((M)*(r)))+((49)*(pow(r,2))))))))+(((2)*((pow(a,14))*((r)*(((173638)*(pow(M,2)))+(((294910)*((M)*(r)))+((111625)*(pow(r,2))))))))+(((770)*((pow(a,4))*((pow(r,10))*(((-4808)*(pow(M,3)))+(((-10104)*((pow(M,2))*(r)))+(((216)*((M)*(pow(r,2))))+((5359)*(pow(r,3)))))))))+(((2)*((pow(a,12))*((pow(r,2))*(((-24264)*(pow(M,3)))+(((1005432)*((pow(M,2))*(r)))+(((1621720)*((M)*(pow(r,2))))+((617105)*(pow(r,3)))))))))+(((2)*((pow(a,10))*((pow(r,3))*(((-669888)*(pow(M,4)))+(((-1436832)*((pow(M,3))*(r)))+(((1417758)*((pow(M,2))*(pow(r,2))))+(((4051170)*((M)*(pow(r,3))))+((1789045)*(pow(r,4))))))))))+(((2)*((pow(a,6))*((pow(r,7))*(((-1156928)*(pow(M,4)))+(((-5090464)*((pow(M,3))*(r)))+(((-4518942)*((pow(M,2))*(pow(r,2))))+(((2969314)*((M)*(pow(r,3))))+((3229067)*(pow(r,4))))))))))+((-4)*((pow(a,8))*((pow(r,4))*(((97408)*(pow(M,5)))+(((913408)*((pow(M,4))*(r)))+(((2325976)*((pow(M,3))*(pow(r,2))))+(((577024)*((pow(M,2))*(pow(r,3))))+(((-2564945)*((M)*(pow(r,4))))+((-1532480)*(pow(r,5)))))))))))))))))))))+((-35)*((((35)*(pow(a,16)))+(((6435)*(pow(r,16)))+(((280)*((pow(a,14))*((r)*(((8)*(M))+((5)*(r))))))+(((3432)*((pow(a,2))*((pow(r,13))*(((8)*(M))+((11)*(r))))))+(((420)*((pow(a,12))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((29)*(pow(r,2))))))))+(((132)*((pow(a,4))*((pow(r,10))*(((288)*(pow(M,2)))+(((960)*((M)*(r)))+((709)*(pow(r,2))))))))+(((56)*((pow(a,10))*((pow(r,3))*(((256)*(pow(M,3)))+(((1344)*((pow(M,2))*(r)))+(((1992)*((M)*(pow(r,2))))+((847)*(pow(r,3)))))))))+(((72)*((pow(a,6))*((pow(r,7))*(((256)*(pow(M,3)))+(((1728)*((pow(M,2))*(r)))+(((3272)*((M)*(pow(r,2))))+((1761)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((16384)*((pow(M,3))*(r)))+(((74112)*((pow(M,2))*(pow(r,2))))+(((111616)*((M)*(pow(r,3))))+((50569)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

}
