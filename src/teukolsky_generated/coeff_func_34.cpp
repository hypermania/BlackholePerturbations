
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_170(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[170] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.003906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.3007926037591191772329159723941269669258747941140962389679539478684165032010913803338927704688829938"))*((pow(a,-11))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((5)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((3)*(r))))))))*(((a)*((r)*(((-765765)*((((2)*(M))+((-1)*(r)))*(pow(r,20))))+(((30563)*((pow(a,20))*(((2)*(M))+(r))))+(((60060)*((pow(a,2))*((pow(r,17))*(((-137)*(pow(M,2)))+(((-118)*((M)*(r)))+((106)*(pow(r,2))))))))+(((4)*((pow(a,18))*((r)*(((240215)*(pow(M,2)))+(((393030)*((M)*(r)))+((144102)*(pow(r,2))))))))+(((-3003)*((pow(a,4))*((pow(r,14))*(((5168)*(pow(M,3)))+(((14168)*((pow(M,2))*(r)))+(((2166)*((M)*(pow(r,2))))+((-7821)*(pow(r,3)))))))))+(((pow(a,16))*((pow(r,2))*(((823024)*(pow(M,3)))+(((8921416)*((pow(M,2))*(r)))+(((12015678)*((M)*(pow(r,2))))+((4185993)*(pow(r,3))))))))+(((264)*((pow(a,6))*((pow(r,11))*(((-44976)*(pow(M,4)))+(((-262764)*((pow(M,3))*(r)))+(((-322901)*((pow(M,2))*(pow(r,2))))+(((95652)*((M)*(pow(r,3))))+((191292)*(pow(r,4))))))))))+(((8)*((pow(a,14))*((pow(r,3))*(((-567568)*(pow(M,4)))+(((-517868)*((pow(M,3))*(r)))+(((3591877)*((pow(M,2))*(pow(r,2))))+(((5574244)*((M)*(pow(r,3))))+((2061836)*(pow(r,4))))))))))+(((-2)*((pow(a,8))*((pow(r,8))*(((1509632)*(pow(M,5)))+(((19973248)*((pow(M,4))*(r)))+(((60802040)*((pow(M,3))*(pow(r,2))))+(((37502420)*((pow(M,2))*(pow(r,3))))+(((-42126950)*((M)*(pow(r,4))))+((-34925569)*(pow(r,5)))))))))))+(((-16)*((pow(a,10))*((pow(r,5))*(((3584)*(pow(M,6)))+(((366656)*((pow(M,5))*(r)))+(((3050784)*((pow(M,4))*(pow(r,2))))+(((6435380)*((pow(M,3))*(pow(r,3))))+(((596390)*((pow(M,2))*(pow(r,4))))+(((-7375881)*((M)*(pow(r,5))))+((-4039833)*(pow(r,6))))))))))))+((pow(a,12))*(((-2847232)*((pow(M,5))*(pow(r,4))))+(((-25280256)*((pow(M,4))*(pow(r,5))))+(((-40178160)*((pow(M,3))*(pow(r,6))))+(((35309480)*((pow(M,2))*(pow(r,7))))+(((94050540)*((M)*(pow(r,8))))+((40255950)*(pow(r,9)))))))))))))))))))))+((-315)*((pow((pow(a,2))+(pow(r,2)),2))*((((7)*(pow(a,16)))+(((2431)*(pow(r,16)))+(((112)*((pow(a,14))*((r)*(((5)*(M))+((3)*(r))))))+(((2288)*((pow(a,2))*((pow(r,13))*(((5)*(M))+((6)*(r))))))+(((572)*((pow(a,4))*((pow(r,10))*(((32)*(pow(M,2)))+(((88)*((M)*(r)))+((57)*(pow(r,2))))))))+(((28)*((pow(a,12))*((pow(r,2))*(((160)*(pow(M,2)))+(((280)*((M)*(r)))+((117)*(pow(r,2))))))))+(((112)*((pow(a,10))*((pow(r,3))*(((64)*(pow(M,3)))+(((256)*((pow(M,2))*(r)))+(((323)*((M)*(pow(r,2))))+((124)*(pow(r,3)))))))))+(((176)*((pow(a,6))*((pow(r,7))*(((64)*(pow(M,3)))+(((320)*((pow(M,2))*(r)))+(((503)*((M)*(pow(r,2))))+((239)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((9216)*((pow(M,3))*(r)))+(((31104)*((pow(M,2))*(pow(r,2))))+(((39264)*((M)*(pow(r,3))))+((15849)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_171(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[171] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.001953125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.3007926037591191772329159723941269669258747941140962389679539478684165032010913803338927704688829938"))*((pow(a,-13))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((pow(a,4))+(((5)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((3)*(r))))))))*(((a)*((r)*(((-765765)*((((2)*(M))+((-1)*(r)))*(pow(r,20))))+(((30563)*((pow(a,20))*(((2)*(M))+(r))))+(((60060)*((pow(a,2))*((pow(r,17))*(((-137)*(pow(M,2)))+(((-118)*((M)*(r)))+((106)*(pow(r,2))))))))+(((4)*((pow(a,18))*((r)*(((240215)*(pow(M,2)))+(((393030)*((M)*(r)))+((144102)*(pow(r,2))))))))+(((-3003)*((pow(a,4))*((pow(r,14))*(((5168)*(pow(M,3)))+(((14168)*((pow(M,2))*(r)))+(((2166)*((M)*(pow(r,2))))+((-7821)*(pow(r,3)))))))))+(((pow(a,16))*((pow(r,2))*(((823024)*(pow(M,3)))+(((8921416)*((pow(M,2))*(r)))+(((12015678)*((M)*(pow(r,2))))+((4185993)*(pow(r,3))))))))+(((264)*((pow(a,6))*((pow(r,11))*(((-44976)*(pow(M,4)))+(((-262764)*((pow(M,3))*(r)))+(((-322901)*((pow(M,2))*(pow(r,2))))+(((95652)*((M)*(pow(r,3))))+((191292)*(pow(r,4))))))))))+(((8)*((pow(a,14))*((pow(r,3))*(((-567568)*(pow(M,4)))+(((-517868)*((pow(M,3))*(r)))+(((3591877)*((pow(M,2))*(pow(r,2))))+(((5574244)*((M)*(pow(r,3))))+((2061836)*(pow(r,4))))))))))+(((-2)*((pow(a,8))*((pow(r,8))*(((1509632)*(pow(M,5)))+(((19973248)*((pow(M,4))*(r)))+(((60802040)*((pow(M,3))*(pow(r,2))))+(((37502420)*((pow(M,2))*(pow(r,3))))+(((-42126950)*((M)*(pow(r,4))))+((-34925569)*(pow(r,5)))))))))))+(((-16)*((pow(a,10))*((pow(r,5))*(((3584)*(pow(M,6)))+(((366656)*((pow(M,5))*(r)))+(((3050784)*((pow(M,4))*(pow(r,2))))+(((6435380)*((pow(M,3))*(pow(r,3))))+(((596390)*((pow(M,2))*(pow(r,4))))+(((-7375881)*((M)*(pow(r,5))))+((-4039833)*(pow(r,6))))))))))))+((pow(a,12))*(((-2847232)*((pow(M,5))*(pow(r,4))))+(((-25280256)*((pow(M,4))*(pow(r,5))))+(((-40178160)*((pow(M,3))*(pow(r,6))))+(((35309480)*((pow(M,2))*(pow(r,7))))+(((94050540)*((M)*(pow(r,8))))+((40255950)*(pow(r,9)))))))))))))))))))))+((-315)*((pow((pow(a,2))+(pow(r,2)),2))*((((7)*(pow(a,16)))+(((2431)*(pow(r,16)))+(((112)*((pow(a,14))*((r)*(((5)*(M))+((3)*(r))))))+(((2288)*((pow(a,2))*((pow(r,13))*(((5)*(M))+((6)*(r))))))+(((572)*((pow(a,4))*((pow(r,10))*(((32)*(pow(M,2)))+(((88)*((M)*(r)))+((57)*(pow(r,2))))))))+(((28)*((pow(a,12))*((pow(r,2))*(((160)*(pow(M,2)))+(((280)*((M)*(r)))+((117)*(pow(r,2))))))))+(((112)*((pow(a,10))*((pow(r,3))*(((64)*(pow(M,3)))+(((256)*((pow(M,2))*(r)))+(((323)*((M)*(pow(r,2))))+((124)*(pow(r,3)))))))))+(((176)*((pow(a,6))*((pow(r,7))*(((64)*(pow(M,3)))+(((320)*((pow(M,2))*(r)))+(((503)*((M)*(pow(r,2))))+((239)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((9216)*((pow(M,3))*(r)))+(((31104)*((pow(M,2))*(pow(r,2))))+(((39264)*((M)*(pow(r,3))))+((15849)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_172(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[172] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.007812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.3007926037591191772329159723941269669258747941140962389679539478684165032010913803338927704688829938"))*((pow(a,-12))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((5)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((3)*(r))))))))*(((a)*((r)*(((765765)*((((2)*(M))+((-1)*(r)))*(pow(r,20))))+(((-30563)*((pow(a,20))*(((2)*(M))+(r))))+(((60060)*((pow(a,2))*((pow(r,17))*(((137)*(pow(M,2)))+(((118)*((M)*(r)))+((-106)*(pow(r,2))))))))+(((-4)*((pow(a,18))*((r)*(((240215)*(pow(M,2)))+(((393030)*((M)*(r)))+((144102)*(pow(r,2))))))))+(((3003)*((pow(a,4))*((pow(r,14))*(((5168)*(pow(M,3)))+(((14168)*((pow(M,2))*(r)))+(((2166)*((M)*(pow(r,2))))+((-7821)*(pow(r,3)))))))))+(((-1)*((pow(a,16))*((pow(r,2))*(((823024)*(pow(M,3)))+(((8921416)*((pow(M,2))*(r)))+(((12015678)*((M)*(pow(r,2))))+((4185993)*(pow(r,3)))))))))+(((264)*((pow(a,6))*((pow(r,11))*(((44976)*(pow(M,4)))+(((262764)*((pow(M,3))*(r)))+(((322901)*((pow(M,2))*(pow(r,2))))+(((-95652)*((M)*(pow(r,3))))+((-191292)*(pow(r,4))))))))))+(((-8)*((pow(a,14))*((pow(r,3))*(((-567568)*(pow(M,4)))+(((-517868)*((pow(M,3))*(r)))+(((3591877)*((pow(M,2))*(pow(r,2))))+(((5574244)*((M)*(pow(r,3))))+((2061836)*(pow(r,4))))))))))+(((2)*((pow(a,8))*((pow(r,8))*(((1509632)*(pow(M,5)))+(((19973248)*((pow(M,4))*(r)))+(((60802040)*((pow(M,3))*(pow(r,2))))+(((37502420)*((pow(M,2))*(pow(r,3))))+(((-42126950)*((M)*(pow(r,4))))+((-34925569)*(pow(r,5)))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((1423616)*(pow(M,5)))+(((12640128)*((pow(M,4))*(r)))+(((20089080)*((pow(M,3))*(pow(r,2))))+(((-17654740)*((pow(M,2))*(pow(r,3))))+(((-47025270)*((M)*(pow(r,4))))+((-20127975)*(pow(r,5)))))))))))+((16)*((pow(a,10))*((pow(r,5))*(((3584)*(pow(M,6)))+(((366656)*((pow(M,5))*(r)))+(((3050784)*((pow(M,4))*(pow(r,2))))+(((6435380)*((pow(M,3))*(pow(r,3))))+(((596390)*((pow(M,2))*(pow(r,4))))+(((-7375881)*((M)*(pow(r,5))))+((-4039833)*(pow(r,6))))))))))))))))))))))))+((315)*((pow((pow(a,2))+(pow(r,2)),2))*((((7)*(pow(a,16)))+(((2431)*(pow(r,16)))+(((112)*((pow(a,14))*((r)*(((5)*(M))+((3)*(r))))))+(((2288)*((pow(a,2))*((pow(r,13))*(((5)*(M))+((6)*(r))))))+(((572)*((pow(a,4))*((pow(r,10))*(((32)*(pow(M,2)))+(((88)*((M)*(r)))+((57)*(pow(r,2))))))))+(((28)*((pow(a,12))*((pow(r,2))*(((160)*(pow(M,2)))+(((280)*((M)*(r)))+((117)*(pow(r,2))))))))+(((112)*((pow(a,10))*((pow(r,3))*(((64)*(pow(M,3)))+(((256)*((pow(M,2))*(r)))+(((323)*((M)*(pow(r,2))))+((124)*(pow(r,3)))))))))+(((176)*((pow(a,6))*((pow(r,7))*(((64)*(pow(M,3)))+(((320)*((pow(M,2))*(r)))+(((503)*((M)*(pow(r,2))))+((239)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((1024)*(pow(M,4)))+(((9216)*((pow(M,3))*(r)))+(((31104)*((pow(M,2))*(pow(r,2))))+(((39264)*((M)*(pow(r,3))))+((15849)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_173(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[173] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.527525231651946668862682397909336162994818858922657300869080707968956141849256962201453853164481678"))*((pow(a,-5))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-2))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,2))+((-1)*((r)*((M)+((6)*(r))))))*((expr[2])*(((a)*((((4)*(pow(a,4)))+(((15)*(pow(r,4)))+((pow(a,2))*((r)*(((22)*(M))+((19)*(r)))))))*((((pow(r,4))*(((-2)*(M))+(r)))+(((pow(a,4))*(((2)*(M))+(r)))+(((pow(a,2))*(((-4)*((pow(M,2))*(r)))+((2)*(pow(r,3)))))+((pow(expr[0],2))*(pow(expr[1],2))))))*(expr[2]))))+((-6)*((r)*((((5)*(pow(r,7)))+(((3)*((pow(a,6))*(((2)*(M))+(r))))+(((pow(a,2))*((pow(r,4))*(((14)*(M))+((13)*(r)))))+((pow(a,4))*((r)*(((8)*(pow(M,2)))+(((20)*((M)*(r)))+((11)*(pow(r,2))))))))))*((expr[0])*((expr[1])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_174(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[174] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.5833333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((pow(a,-7))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-3))*((((3)*(pow(a,6)))+(((pow(a,4))*(((M)+((-10)*(r)))*(r)))+(((-5)*((pow(r,5))*((M)+((6)*(r)))))+((-1)*((pow(a,2))*((pow(r,2))*(((4)*(pow(M,2)))+(((32)*((M)*(r)))+((43)*(pow(r,2)))))))))))*(((4)*(pow(a,7)))+(((15)*((a)*((pow(r,5))*(((-2)*(M))+(r)))))+(((pow(a,5))*((r)*(((14)*(M))+((23)*(r)))))+(((2)*((pow(a,3))*((pow(r,2))*(((-22)*(pow(M,2)))+(((-8)*((M)*(r)))+((17)*(pow(r,2))))))))+(((((4)*(pow(a,5)))+(((15)*((a)*(pow(r,4))))+((pow(a,3))*((r)*(((22)*(M))+((19)*(r)))))))*(pow(expr[0],2)))+((-6)*((((3)*(pow(a,4)))+(((5)*(pow(r,4)))+((4)*((pow(a,2))*((r)*((M)+((2)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))))).cast<double>());
}
