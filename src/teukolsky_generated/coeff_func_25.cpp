
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_125(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[125] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.04166666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666667"))*((pow(a,-5))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-3))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((-7)*((a)*((r)*(((15)*((pow(r,12))*(((-2)*(M))+(r))))+(((33)*((pow(a,12))*(((2)*(M))+(r))))+(((-20)*((pow(a,2))*((pow(r,9))*((pow(M,2))+(((8)*((M)*(r)))+((-5)*(pow(r,2))))))))+(((4)*((pow(a,10))*((r)*(((-59)*(pow(M,2)))+(((40)*((M)*(r)))+((43)*(pow(r,2))))))))+(((pow(a,4))*((pow(r,6))*(((16)*(pow(M,3)))+(((-104)*((pow(M,2))*(r)))+(((-338)*((M)*(pow(r,2))))+((283)*(pow(r,3))))))))+(((pow(a,8))*((pow(r,2))*(((272)*(pow(M,3)))+(((-536)*((pow(M,2))*(r)))+(((14)*((M)*(pow(r,2))))+((373)*(pow(r,3))))))))+((16)*((pow(a,6))*((pow(r,3))*(((-8)*(pow(M,4)))+(((18)*((pow(M,3))*(r)))+(((-24)*((pow(M,2))*(pow(r,2))))+(((-18)*((M)*(pow(r,3))))+((27)*(pow(r,4)))))))))))))))))))+((105)*((pow((pow(a,2))+(pow(r,2)),6))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))).cast<double>());
}

void compute_coeffs_126(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[126] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.1458333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((pow(a,-7))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-4))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((a)*((r)*(((15)*((pow(r,12))*(((-2)*(M))+(r))))+(((33)*((pow(a,12))*(((2)*(M))+(r))))+(((-20)*((pow(a,2))*((pow(r,9))*((pow(M,2))+(((8)*((M)*(r)))+((-5)*(pow(r,2))))))))+(((4)*((pow(a,10))*((r)*(((-59)*(pow(M,2)))+(((40)*((M)*(r)))+((43)*(pow(r,2))))))))+(((pow(a,4))*((pow(r,6))*(((16)*(pow(M,3)))+(((-104)*((pow(M,2))*(r)))+(((-338)*((M)*(pow(r,2))))+((283)*(pow(r,3))))))))+(((pow(a,8))*((pow(r,2))*(((272)*(pow(M,3)))+(((-536)*((pow(M,2))*(r)))+(((14)*((M)*(pow(r,2))))+((373)*(pow(r,3))))))))+((16)*((pow(a,6))*((pow(r,3))*(((-8)*(pow(M,4)))+(((18)*((pow(M,3))*(r)))+(((-24)*((pow(M,2))*(pow(r,2))))+(((-18)*((M)*(pow(r,3))))+((27)*(pow(r,4))))))))))))))))))+((-15)*((pow((pow(a,2))+(pow(r,2)),6))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))).cast<double>());
}

void compute_coeffs_127(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[127] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-1.750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-6))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-4))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((-1)*((a)*((r)*(((15)*((pow(r,12))*(((-2)*(M))+(r))))+(((33)*((pow(a,12))*(((2)*(M))+(r))))+(((-20)*((pow(a,2))*((pow(r,9))*((pow(M,2))+(((8)*((M)*(r)))+((-5)*(pow(r,2))))))))+(((4)*((pow(a,10))*((r)*(((-59)*(pow(M,2)))+(((40)*((M)*(r)))+((43)*(pow(r,2))))))))+(((pow(a,4))*((pow(r,6))*(((16)*(pow(M,3)))+(((-104)*((pow(M,2))*(r)))+(((-338)*((M)*(pow(r,2))))+((283)*(pow(r,3))))))))+(((pow(a,8))*((pow(r,2))*(((272)*(pow(M,3)))+(((-536)*((pow(M,2))*(r)))+(((14)*((M)*(pow(r,2))))+((373)*(pow(r,3))))))))+((16)*((pow(a,6))*((pow(r,3))*(((-8)*(pow(M,4)))+(((18)*((pow(M,3))*(r)))+(((-24)*((pow(M,2))*(pow(r,2))))+(((-18)*((M)*(pow(r,3))))+((27)*(pow(r,4)))))))))))))))))))+((15)*((pow((pow(a,2))+(pow(r,2)),6))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))).cast<double>());
}

void compute_coeffs_128(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[128] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.002604166666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666667"))*((HighPrecisionScalar("3.316624790355399849114932736670686683927088545589353597058682146116484642609043846708843399128290651"))*((pow(a,-9))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,4)))+(((-1)*((pow(a,2))*((r)*(((6)*(M))+(r)))))+((2)*((pow(r,2))*(((2)*(pow(M,2)))+(((11)*((M)*(r)))+((-6)*(pow(r,2)))))))))*((expr[2])*(((a)*((((663)*(pow(a,12)))+(((945)*(pow(r,12)))+(((420)*((pow(a,2))*((pow(r,9))*((M)+((13)*(r))))))+(((4)*((pow(a,10))*((r)*(((185)*(M))+((1087)*(r))))))+(((7)*((pow(a,4))*((pow(r,6))*(((-32)*(pow(M,2)))+(((272)*((M)*(r)))+((1867)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((-416)*(pow(M,2)))+(((2544)*((M)*(r)))+((11691)*(pow(r,2)))))))+((8)*((pow(a,6))*((pow(r,3))*(((16)*(pow(M,3)))+(((-80)*((pow(M,2))*(r)))+(((411)*((M)*(pow(r,2))))+((2070)*(pow(r,3)))))))))))))))*((((pow(r,4))*(((-2)*(M))+(r)))+(((pow(a,4))*(((2)*(M))+(r)))+(((pow(a,2))*(((-4)*((pow(M,2))*(r)))+((2)*(pow(r,3)))))+((pow(expr[0],2))*(pow(expr[1],2))))))*(expr[2]))))+((-210)*((pow((pow(a,2))+(pow(r,2)),6))*(((pow(a,4))+(((9)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((8)*(M))+((5)*(r))))))))*((expr[0])*((expr[1])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_129(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[129] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.01041666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666667"))*((HighPrecisionScalar("3.316624790355399849114932736670686683927088545589353597058682146116484642609043846708843399128290651"))*((pow(a,-7))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-4))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[2])*(((((945)*((a)*((pow(r,16))*(((-2)*(M))+(r)))))+(((663)*((pow(a,17))*(((2)*(M))+(r))))+(((210)*((pow(a,3))*((pow(r,13))*(((-22)*(pow(M,2)))+(((-50)*((M)*(r)))+((35)*(pow(r,2))))))))+(((2)*((pow(a,15))*((r)*(((-586)*(pow(M,2)))+(((4718)*((M)*(r)))+((2837)*(pow(r,2))))))))+(((-14)*((pow(a,5))*((pow(r,10))*(((88)*(pow(M,3)))+(((1848)*((pow(M,2))*(r)))+(((1536)*((M)*(pow(r,2))))+((-1781)*(pow(r,3)))))))))+(((2)*((pow(a,13))*((pow(r,2))*(((-1896)*(pow(M,3)))+(((-6360)*((pow(M,2))*(r)))+(((13040)*((M)*(pow(r,2))))+((10525)*(pow(r,3)))))))))+(((2)*((pow(a,11))*((pow(r,3))*(((960)*(pow(M,4)))+(((-5664)*((pow(M,3))*(r)))+(((-21570)*((pow(M,2))*(pow(r,2))))+(((16770)*((M)*(pow(r,3))))+((22145)*(pow(r,4))))))))))+(((2)*((pow(a,7))*((pow(r,7))*(((320)*(pow(M,4)))+(((-3104)*((pow(M,3))*(r)))+(((-29550)*((pow(M,2))*(pow(r,2))))+(((-7342)*((M)*(pow(r,3))))+((24079)*(pow(r,4))))))))))+((4)*((pow(a,9))*((pow(r,4))*(((-128)*(pow(M,5)))+(((640)*((pow(M,4))*(r)))+(((-3128)*((pow(M,3))*(pow(r,2))))+(((-17360)*((pow(M,2))*(pow(r,3))))+(((3445)*((M)*(pow(r,4))))+((14470)*(pow(r,5)))))))))))))))))))*(expr[2]))+((-105)*((pow((pow(a,2))+(pow(r,2)),6))*(((pow(a,4))+(((9)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((8)*(M))+((5)*(r))))))))*((expr[0])*((expr[1])*(expr[3])))))))))))))).cast<double>());
}
