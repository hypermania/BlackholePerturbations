
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_595(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[595] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0002441406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.2672612419124243846845534808797535215540014148413376390216961048085739397362099305697721353710271123"))*((pow(a,-17))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((458752)*(pow(a,32)))+(((14549535)*(pow(r,32)))+(((255255)*((pow(a,2))*((pow(r,29))*(((134)*(M))+((845)*(r))))))+(((7)*((pow(a,30))*((r)*(((2751502)*(M))+((2424327)*(r))))))+(((51051)*((pow(a,4))*((pow(r,26))*(((168)*(pow(M,2)))+(((9212)*((M)*(r)))+((29217)*(pow(r,2))))))))+(((7)*((pow(a,28))*((pow(r,2))*(((3920040)*(pow(M,2)))+(((42441068)*((M)*(r)))+((29480595)*(pow(r,2))))))))+(((7293)*((pow(a,6))*((pow(r,23))*(((-576)*(pow(M,3)))+(((14976)*((pow(M,2))*(r)))+(((411070)*((M)*(pow(r,2))))+((875163)*(pow(r,3)))))))))+(((7)*((pow(a,26))*((pow(r,3))*(((-4443840)*(pow(M,3)))+(((40374720)*((pow(M,2))*(r)))+(((298014322)*((M)*(pow(r,2))))+((194318675)*(pow(r,3)))))))))+(((2431)*((pow(a,8))*((pow(r,20))*(((1280)*(pow(M,4)))+(((-19840)*((pow(M,3))*(r)))+(((263280)*((pow(M,2))*(pow(r,2))))+(((4830104)*((M)*(pow(r,3))))+((7774925)*(pow(r,4))))))))))+(((pow(a,24))*((pow(r,4))*(((35930880)*(pow(M,4)))+(((-239207040)*((pow(M,3))*(r)))+(((1351691280)*((pow(M,2))*(pow(r,2))))+(((8889172456)*((M)*(pow(r,3))))+((5792658945)*(pow(r,4)))))))))+(((221)*((pow(a,10))*((pow(r,17))*(((-12288)*(pow(M,5)))+(((143360)*((pow(M,4))*(r)))+(((-1139520)*((pow(M,3))*(pow(r,2))))+(((10332480)*((pow(M,2))*(pow(r,3))))+(((142803506)*((M)*(pow(r,4))))+((185664555)*(pow(r,5)))))))))))+(((pow(a,22))*((pow(r,5))*(((-32944128)*(pow(M,5)))+(((205086720)*((pow(M,4))*(r)))+(((-835414080)*((pow(M,3))*(pow(r,2))))+(((3968327040)*((pow(M,2))*(pow(r,3))))+(((25775228834)*((M)*(pow(r,4))))+((17368821597)*(pow(r,5))))))))))+(((17)*((pow(a,12))*((pow(r,14))*(((147456)*(pow(M,6)))+(((-1400832)*((pow(M,5))*(r)))+(((8473600)*((pow(M,4))*(pow(r,2))))+(((-46394880)*((pow(M,3))*(pow(r,3))))+(((325178280)*((pow(M,2))*(pow(r,4))))+(((3620991052)*((M)*(pow(r,5))))+((3968552175)*(pow(r,6))))))))))))+(((pow(a,20))*((pow(r,6))*(((21315584)*(pow(M,6)))+(((-133718016)*((pow(M,5))*(r)))+(((509475840)*((pow(M,4))*(pow(r,2))))+(((-1751395840)*((pow(M,3))*(pow(r,3))))+(((7958682120)*((pow(M,2))*(pow(r,4))))+(((53935859500)*((M)*(pow(r,5))))+((38485430289)*(pow(r,6)))))))))))+(((17)*((pow(a,14))*((pow(r,11))*(((-131072)*(pow(M,7)))+(((1048576)*((pow(M,6))*(r)))+(((-5296128)*((pow(M,5))*(pow(r,2))))+(((22528000)*((pow(M,4))*(pow(r,3))))+(((-96691840)*((pow(M,3))*(pow(r,4))))+(((563211264)*((pow(M,2))*(pow(r,5))))+(((5283421654)*((M)*(pow(r,6))))+((5033330771)*(pow(r,7)))))))))))))+(((pow(a,18))*((pow(r,7))*(((-8519680)*(pow(M,7)))+(((55443456)*((pow(M,6))*(r)))+(((-219156480)*((pow(M,5))*(pow(r,2))))+(((724889600)*((pow(M,4))*(pow(r,3))))+(((-2447760000)*((pow(M,3))*(pow(r,4))))+(((11474144640)*((pow(M,2))*(pow(r,5))))+(((84142593710)*((M)*(pow(r,6))))+((64841932785)*(pow(r,7))))))))))))+((pow(a,16))*((pow(r,8))*(((1572864)*(pow(M,8)))+(((-10747904)*((pow(M,7))*(r)))+(((49446912)*((pow(M,6))*(pow(r,2))))+(((-187318272)*((pow(M,5))*(pow(r,3))))+(((652065280)*((pow(M,4))*(pow(r,4))))+(((-2386530048)*((pow(M,3))*(pow(r,5))))+(((12177929568)*((pow(M,2))*(pow(r,6))))+(((99541831984)*((M)*(pow(r,7))))+((84427450989)*(pow(r,8)))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((765765)*((r)*((pow((pow(a,2))+(pow(r,2)),14))*((((19)*(pow(r,7)))+(((3)*((pow(a,6))*(((2)*(M))+(r))))+(((pow(a,2))*((pow(r,4))*(((70)*(M))+((41)*(r)))))+((pow(a,4))*((r)*(((64)*(pow(M,2)))+(((76)*((M)*(r)))+((25)*(pow(r,2))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_596(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[596] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0001220703125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.2672612419124243846845534808797535215540014148413376390216961048085739397362099305697721353710271123"))*((pow(a,-19))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((458752)*(pow(a,32)))+(((14549535)*(pow(r,32)))+(((255255)*((pow(a,2))*((pow(r,29))*(((134)*(M))+((845)*(r))))))+(((7)*((pow(a,30))*((r)*(((2751502)*(M))+((2424327)*(r))))))+(((51051)*((pow(a,4))*((pow(r,26))*(((168)*(pow(M,2)))+(((9212)*((M)*(r)))+((29217)*(pow(r,2))))))))+(((7)*((pow(a,28))*((pow(r,2))*(((3920040)*(pow(M,2)))+(((42441068)*((M)*(r)))+((29480595)*(pow(r,2))))))))+(((7293)*((pow(a,6))*((pow(r,23))*(((-576)*(pow(M,3)))+(((14976)*((pow(M,2))*(r)))+(((411070)*((M)*(pow(r,2))))+((875163)*(pow(r,3)))))))))+(((7)*((pow(a,26))*((pow(r,3))*(((-4443840)*(pow(M,3)))+(((40374720)*((pow(M,2))*(r)))+(((298014322)*((M)*(pow(r,2))))+((194318675)*(pow(r,3)))))))))+(((2431)*((pow(a,8))*((pow(r,20))*(((1280)*(pow(M,4)))+(((-19840)*((pow(M,3))*(r)))+(((263280)*((pow(M,2))*(pow(r,2))))+(((4830104)*((M)*(pow(r,3))))+((7774925)*(pow(r,4))))))))))+(((pow(a,24))*((pow(r,4))*(((35930880)*(pow(M,4)))+(((-239207040)*((pow(M,3))*(r)))+(((1351691280)*((pow(M,2))*(pow(r,2))))+(((8889172456)*((M)*(pow(r,3))))+((5792658945)*(pow(r,4)))))))))+(((221)*((pow(a,10))*((pow(r,17))*(((-12288)*(pow(M,5)))+(((143360)*((pow(M,4))*(r)))+(((-1139520)*((pow(M,3))*(pow(r,2))))+(((10332480)*((pow(M,2))*(pow(r,3))))+(((142803506)*((M)*(pow(r,4))))+((185664555)*(pow(r,5)))))))))))+(((pow(a,22))*((pow(r,5))*(((-32944128)*(pow(M,5)))+(((205086720)*((pow(M,4))*(r)))+(((-835414080)*((pow(M,3))*(pow(r,2))))+(((3968327040)*((pow(M,2))*(pow(r,3))))+(((25775228834)*((M)*(pow(r,4))))+((17368821597)*(pow(r,5))))))))))+(((17)*((pow(a,12))*((pow(r,14))*(((147456)*(pow(M,6)))+(((-1400832)*((pow(M,5))*(r)))+(((8473600)*((pow(M,4))*(pow(r,2))))+(((-46394880)*((pow(M,3))*(pow(r,3))))+(((325178280)*((pow(M,2))*(pow(r,4))))+(((3620991052)*((M)*(pow(r,5))))+((3968552175)*(pow(r,6))))))))))))+(((pow(a,20))*((pow(r,6))*(((21315584)*(pow(M,6)))+(((-133718016)*((pow(M,5))*(r)))+(((509475840)*((pow(M,4))*(pow(r,2))))+(((-1751395840)*((pow(M,3))*(pow(r,3))))+(((7958682120)*((pow(M,2))*(pow(r,4))))+(((53935859500)*((M)*(pow(r,5))))+((38485430289)*(pow(r,6)))))))))))+(((17)*((pow(a,14))*((pow(r,11))*(((-131072)*(pow(M,7)))+(((1048576)*((pow(M,6))*(r)))+(((-5296128)*((pow(M,5))*(pow(r,2))))+(((22528000)*((pow(M,4))*(pow(r,3))))+(((-96691840)*((pow(M,3))*(pow(r,4))))+(((563211264)*((pow(M,2))*(pow(r,5))))+(((5283421654)*((M)*(pow(r,6))))+((5033330771)*(pow(r,7)))))))))))))+(((pow(a,18))*((pow(r,7))*(((-8519680)*(pow(M,7)))+(((55443456)*((pow(M,6))*(r)))+(((-219156480)*((pow(M,5))*(pow(r,2))))+(((724889600)*((pow(M,4))*(pow(r,3))))+(((-2447760000)*((pow(M,3))*(pow(r,4))))+(((11474144640)*((pow(M,2))*(pow(r,5))))+(((84142593710)*((M)*(pow(r,6))))+((64841932785)*(pow(r,7))))))))))))+((pow(a,16))*((pow(r,8))*(((1572864)*(pow(M,8)))+(((-10747904)*((pow(M,7))*(r)))+(((49446912)*((pow(M,6))*(pow(r,2))))+(((-187318272)*((pow(M,5))*(pow(r,3))))+(((652065280)*((pow(M,4))*(pow(r,4))))+(((-2386530048)*((pow(M,3))*(pow(r,5))))+(((12177929568)*((pow(M,2))*(pow(r,6))))+(((99541831984)*((M)*(pow(r,7))))+((84427450989)*(pow(r,8)))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((765765)*((r)*((pow((pow(a,2))+(pow(r,2)),14))*((((19)*(pow(r,7)))+(((3)*((pow(a,6))*(((2)*(M))+(r))))+(((pow(a,2))*((pow(r,4))*(((70)*(M))+((41)*(r)))))+((pow(a,4))*((r)*(((64)*(pow(M,2)))+(((76)*((M)*(r)))+((25)*(pow(r,2))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_597(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[597] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.0004882812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.870828693386970692791874366158274650878009903889363473151872733660017578153469513988404947597189786"))*((pow(a,-18))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((458752)*(pow(a,32)))+(((14549535)*(pow(r,32)))+(((255255)*((pow(a,2))*((pow(r,29))*(((134)*(M))+((845)*(r))))))+(((7)*((pow(a,30))*((r)*(((2751502)*(M))+((2424327)*(r))))))+(((51051)*((pow(a,4))*((pow(r,26))*(((168)*(pow(M,2)))+(((9212)*((M)*(r)))+((29217)*(pow(r,2))))))))+(((7)*((pow(a,28))*((pow(r,2))*(((3920040)*(pow(M,2)))+(((42441068)*((M)*(r)))+((29480595)*(pow(r,2))))))))+(((7293)*((pow(a,6))*((pow(r,23))*(((-576)*(pow(M,3)))+(((14976)*((pow(M,2))*(r)))+(((411070)*((M)*(pow(r,2))))+((875163)*(pow(r,3)))))))))+(((7)*((pow(a,26))*((pow(r,3))*(((-4443840)*(pow(M,3)))+(((40374720)*((pow(M,2))*(r)))+(((298014322)*((M)*(pow(r,2))))+((194318675)*(pow(r,3)))))))))+(((2431)*((pow(a,8))*((pow(r,20))*(((1280)*(pow(M,4)))+(((-19840)*((pow(M,3))*(r)))+(((263280)*((pow(M,2))*(pow(r,2))))+(((4830104)*((M)*(pow(r,3))))+((7774925)*(pow(r,4))))))))))+(((pow(a,24))*((pow(r,4))*(((35930880)*(pow(M,4)))+(((-239207040)*((pow(M,3))*(r)))+(((1351691280)*((pow(M,2))*(pow(r,2))))+(((8889172456)*((M)*(pow(r,3))))+((5792658945)*(pow(r,4)))))))))+(((221)*((pow(a,10))*((pow(r,17))*(((-12288)*(pow(M,5)))+(((143360)*((pow(M,4))*(r)))+(((-1139520)*((pow(M,3))*(pow(r,2))))+(((10332480)*((pow(M,2))*(pow(r,3))))+(((142803506)*((M)*(pow(r,4))))+((185664555)*(pow(r,5)))))))))))+(((pow(a,22))*((pow(r,5))*(((-32944128)*(pow(M,5)))+(((205086720)*((pow(M,4))*(r)))+(((-835414080)*((pow(M,3))*(pow(r,2))))+(((3968327040)*((pow(M,2))*(pow(r,3))))+(((25775228834)*((M)*(pow(r,4))))+((17368821597)*(pow(r,5))))))))))+(((17)*((pow(a,12))*((pow(r,14))*(((147456)*(pow(M,6)))+(((-1400832)*((pow(M,5))*(r)))+(((8473600)*((pow(M,4))*(pow(r,2))))+(((-46394880)*((pow(M,3))*(pow(r,3))))+(((325178280)*((pow(M,2))*(pow(r,4))))+(((3620991052)*((M)*(pow(r,5))))+((3968552175)*(pow(r,6))))))))))))+(((pow(a,20))*((pow(r,6))*(((21315584)*(pow(M,6)))+(((-133718016)*((pow(M,5))*(r)))+(((509475840)*((pow(M,4))*(pow(r,2))))+(((-1751395840)*((pow(M,3))*(pow(r,3))))+(((7958682120)*((pow(M,2))*(pow(r,4))))+(((53935859500)*((M)*(pow(r,5))))+((38485430289)*(pow(r,6)))))))))))+(((17)*((pow(a,14))*((pow(r,11))*(((-131072)*(pow(M,7)))+(((1048576)*((pow(M,6))*(r)))+(((-5296128)*((pow(M,5))*(pow(r,2))))+(((22528000)*((pow(M,4))*(pow(r,3))))+(((-96691840)*((pow(M,3))*(pow(r,4))))+(((563211264)*((pow(M,2))*(pow(r,5))))+(((5283421654)*((M)*(pow(r,6))))+((5033330771)*(pow(r,7)))))))))))))+(((pow(a,18))*((pow(r,7))*(((-8519680)*(pow(M,7)))+(((55443456)*((pow(M,6))*(r)))+(((-219156480)*((pow(M,5))*(pow(r,2))))+(((724889600)*((pow(M,4))*(pow(r,3))))+(((-2447760000)*((pow(M,3))*(pow(r,4))))+(((11474144640)*((pow(M,2))*(pow(r,5))))+(((84142593710)*((M)*(pow(r,6))))+((64841932785)*(pow(r,7))))))))))))+((pow(a,16))*((pow(r,8))*(((1572864)*(pow(M,8)))+(((-10747904)*((pow(M,7))*(r)))+(((49446912)*((pow(M,6))*(pow(r,2))))+(((-187318272)*((pow(M,5))*(pow(r,3))))+(((652065280)*((pow(M,4))*(pow(r,4))))+(((-2386530048)*((pow(M,3))*(pow(r,5))))+(((12177929568)*((pow(M,2))*(pow(r,6))))+(((99541831984)*((M)*(pow(r,7))))+((84427450989)*(pow(r,8)))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((765765)*((r)*((pow((pow(a,2))+(pow(r,2)),14))*((((19)*(pow(r,7)))+(((3)*((pow(a,6))*(((2)*(M))+(r))))+(((pow(a,2))*((pow(r,4))*(((70)*(M))+((41)*(r)))))+((pow(a,4))*((r)*(((64)*(pow(M,2)))+(((76)*((M)*(r)))+((25)*(pow(r,2))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_598(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[598] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00006510416666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666667"))*((HighPrecisionScalar("1.558387444947959201643164926767557410400733386099231964716677842119761253585309213732992294821809591"))*((pow(a,-15))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((-1)*((pow(a,2))*((r)*(((3)*(M))+((17)*(r))))))+((pow(r,2))*(((2)*(pow(M,2)))+(((71)*((M)*(r)))+((-36)*(pow(r,2))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((385035)*(pow(a,24)))+(((675675)*(pow(r,24)))+(((360360)*((pow(a,2))*((pow(r,21))*((M)+((22)*(r))))))+(((280)*((pow(a,22))*((r)*(((3473)*(M))+((18238)*(r))))))+(((30030)*((pow(a,4))*((pow(r,18))*(((-8)*(pow(M,2)))+(((128)*((M)*(r)))+((1417)*(pow(r,2))))))))+(((14)*((pow(a,20))*((pow(r,2))*(((-94216)*(pow(M,2)))+(((600384)*((M)*(r)))+((2173641)*(pow(r,2))))))))+(((3432)*((pow(a,6))*((pow(r,15))*(((64)*(pow(M,3)))+(((-656)*((pow(M,2))*(r)))+(((5403)*((M)*(pow(r,2))))+((40242)*(pow(r,3)))))))))+(((8)*((pow(a,18))*((pow(r,3))*(((200128)*(pow(M,3)))+(((-1018832)*((pow(M,2))*(r)))+(((4136169)*((M)*(pow(r,2))))+((13544046)*(pow(r,3)))))))))+(((429)*((pow(a,8))*((pow(r,12))*(((-512)*(pow(M,4)))+(((4096)*((pow(M,3))*(r)))+(((-21824)*((pow(M,2))*(pow(r,2))))+(((124288)*((M)*(pow(r,3))))+((703417)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((-1366528)*(pow(M,4)))+(((6873088)*((pow(M,3))*(r)))+(((-22171712)*((pow(M,2))*(pow(r,2))))+(((78130816)*((M)*(pow(r,3))))+((257695349)*(pow(r,4)))))))))+(((208)*((pow(a,10))*((pow(r,9))*(((1024)*(pow(M,5)))+(((-6784)*((pow(M,4))*(r)))+(((28960)*((pow(M,3))*(pow(r,2))))+(((-108728)*((pow(M,2))*(pow(r,3))))+(((487037)*((M)*(pow(r,4))))+((2246938)*(pow(r,5)))))))))))+(((16)*((pow(a,14))*((pow(r,5))*(((44032)*(pow(M,5)))+(((-231552)*((pow(M,4))*(r)))+(((756960)*((pow(M,3))*(pow(r,2))))+(((-2178200)*((pow(M,2))*(pow(r,3))))+(((7654575)*((M)*(pow(r,4))))+((27023310)*(pow(r,5)))))))))))+((4)*((pow(a,12))*((pow(r,6))*(((-40960)*(pow(M,6)))+(((229376)*((pow(M,5))*(r)))+(((-882432)*((pow(M,4))*(pow(r,2))))+(((2831360)*((pow(M,3))*(pow(r,3))))+(((-8693800)*((pow(M,2))*(pow(r,4))))+(((33260640)*((M)*(pow(r,5))))+((131432025)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),12))*(((pow(a,4))+(((15)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((7)*(M))+((4)*(r))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_599(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[599] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00007905505952380952380952380952380952380952380952380952380952380952380952380952380952380952380952380952"))*((pow(a,-17))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,8))+(((pow(a,6))*((((25)*(M))+((-1)*(r)))*(r)))+(((15)*((pow(r,6))*(((2)*(pow(M,2)))+(((71)*((M)*(r)))+((-36)*(pow(r,2)))))))+(((-1)*((pow(a,4))*((pow(r,2))*(((82)*(pow(M,2)))+(((453)*((M)*(r)))+((293)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((56)*(pow(M,3)))+(((2020)*((pow(M,2))*(r)))+(((83)*((M)*(pow(r,2))))+((-831)*(pow(r,3))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((385035)*(pow(a,24)))+(((675675)*(pow(r,24)))+(((360360)*((pow(a,2))*((pow(r,21))*((M)+((22)*(r))))))+(((280)*((pow(a,22))*((r)*(((3473)*(M))+((18238)*(r))))))+(((30030)*((pow(a,4))*((pow(r,18))*(((-8)*(pow(M,2)))+(((128)*((M)*(r)))+((1417)*(pow(r,2))))))))+(((14)*((pow(a,20))*((pow(r,2))*(((-94216)*(pow(M,2)))+(((600384)*((M)*(r)))+((2173641)*(pow(r,2))))))))+(((3432)*((pow(a,6))*((pow(r,15))*(((64)*(pow(M,3)))+(((-656)*((pow(M,2))*(r)))+(((5403)*((M)*(pow(r,2))))+((40242)*(pow(r,3)))))))))+(((8)*((pow(a,18))*((pow(r,3))*(((200128)*(pow(M,3)))+(((-1018832)*((pow(M,2))*(r)))+(((4136169)*((M)*(pow(r,2))))+((13544046)*(pow(r,3)))))))))+(((429)*((pow(a,8))*((pow(r,12))*(((-512)*(pow(M,4)))+(((4096)*((pow(M,3))*(r)))+(((-21824)*((pow(M,2))*(pow(r,2))))+(((124288)*((M)*(pow(r,3))))+((703417)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((-1366528)*(pow(M,4)))+(((6873088)*((pow(M,3))*(r)))+(((-22171712)*((pow(M,2))*(pow(r,2))))+(((78130816)*((M)*(pow(r,3))))+((257695349)*(pow(r,4)))))))))+(((208)*((pow(a,10))*((pow(r,9))*(((1024)*(pow(M,5)))+(((-6784)*((pow(M,4))*(r)))+(((28960)*((pow(M,3))*(pow(r,2))))+(((-108728)*((pow(M,2))*(pow(r,3))))+(((487037)*((M)*(pow(r,4))))+((2246938)*(pow(r,5)))))))))))+(((16)*((pow(a,14))*((pow(r,5))*(((44032)*(pow(M,5)))+(((-231552)*((pow(M,4))*(r)))+(((756960)*((pow(M,3))*(pow(r,2))))+(((-2178200)*((pow(M,2))*(pow(r,3))))+(((7654575)*((M)*(pow(r,4))))+((27023310)*(pow(r,5)))))))))))+((4)*((pow(a,12))*((pow(r,6))*(((-40960)*(pow(M,6)))+(((229376)*((pow(M,5))*(r)))+(((-882432)*((pow(M,4))*(pow(r,2))))+(((2831360)*((pow(M,3))*(pow(r,3))))+(((-8693800)*((pow(M,2))*(pow(r,4))))+(((33260640)*((M)*(pow(r,5))))+((131432025)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),12))*(((pow(a,4))+(((15)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((7)*(M))+((4)*(r))))))))*(expr[3])))))))))))))).cast<double>());
}
