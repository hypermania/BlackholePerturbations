
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_380(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[380] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.06250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-12))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((2560)*(pow(a,20)))+(((45045)*(pow(r,20)))+(((1155)*((pow(a,2))*((pow(r,17))*(((86)*(M))+((347)*(r))))))+(((25)*((pow(a,18))*((r)*(((2650)*(M))+((2349)*(r))))))+(((3696)*((pow(a,4))*((pow(r,14))*(((6)*(pow(M,2)))+(((209)*((M)*(r)))+((429)*(pow(r,2))))))))+(((5)*((pow(a,16))*((pow(r,2))*(((9744)*(pow(M,2)))+(((115744)*((M)*(r)))+((85101)*(pow(r,2))))))))+(((264)*((pow(a,6))*((pow(r,11))*(((-36)*(pow(M,3)))+(((558)*((pow(M,2))*(r)))+(((9920)*((M)*(pow(r,2))))+((13875)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((-1778)*(pow(M,3)))+(((15603)*((pow(M,2))*(r)))+(((135919)*((M)*(pow(r,2))))+((99599)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((256)*(pow(M,4)))+(((-2240)*((pow(M,3))*(r)))+(((18744)*((pow(M,2))*(pow(r,2))))+(((229600)*((M)*(pow(r,3))))+((247795)*(pow(r,4))))))))))+(((8)*((pow(a,12))*((pow(r,4))*(((1664)*(pow(M,4)))+(((-10896)*((pow(M,3))*(r)))+(((67176)*((pow(M,2))*(pow(r,2))))+(((576470)*((M)*(pow(r,3))))+((454635)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,5))*(((-1536)*(pow(M,5)))+(((9472)*((pow(M,4))*(r)))+(((-49248)*((pow(M,3))*(pow(r,2))))+(((311856)*((pow(M,2))*(pow(r,3))))+(((3027490)*((M)*(pow(r,4))))+((2715585)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((r)*((pow((pow(a,2))+(pow(r,2)),8))*((((13)*(pow(r,7)))+(((3)*((pow(a,6))*(((2)*(M))+(r))))+(((pow(a,2))*((pow(r,4))*(((46)*(M))+((29)*(r)))))+((pow(a,4))*((r)*(((40)*(pow(M,2)))+(((52)*((M)*(r)))+((19)*(pow(r,2))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_381(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[381] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.01562500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.208941049653977767709106691471386719226321555561140362467667806564523743572026443872869899567603956"))*((pow(a,-14))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((8192)*(pow(a,24)))+(((765765)*(pow(r,24)))+(((15015)*((pow(a,2))*((pow(r,21))*(((178)*(M))+((523)*(r))))))+(((3)*((pow(a,22))*((r)*(((150194)*(M))+((107865)*(r))))))+(((3003)*((pow(a,4))*((pow(r,18))*(((824)*(pow(M,2)))+(((8076)*((M)*(r)))+((12141)*(pow(r,2))))))))+(((pow(a,20))*((pow(r,2))*(((1911848)*(pow(M,2)))+(((6417668)*((M)*(r)))+((3496835)*(pow(r,2)))))))+(((429)*((pow(a,6))*((pow(r,15))*(((640)*(pow(M,3)))+(((45184)*((pow(M,2))*(r)))+(((228918)*((M)*(pow(r,2))))+((235715)*(pow(r,3)))))))))+(((pow(a,18))*((pow(r,3))*(((508032)*(pow(M,3)))+(((16056832)*((pow(M,2))*(r)))+(((37863846)*((M)*(pow(r,2))))+((19036369)*(pow(r,3))))))))+(((286)*((pow(a,8))*((pow(r,12))*(((-256)*(pow(M,4)))+(((6272)*((pow(M,3))*(r)))+(((231792)*((pow(M,2))*(pow(r,2))))+(((815816)*((M)*(pow(r,3))))+((650639)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((-170496)*(pow(M,4)))+(((2707200)*((pow(M,3))*(r)))+(((58610336)*((pow(M,2))*(pow(r,2))))+(((125859312)*((M)*(pow(r,3))))+((63297225)*(pow(r,4)))))))))+(((26)*((pow(a,10))*((pow(r,9))*(((1024)*(pow(M,5)))+(((-13824)*((pow(M,4))*(r)))+(((189120)*((pow(M,3))*(pow(r,2))))+(((4970368)*((pow(M,2))*(pow(r,3))))+(((13824438)*((M)*(pow(r,4))))+((9171405)*(pow(r,5)))))))))))+(((2)*((pow(a,14))*((pow(r,5))*(((25600)*(pow(M,5)))+(((-276992)*((pow(M,4))*(r)))+(((3021760)*((pow(M,3))*(pow(r,2))))+(((60798016)*((pow(M,2))*(pow(r,3))))+(((132652694)*((M)*(pow(r,4))))+((70196015)*(pow(r,5)))))))))))+((2)*((pow(a,12))*((pow(r,6))*(((-4096)*(pow(M,6)))+(((38912)*((pow(M,5))*(r)))+(((-334848)*((pow(M,4))*(pow(r,2))))+(((3621120)*((pow(M,3))*(pow(r,3))))+(((78488600)*((pow(M,2))*(pow(r,4))))+(((187040556)*((M)*(pow(r,5))))+((108536455)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),8))*((((17)*(pow(r,11)))+(((pow(a,10))*(((2)*(M))+(r)))+(((pow(a,2))*((pow(r,8))*(((82)*(M))+((61)*(r)))))+(((pow(a,8))*((r)*(((32)*(pow(M,2)))+(((40)*((M)*(r)))+((13)*(pow(r,2)))))))+(((2)*((pow(a,4))*((pow(r,5))*(((64)*(pow(M,2)))+(((100)*((M)*(r)))+((41)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((32)*(pow(M,3)))+(((80)*((pow(M,2))*(r)))+(((78)*((M)*(pow(r,2))))+((25)*(pow(r,3))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_382(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[382] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.1718750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-10))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*(((-1)*((a)*((r)*((((965)*(pow(a,16)))+(((-210)*((pow(a,2))*((((2)*(M))+((-13)*(r)))*(pow(r,13)))))+(((315)*(pow(r,16)))+(((10)*((pow(a,14))*((r)*(((-298)*(M))+((623)*(r))))))+(((42)*((pow(a,4))*((pow(r,10))*(((16)*(pow(M,2)))+(((-76)*((M)*(r)))+((249)*(pow(r,2))))))))+(((6)*((pow(a,12))*((pow(r,2))*(((912)*(pow(M,2)))+(((-2068)*((M)*(r)))+((2993)*(pow(r,2))))))))+(((6)*((pow(a,6))*((pow(r,7))*(((-192)*(pow(M,3)))+(((736)*((pow(M,2))*(r)))+(((-1754)*((M)*(pow(r,2))))+((3867)*(pow(r,3)))))))))+(((2)*((pow(a,10))*((pow(r,3))*(((-2624)*(pow(M,3)))+(((7008)*((pow(M,2))*(r)))+(((-10638)*((M)*(pow(r,2))))+((15151)*(pow(r,3)))))))))+((16)*((pow(a,8))*((pow(r,4))*(((128)*(pow(M,4)))+(((-400)*((pow(M,3))*(r)))+(((768)*((pow(M,2))*(pow(r,2))))+(((-1225)*((M)*(pow(r,3))))+((2048)*(pow(r,4))))))))))))))))))*((expr[0])*(expr[1]))))))+((315)*((pow((pow(a,2))+(pow(r,2)),10))*((expr[2])*(expr[3])))))))))))).cast<double>());
}

void compute_coeffs_scalar_383(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[383] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.007812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.581138830084189665999446772216359266859777569662608413428752426396297219319619110672124054189650148"))*((pow(a,-12))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*(((-1)*((a)*((r)*((((27255)*(pow(a,20)))+(((45045)*(pow(r,20)))+(((23100)*((pow(a,2))*((pow(r,17))*((M)+((19)*(r))))))+(((20)*((pow(a,18))*((r)*(((2779)*(M))+((15017)*(r))))))+(((231)*((pow(a,4))*((pow(r,14))*(((-64)*(pow(M,2)))+(((864)*((M)*(r)))+((8309)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((-60928)*(pow(M,2)))+(((383712)*((M)*(r)))+((1461353)*(pow(r,2)))))))+(((528)*((pow(a,6))*((pow(r,11))*(((24)*(pow(M,3)))+(((-204)*((pow(M,2))*(r)))+(((1439)*((M)*(pow(r,2))))+((9391)*(pow(r,3)))))))))+(((16)*((pow(a,14))*((pow(r,3))*(((3480)*(pow(M,3)))+(((-17628)*((pow(M,2))*(r)))+(((73219)*((M)*(pow(r,2))))+((259759)*(pow(r,3)))))))))+(((22)*((pow(a,8))*((pow(r,8))*(((-512)*(pow(M,4)))+(((3328)*((pow(M,3))*(r)))+(((-15168)*((pow(M,2))*(pow(r,2))))+(((75760)*((M)*(pow(r,3))))+((380635)*(pow(r,4))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((-15872)*(pow(M,4)))+(((79616)*((pow(M,3))*(r)))+(((-271968)*((pow(M,2))*(pow(r,2))))+(((1033840)*((M)*(pow(r,3))))+((3839075)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((-5376)*((pow(M,4))*(r)))+(((20512)*((pow(M,3))*(pow(r,2))))+(((-70448)*((pow(M,2))*(pow(r,3))))+(((288465)*((M)*(pow(r,4))))+((1206415)*(pow(r,5)))))))))))))))))))))*((expr[0])*(expr[1]))))))+((3465)*((pow((pow(a,2))+(pow(r,2)),10))*(((pow(a,4))+(((13)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((12)*(M))+((7)*(r))))))))*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_384(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[384] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.001953125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.4569367667316877130800022987414466712015980069563637348754857854483249993357916564668095534571080084"))*((pow(a,-14))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*(((-1)*((a)*((r)*((((528395)*(pow(a,24)))+(((3828825)*(pow(r,24)))+(((150150)*((pow(a,2))*((pow(r,21))*(((50)*(M))+((281)*(r))))))+(((70)*((pow(a,22))*((r)*(((77794)*(M))+((129479)*(r))))))+(((120120)*((pow(a,4))*((pow(r,18))*(((12)*(pow(M,2)))+(((613)*((M)*(r)))+((1763)*(pow(r,2))))))))+(((56)*((pow(a,20))*((pow(r,2))*(((52956)*(pow(M,2)))+(((1025381)*((M)*(r)))+((1170824)*(pow(r,2))))))))+(((4290)*((pow(a,6))*((pow(r,15))*(((-128)*(pow(M,3)))+(((2880)*((pow(M,2))*(r)))+(((75630)*((M)*(pow(r,2))))+((149081)*(pow(r,3)))))))))+(((2)*((pow(a,18))*((pow(r,3))*(((-849024)*(pow(M,3)))+(((10588608)*((pow(M,2))*(r)))+(((135233694)*((M)*(pow(r,2))))+((136600967)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,12))*(((2048)*(pow(M,4)))+(((-27136)*((pow(M,3))*(r)))+(((325632)*((pow(M,2))*(pow(r,2))))+(((5913056)*((M)*(pow(r,3))))+((9040223)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((937984)*(pow(M,4)))+(((-8312320)*((pow(M,3))*(r)))+(((66612480)*((pow(M,2))*(pow(r,2))))+(((750509600)*((M)*(pow(r,3))))+((742326475)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,9))*(((-3072)*(pow(M,5)))+(((30208)*((pow(M,4))*(r)))+(((-222400)*((pow(M,3))*(pow(r,2))))+(((1939488)*((pow(M,2))*(pow(r,3))))+(((27747838)*((M)*(pow(r,4))))+((35376107)*(pow(r,5)))))))))))+(((4)*((pow(a,14))*((pow(r,5))*(((-89088)*(pow(M,5)))+(((715264)*((pow(M,4))*(r)))+(((-4245440)*((pow(M,3))*(pow(r,2))))+(((30144480)*((pow(M,2))*(pow(r,3))))+(((340047350)*((M)*(pow(r,4))))+((349698065)*(pow(r,5)))))))))))+((8)*((pow(a,12))*((pow(r,6))*(((8192)*(pow(M,6)))+(((-64512)*((pow(M,5))*(r)))+(((400128)*((pow(M,4))*(pow(r,2))))+(((-2325120)*((pow(M,3))*(pow(r,3))))+(((17172360)*((pow(M,2))*(pow(r,4))))+(((210477330)*((M)*(pow(r,5))))+((235698955)*(pow(r,6))))))))))))))))))))))))*((expr[0])*(expr[1]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),10))*(((pow(a,8))+(((85)*(pow(r,8)))+(((8)*((pow(a,6))*((r)*(((7)*(M))+((4)*(r))))))+(((40)*((pow(a,2))*((pow(r,5))*(((7)*(M))+((5)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((112)*(pow(M,2)))+(((168)*((M)*(r)))+((73)*(pow(r,2))))))))))))*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

}
