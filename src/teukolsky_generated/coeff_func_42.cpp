
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_210(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[210] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0009765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.08362420100070907707083804724612319310483277122473564973537084974932814650837318816667645408824322535"))*((pow(a,-15))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((-1)*((pow(a,2))*((r)*(((3)*(M))+(r)))))+((pow(r,2))*(((2)*(pow(M,2)))+(((19)*((M)*(r)))+((-10)*(pow(r,2))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((643083)*(pow(a,24)))+(((14549535)*(pow(r,24)))+(((1021020)*((pow(a,2))*((pow(r,21))*(((44)*(M))+((149)*(r))))))+(((28)*((pow(a,22))*((r)*(((419776)*(M))+((485495)*(r))))))+(((6006)*((pow(a,4))*((pow(r,18))*(((6008)*(pow(M,2)))+(((68792)*((M)*(r)))+((120247)*(pow(r,2))))))))+(((14)*((pow(a,20))*((pow(r,2))*(((2123672)*(pow(M,2)))+(((10519192)*((M)*(r)))+((8180131)*(pow(r,2))))))))+(((1716)*((pow(a,6))*((pow(r,15))*(((1920)*(pow(M,3)))+(((165344)*((pow(M,2))*(r)))+(((990288)*((M)*(pow(r,2))))+((1197705)*(pow(r,3)))))))))+(((4)*((pow(a,18))*((pow(r,3))*(((1353600)*(pow(M,3)))+(((61493216)*((pow(M,2))*(r)))+(((200140308)*((M)*(pow(r,2))))+((134927775)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,12))*(((-5120)*(pow(M,4)))+(((148480)*((pow(M,3))*(r)))+(((6815808)*((pow(M,2))*(pow(r,2))))+(((28755904)*((M)*(pow(r,3))))+((27258115)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((-1448960)*(pow(M,4)))+(((29588480)*((pow(M,3))*(r)))+(((887157184)*((pow(M,2))*(pow(r,2))))+(((2512539968)*((M)*(pow(r,3))))+((1628487625)*(pow(r,4)))))))))+(((104)*((pow(a,10))*((pow(r,9))*(((2048)*(pow(M,5)))+(((-33280)*((pow(M,4))*(r)))+(((550720)*((pow(M,3))*(pow(r,2))))+(((18366032)*((pow(M,2))*(pow(r,3))))+(((62259452)*((M)*(pow(r,4))))+((49787971)*(pow(r,5)))))))))))+(((8)*((pow(a,14))*((pow(r,5))*(((45056)*(pow(M,5)))+(((-611840)*((pow(M,4))*(r)))+(((8453440)*((pow(M,3))*(pow(r,2))))+(((227865296)*((pow(M,2))*(pow(r,3))))+(((634308104)*((M)*(pow(r,4))))+((420535085)*(pow(r,5)))))))))))+((4)*((pow(a,12))*((pow(r,6))*(((-12288)*(pow(M,6)))+(((143360)*((pow(M,5))*(r)))+(((-1543680)*((pow(M,4))*(pow(r,2))))+(((20697600)*((pow(M,3))*(pow(r,3))))+(((583764920)*((pow(M,2))*(pow(r,4))))+(((1730238552)*((M)*(pow(r,5))))+((1231153095)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),8))*(((pow(a,12))+(((323)*(pow(r,12)))+(((12)*((pow(a,10))*((r)*(((7)*(M))+((4)*(r))))))+(((204)*((pow(a,2))*((pow(r,9))*(((7)*(M))+((6)*(r))))))+(((3)*((pow(a,8))*((pow(r,2))*(((224)*(pow(M,2)))+(((336)*((M)*(r)))+((131)*(pow(r,2))))))))+(((3)*((pow(a,4))*((pow(r,6))*(((672)*(pow(M,2)))+(((1232)*((M)*(r)))+((593)*(pow(r,2))))))))+((8)*((pow(a,6))*((pow(r,3))*(((112)*(pow(M,3)))+(((336)*((pow(M,2))*(r)))+(((399)*((M)*(pow(r,2))))+((153)*(pow(r,3)))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_211(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[211] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0009765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.08362420100070907707083804724612319310483277122473564973537084974932814650837318816667645408824322535"))*((pow(a,-13))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((a)*((((643083)*(pow(a,24)))+(((14549535)*(pow(r,24)))+(((1021020)*((pow(a,2))*((pow(r,21))*(((44)*(M))+((149)*(r))))))+(((28)*((pow(a,22))*((r)*(((419776)*(M))+((485495)*(r))))))+(((6006)*((pow(a,4))*((pow(r,18))*(((6008)*(pow(M,2)))+(((68792)*((M)*(r)))+((120247)*(pow(r,2))))))))+(((14)*((pow(a,20))*((pow(r,2))*(((2123672)*(pow(M,2)))+(((10519192)*((M)*(r)))+((8180131)*(pow(r,2))))))))+(((1716)*((pow(a,6))*((pow(r,15))*(((1920)*(pow(M,3)))+(((165344)*((pow(M,2))*(r)))+(((990288)*((M)*(pow(r,2))))+((1197705)*(pow(r,3)))))))))+(((4)*((pow(a,18))*((pow(r,3))*(((1353600)*(pow(M,3)))+(((61493216)*((pow(M,2))*(r)))+(((200140308)*((M)*(pow(r,2))))+((134927775)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,12))*(((-5120)*(pow(M,4)))+(((148480)*((pow(M,3))*(r)))+(((6815808)*((pow(M,2))*(pow(r,2))))+(((28755904)*((M)*(pow(r,3))))+((27258115)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((-1448960)*(pow(M,4)))+(((29588480)*((pow(M,3))*(r)))+(((887157184)*((pow(M,2))*(pow(r,2))))+(((2512539968)*((M)*(pow(r,3))))+((1628487625)*(pow(r,4)))))))))+(((104)*((pow(a,10))*((pow(r,9))*(((2048)*(pow(M,5)))+(((-33280)*((pow(M,4))*(r)))+(((550720)*((pow(M,3))*(pow(r,2))))+(((18366032)*((pow(M,2))*(pow(r,3))))+(((62259452)*((M)*(pow(r,4))))+((49787971)*(pow(r,5)))))))))))+(((8)*((pow(a,14))*((pow(r,5))*(((45056)*(pow(M,5)))+(((-611840)*((pow(M,4))*(r)))+(((8453440)*((pow(M,3))*(pow(r,2))))+(((227865296)*((pow(M,2))*(pow(r,3))))+(((634308104)*((M)*(pow(r,4))))+((420535085)*(pow(r,5)))))))))))+((4)*((pow(a,12))*((pow(r,6))*(((-12288)*(pow(M,6)))+(((143360)*((pow(M,5))*(r)))+(((-1543680)*((pow(M,4))*(pow(r,2))))+(((20697600)*((pow(M,3))*(pow(r,3))))+(((583764920)*((pow(M,2))*(pow(r,4))))+(((1730238552)*((M)*(pow(r,5))))+((1231153095)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2])))))+((-45045)*((pow((pow(a,2))+(pow(r,2)),8))*(((pow(a,12))+(((323)*(pow(r,12)))+(((12)*((pow(a,10))*((r)*(((7)*(M))+((4)*(r))))))+(((204)*((pow(a,2))*((pow(r,9))*(((7)*(M))+((6)*(r))))))+(((3)*((pow(a,8))*((pow(r,2))*(((224)*(pow(M,2)))+(((336)*((M)*(r)))+((131)*(pow(r,2))))))))+(((3)*((pow(a,4))*((pow(r,6))*(((672)*(pow(M,2)))+(((1232)*((M)*(r)))+((593)*(pow(r,2))))))))+((8)*((pow(a,6))*((pow(r,3))*(((112)*(pow(M,3)))+(((336)*((pow(M,2))*(r)))+(((399)*((M)*(pow(r,2))))+((153)*(pow(r,3)))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_212(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[212] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0004882812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.08362420100070907707083804724612319310483277122473564973537084974932814650837318816667645408824322535"))*((pow(a,-15))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((643083)*(pow(a,24)))+(((14549535)*(pow(r,24)))+(((1021020)*((pow(a,2))*((pow(r,21))*(((44)*(M))+((149)*(r))))))+(((28)*((pow(a,22))*((r)*(((419776)*(M))+((485495)*(r))))))+(((6006)*((pow(a,4))*((pow(r,18))*(((6008)*(pow(M,2)))+(((68792)*((M)*(r)))+((120247)*(pow(r,2))))))))+(((14)*((pow(a,20))*((pow(r,2))*(((2123672)*(pow(M,2)))+(((10519192)*((M)*(r)))+((8180131)*(pow(r,2))))))))+(((1716)*((pow(a,6))*((pow(r,15))*(((1920)*(pow(M,3)))+(((165344)*((pow(M,2))*(r)))+(((990288)*((M)*(pow(r,2))))+((1197705)*(pow(r,3)))))))))+(((4)*((pow(a,18))*((pow(r,3))*(((1353600)*(pow(M,3)))+(((61493216)*((pow(M,2))*(r)))+(((200140308)*((M)*(pow(r,2))))+((134927775)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,12))*(((-5120)*(pow(M,4)))+(((148480)*((pow(M,3))*(r)))+(((6815808)*((pow(M,2))*(pow(r,2))))+(((28755904)*((M)*(pow(r,3))))+((27258115)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((-1448960)*(pow(M,4)))+(((29588480)*((pow(M,3))*(r)))+(((887157184)*((pow(M,2))*(pow(r,2))))+(((2512539968)*((M)*(pow(r,3))))+((1628487625)*(pow(r,4)))))))))+(((104)*((pow(a,10))*((pow(r,9))*(((2048)*(pow(M,5)))+(((-33280)*((pow(M,4))*(r)))+(((550720)*((pow(M,3))*(pow(r,2))))+(((18366032)*((pow(M,2))*(pow(r,3))))+(((62259452)*((M)*(pow(r,4))))+((49787971)*(pow(r,5)))))))))))+(((8)*((pow(a,14))*((pow(r,5))*(((45056)*(pow(M,5)))+(((-611840)*((pow(M,4))*(r)))+(((8453440)*((pow(M,3))*(pow(r,2))))+(((227865296)*((pow(M,2))*(pow(r,3))))+(((634308104)*((M)*(pow(r,4))))+((420535085)*(pow(r,5)))))))))))+((4)*((pow(a,12))*((pow(r,6))*(((-12288)*(pow(M,6)))+(((143360)*((pow(M,5))*(r)))+(((-1543680)*((pow(M,4))*(pow(r,2))))+(((20697600)*((pow(M,3))*(pow(r,3))))+(((583764920)*((pow(M,2))*(pow(r,4))))+(((1730238552)*((M)*(pow(r,5))))+((1231153095)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),8))*(((pow(a,12))+(((323)*(pow(r,12)))+(((12)*((pow(a,10))*((r)*(((7)*(M))+((4)*(r))))))+(((204)*((pow(a,2))*((pow(r,9))*(((7)*(M))+((6)*(r))))))+(((3)*((pow(a,8))*((pow(r,2))*(((224)*(pow(M,2)))+(((336)*((M)*(r)))+((131)*(pow(r,2))))))))+(((3)*((pow(a,4))*((pow(r,6))*(((672)*(pow(M,2)))+(((1232)*((M)*(r)))+((593)*(pow(r,2))))))))+((8)*((pow(a,6))*((pow(r,3))*(((112)*(pow(M,3)))+(((336)*((pow(M,2))*(r)))+(((399)*((M)*(pow(r,2))))+((153)*(pow(r,3)))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_213(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[213] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.007812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.08362420100070907707083804724612319310483277122473564973537084974932814650837318816667645408824322535"))*((pow(a,-14))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*(((-1)*((a)*((r)*((((643083)*(pow(a,24)))+(((14549535)*(pow(r,24)))+(((1021020)*((pow(a,2))*((pow(r,21))*(((44)*(M))+((149)*(r))))))+(((28)*((pow(a,22))*((r)*(((419776)*(M))+((485495)*(r))))))+(((6006)*((pow(a,4))*((pow(r,18))*(((6008)*(pow(M,2)))+(((68792)*((M)*(r)))+((120247)*(pow(r,2))))))))+(((14)*((pow(a,20))*((pow(r,2))*(((2123672)*(pow(M,2)))+(((10519192)*((M)*(r)))+((8180131)*(pow(r,2))))))))+(((1716)*((pow(a,6))*((pow(r,15))*(((1920)*(pow(M,3)))+(((165344)*((pow(M,2))*(r)))+(((990288)*((M)*(pow(r,2))))+((1197705)*(pow(r,3)))))))))+(((4)*((pow(a,18))*((pow(r,3))*(((1353600)*(pow(M,3)))+(((61493216)*((pow(M,2))*(r)))+(((200140308)*((M)*(pow(r,2))))+((134927775)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,12))*(((-5120)*(pow(M,4)))+(((148480)*((pow(M,3))*(r)))+(((6815808)*((pow(M,2))*(pow(r,2))))+(((28755904)*((M)*(pow(r,3))))+((27258115)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((-1448960)*(pow(M,4)))+(((29588480)*((pow(M,3))*(r)))+(((887157184)*((pow(M,2))*(pow(r,2))))+(((2512539968)*((M)*(pow(r,3))))+((1628487625)*(pow(r,4)))))))))+(((104)*((pow(a,10))*((pow(r,9))*(((2048)*(pow(M,5)))+(((-33280)*((pow(M,4))*(r)))+(((550720)*((pow(M,3))*(pow(r,2))))+(((18366032)*((pow(M,2))*(pow(r,3))))+(((62259452)*((M)*(pow(r,4))))+((49787971)*(pow(r,5)))))))))))+(((8)*((pow(a,14))*((pow(r,5))*(((45056)*(pow(M,5)))+(((-611840)*((pow(M,4))*(r)))+(((8453440)*((pow(M,3))*(pow(r,2))))+(((227865296)*((pow(M,2))*(pow(r,3))))+(((634308104)*((M)*(pow(r,4))))+((420535085)*(pow(r,5)))))))))))+((4)*((pow(a,12))*((pow(r,6))*(((-12288)*(pow(M,6)))+(((143360)*((pow(M,5))*(r)))+(((-1543680)*((pow(M,4))*(pow(r,2))))+(((20697600)*((pow(M,3))*(pow(r,3))))+(((583764920)*((pow(M,2))*(pow(r,4))))+(((1730238552)*((M)*(pow(r,5))))+((1231153095)*(pow(r,6))))))))))))))))))))))))*((expr[0])*(expr[1]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),8))*(((pow(a,12))+(((323)*(pow(r,12)))+(((12)*((pow(a,10))*((r)*(((7)*(M))+((4)*(r))))))+(((204)*((pow(a,2))*((pow(r,9))*(((7)*(M))+((6)*(r))))))+(((3)*((pow(a,8))*((pow(r,2))*(((224)*(pow(M,2)))+(((336)*((M)*(r)))+((131)*(pow(r,2))))))))+(((3)*((pow(a,4))*((pow(r,6))*(((672)*(pow(M,2)))+(((1232)*((M)*(r)))+((593)*(pow(r,2))))))))+((8)*((pow(a,6))*((pow(r,3))*(((112)*(pow(M,3)))+(((336)*((pow(M,2))*(r)))+(((399)*((M)*(pow(r,2))))+((153)*(pow(r,3)))))))))))))))*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_214(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[214] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.09375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-9))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,4)))+(((-3)*((pow(a,2))*((r)*(((2)*(M))+((3)*(r))))))+((2)*((pow(r,2))*(((2)*(pow(M,2)))+(((19)*((M)*(r)))+((-10)*(pow(r,2)))))))))*(((a)*((r)*(((105)*((pow(r,16))*(((-2)*(M))+(r))))+(((48)*((pow(a,16))*(((2)*(M))+(r))))+(((35)*((pow(a,2))*((pow(r,13))*(((-16)*(pow(M,2)))+(((-32)*((M)*(r)))+((23)*(pow(r,2))))))))+(((3)*((pow(a,14))*((r)*(((52)*(pow(M,2)))+(((308)*((M)*(r)))+((157)*(pow(r,2))))))))+(((-7)*((pow(a,4))*((pow(r,10))*(((24)*(pow(M,3)))+(((444)*((pow(M,2))*(r)))+(((298)*((M)*(pow(r,2))))+((-383)*(pow(r,3)))))))))+(((pow(a,12))*((pow(r,2))*(((-1000)*(pow(M,3)))+(((-564)*((pow(M,2))*(r)))+(((3030)*((M)*(pow(r,2))))+((1915)*(pow(r,3))))))))+(((pow(a,10))*((pow(r,3))*(((736)*(pow(M,4)))+(((-2528)*((pow(M,3))*(r)))+(((-4056)*((pow(M,2))*(pow(r,2))))+(((4520)*((M)*(pow(r,3))))+((4295)*(pow(r,4)))))))))+(((pow(a,6))*((pow(r,7))*(((96)*(pow(M,4)))+(((-864)*((pow(M,3))*(r)))+(((-6996)*((pow(M,2))*(pow(r,2))))+(((-804)*((M)*(pow(r,3))))+((5053)*(pow(r,4)))))))))+((pow(a,8))*((pow(r,4))*(((-256)*(pow(M,5)))+(((832)*((pow(M,4))*(r)))+(((-2224)*((pow(M,3))*(pow(r,2))))+(((-7784)*((pow(M,2))*(pow(r,3))))+(((2690)*((M)*(pow(r,4))))+((5875)*(pow(r,5))))))))))))))))))))+(((a)*((((48)*(pow(a,12)))+(((105)*(pow(r,12)))+(((35)*((pow(a,2))*((pow(r,9))*(((2)*(M))+((17)*(r))))))+(((3)*((pow(a,10))*((r)*(((58)*(M))+((125)*(r))))))+(((14)*((pow(a,4))*((pow(r,6))*(((-4)*(pow(M,2)))+(((24)*((M)*(r)))+((99)*(pow(r,2))))))))+(((pow(a,8))*((pow(r,2))*(((-152)*(pow(M,2)))+(((544)*((M)*(r)))+((1117)*(pow(r,2)))))))+((2)*((pow(a,6))*((pow(r,3))*(((32)*(pow(M,3)))+(((-104)*((pow(M,2))*(r)))+(((318)*((M)*(pow(r,2))))+((843)*(pow(r,3)))))))))))))))*((pow(expr[0],2))*((pow(expr[1],2))*(pow(expr[2],2))))))+((-210)*((r)*((pow((pow(a,2))+(pow(r,2)),6))*(((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))))).cast<double>());
}
