
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_600(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[600] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00007905505952380952380952380952380952380952380952380952380952380952380952380952380952380952380952380952"))*((pow(a,-15))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((15)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((7)*(M))+((4)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((385035)*(pow(a,24)))+(((675675)*(pow(r,24)))+(((360360)*((pow(a,2))*((pow(r,21))*((M)+((22)*(r))))))+(((280)*((pow(a,22))*((r)*(((3473)*(M))+((18238)*(r))))))+(((30030)*((pow(a,4))*((pow(r,18))*(((-8)*(pow(M,2)))+(((128)*((M)*(r)))+((1417)*(pow(r,2))))))))+(((14)*((pow(a,20))*((pow(r,2))*(((-94216)*(pow(M,2)))+(((600384)*((M)*(r)))+((2173641)*(pow(r,2))))))))+(((3432)*((pow(a,6))*((pow(r,15))*(((64)*(pow(M,3)))+(((-656)*((pow(M,2))*(r)))+(((5403)*((M)*(pow(r,2))))+((40242)*(pow(r,3)))))))))+(((8)*((pow(a,18))*((pow(r,3))*(((200128)*(pow(M,3)))+(((-1018832)*((pow(M,2))*(r)))+(((4136169)*((M)*(pow(r,2))))+((13544046)*(pow(r,3)))))))))+(((429)*((pow(a,8))*((pow(r,12))*(((-512)*(pow(M,4)))+(((4096)*((pow(M,3))*(r)))+(((-21824)*((pow(M,2))*(pow(r,2))))+(((124288)*((M)*(pow(r,3))))+((703417)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((-1366528)*(pow(M,4)))+(((6873088)*((pow(M,3))*(r)))+(((-22171712)*((pow(M,2))*(pow(r,2))))+(((78130816)*((M)*(pow(r,3))))+((257695349)*(pow(r,4)))))))))+(((208)*((pow(a,10))*((pow(r,9))*(((1024)*(pow(M,5)))+(((-6784)*((pow(M,4))*(r)))+(((28960)*((pow(M,3))*(pow(r,2))))+(((-108728)*((pow(M,2))*(pow(r,3))))+(((487037)*((M)*(pow(r,4))))+((2246938)*(pow(r,5)))))))))))+(((16)*((pow(a,14))*((pow(r,5))*(((44032)*(pow(M,5)))+(((-231552)*((pow(M,4))*(r)))+(((756960)*((pow(M,3))*(pow(r,2))))+(((-2178200)*((pow(M,2))*(pow(r,3))))+(((7654575)*((M)*(pow(r,4))))+((27023310)*(pow(r,5)))))))))))+((4)*((pow(a,12))*((pow(r,6))*(((-40960)*(pow(M,6)))+(((229376)*((pow(M,5))*(r)))+(((-882432)*((pow(M,4))*(pow(r,2))))+(((2831360)*((pow(M,3))*(pow(r,3))))+(((-8693800)*((pow(M,2))*(pow(r,4))))+(((33260640)*((M)*(pow(r,5))))+((131432025)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),12))*(((pow(a,4))+(((15)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((7)*(M))+((4)*(r))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_601(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[601] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00003952752976190476190476190476190476190476190476190476190476190476190476190476190476190476190476190476"))*((pow(a,-17))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((pow(a,4))+(((15)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((7)*(M))+((4)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((385035)*(pow(a,24)))+(((675675)*(pow(r,24)))+(((360360)*((pow(a,2))*((pow(r,21))*((M)+((22)*(r))))))+(((280)*((pow(a,22))*((r)*(((3473)*(M))+((18238)*(r))))))+(((30030)*((pow(a,4))*((pow(r,18))*(((-8)*(pow(M,2)))+(((128)*((M)*(r)))+((1417)*(pow(r,2))))))))+(((14)*((pow(a,20))*((pow(r,2))*(((-94216)*(pow(M,2)))+(((600384)*((M)*(r)))+((2173641)*(pow(r,2))))))))+(((3432)*((pow(a,6))*((pow(r,15))*(((64)*(pow(M,3)))+(((-656)*((pow(M,2))*(r)))+(((5403)*((M)*(pow(r,2))))+((40242)*(pow(r,3)))))))))+(((8)*((pow(a,18))*((pow(r,3))*(((200128)*(pow(M,3)))+(((-1018832)*((pow(M,2))*(r)))+(((4136169)*((M)*(pow(r,2))))+((13544046)*(pow(r,3)))))))))+(((429)*((pow(a,8))*((pow(r,12))*(((-512)*(pow(M,4)))+(((4096)*((pow(M,3))*(r)))+(((-21824)*((pow(M,2))*(pow(r,2))))+(((124288)*((M)*(pow(r,3))))+((703417)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((-1366528)*(pow(M,4)))+(((6873088)*((pow(M,3))*(r)))+(((-22171712)*((pow(M,2))*(pow(r,2))))+(((78130816)*((M)*(pow(r,3))))+((257695349)*(pow(r,4)))))))))+(((208)*((pow(a,10))*((pow(r,9))*(((1024)*(pow(M,5)))+(((-6784)*((pow(M,4))*(r)))+(((28960)*((pow(M,3))*(pow(r,2))))+(((-108728)*((pow(M,2))*(pow(r,3))))+(((487037)*((M)*(pow(r,4))))+((2246938)*(pow(r,5)))))))))))+(((16)*((pow(a,14))*((pow(r,5))*(((44032)*(pow(M,5)))+(((-231552)*((pow(M,4))*(r)))+(((756960)*((pow(M,3))*(pow(r,2))))+(((-2178200)*((pow(M,2))*(pow(r,3))))+(((7654575)*((M)*(pow(r,4))))+((27023310)*(pow(r,5)))))))))))+((4)*((pow(a,12))*((pow(r,6))*(((-40960)*(pow(M,6)))+(((229376)*((pow(M,5))*(r)))+(((-882432)*((pow(M,4))*(pow(r,2))))+(((2831360)*((pow(M,3))*(pow(r,3))))+(((-8693800)*((pow(M,2))*(pow(r,4))))+(((33260640)*((M)*(pow(r,5))))+((131432025)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),12))*(((pow(a,4))+(((15)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((7)*(M))+((4)*(r))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_602(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[602] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.0009486607142857142857142857142857142857142857142857142857142857142857142857142857142857142857142857143"))*((pow(a,-16))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((15)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((7)*(M))+((4)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((385035)*(pow(a,24)))+(((675675)*(pow(r,24)))+(((360360)*((pow(a,2))*((pow(r,21))*((M)+((22)*(r))))))+(((280)*((pow(a,22))*((r)*(((3473)*(M))+((18238)*(r))))))+(((30030)*((pow(a,4))*((pow(r,18))*(((-8)*(pow(M,2)))+(((128)*((M)*(r)))+((1417)*(pow(r,2))))))))+(((14)*((pow(a,20))*((pow(r,2))*(((-94216)*(pow(M,2)))+(((600384)*((M)*(r)))+((2173641)*(pow(r,2))))))))+(((3432)*((pow(a,6))*((pow(r,15))*(((64)*(pow(M,3)))+(((-656)*((pow(M,2))*(r)))+(((5403)*((M)*(pow(r,2))))+((40242)*(pow(r,3)))))))))+(((8)*((pow(a,18))*((pow(r,3))*(((200128)*(pow(M,3)))+(((-1018832)*((pow(M,2))*(r)))+(((4136169)*((M)*(pow(r,2))))+((13544046)*(pow(r,3)))))))))+(((429)*((pow(a,8))*((pow(r,12))*(((-512)*(pow(M,4)))+(((4096)*((pow(M,3))*(r)))+(((-21824)*((pow(M,2))*(pow(r,2))))+(((124288)*((M)*(pow(r,3))))+((703417)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((-1366528)*(pow(M,4)))+(((6873088)*((pow(M,3))*(r)))+(((-22171712)*((pow(M,2))*(pow(r,2))))+(((78130816)*((M)*(pow(r,3))))+((257695349)*(pow(r,4)))))))))+(((208)*((pow(a,10))*((pow(r,9))*(((1024)*(pow(M,5)))+(((-6784)*((pow(M,4))*(r)))+(((28960)*((pow(M,3))*(pow(r,2))))+(((-108728)*((pow(M,2))*(pow(r,3))))+(((487037)*((M)*(pow(r,4))))+((2246938)*(pow(r,5)))))))))))+(((16)*((pow(a,14))*((pow(r,5))*(((44032)*(pow(M,5)))+(((-231552)*((pow(M,4))*(r)))+(((756960)*((pow(M,3))*(pow(r,2))))+(((-2178200)*((pow(M,2))*(pow(r,3))))+(((7654575)*((M)*(pow(r,4))))+((27023310)*(pow(r,5)))))))))))+((4)*((pow(a,12))*((pow(r,6))*(((-40960)*(pow(M,6)))+(((229376)*((pow(M,5))*(r)))+(((-882432)*((pow(M,4))*(pow(r,2))))+(((2831360)*((pow(M,3))*(pow(r,3))))+(((-8693800)*((pow(M,2))*(pow(r,4))))+(((33260640)*((M)*(pow(r,5))))+((131432025)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),12))*(((pow(a,4))+(((15)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((7)*(M))+((4)*(r))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_603(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[603] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00006103515625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.4023739080814782462923342152765626523469856907803249918944935898670510185305687872045398353668950695"))*((pow(a,-19))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,8))+(((pow(a,6))*((((25)*(M))+((-1)*(r)))*(r)))+(((15)*((pow(r,6))*(((2)*(pow(M,2)))+(((71)*((M)*(r)))+((-36)*(pow(r,2)))))))+(((-1)*((pow(a,4))*((pow(r,2))*(((82)*(pow(M,2)))+(((453)*((M)*(r)))+((293)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((56)*(pow(M,3)))+(((2020)*((pow(M,2))*(r)))+(((83)*((M)*(pow(r,2))))+((-831)*(pow(r,3))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((1699873)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((1021020)*((pow(a,2))*((pow(r,25))*(((29)*(M))+((185)*(r))))))+(((28)*((pow(a,26))*((r)*(((733261)*(M))+((1216567)*(r))))))+(((3003)*((pow(a,4))*((pow(r,22))*(((2016)*(pow(M,2)))+(((116304)*((M)*(r)))+((377309)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((660960)*(pow(M,2)))+(((12393136)*((M)*(r)))+((13886285)*(pow(r,2))))))))+(((10296)*((pow(a,6))*((pow(r,19))*(((-240)*(pow(M,3)))+(((6240)*((pow(M,2))*(r)))+(((183157)*((M)*(pow(r,2))))+((404014)*(pow(r,3)))))))))+(((8)*((pow(a,22))*((pow(r,3))*(((-1230480)*(pow(M,3)))+(((15504480)*((pow(M,2))*(r)))+(((187545651)*((M)*(pow(r,2))))+((182485598)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((10240)*(pow(M,4)))+(((-158720)*((pow(M,3))*(r)))+(((2153760)*((pow(M,2))*(pow(r,2))))+(((43090000)*((M)*(pow(r,3))))+((72960109)*(pow(r,4))))))))))+(((pow(a,20))*((pow(r,4))*(((7219200)*(pow(M,4)))+(((-64312320)*((pow(M,3))*(r)))+(((502544160)*((pow(M,2))*(pow(r,2))))+(((5210077360)*((M)*(pow(r,3))))+((4853488477)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,13))*(((-18432)*(pow(M,5)))+(((215040)*((pow(M,4))*(r)))+(((-1770880)*((pow(M,3))*(pow(r,2))))+(((16897920)*((pow(M,2))*(pow(r,3))))+(((260914185)*((M)*(pow(r,4))))+((363339431)*(pow(r,5)))))))))))+(((12)*((pow(a,18))*((pow(r,5))*(((-342016)*(pow(M,5)))+(((2754560)*((pow(M,4))*(r)))+(((-15401600)*((pow(M,3))*(pow(r,2))))+(((101296000)*((pow(M,2))*(pow(r,3))))+(((1012683175)*((M)*(pow(r,4))))+((953600375)*(pow(r,5)))))))))))+(((3)*((pow(a,12))*((pow(r,10))*(((196608)*(pow(M,6)))+(((-1867776)*((pow(M,5))*(r)))+(((12052480)*((pow(M,4))*(pow(r,2))))+(((-71910400)*((pow(M,3))*(pow(r,3))))+(((551047360)*((pow(M,2))*(pow(r,4))))+(((7067231136)*((M)*(pow(r,5))))+((8481013233)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((1507328)*(pow(M,6)))+(((-11894784)*((pow(M,5))*(r)))+(((62638080)*((pow(M,4))*(pow(r,2))))+(((-305843200)*((pow(M,3))*(pow(r,3))))+(((1943217600)*((pow(M,2))*(pow(r,4))))+(((20075270880)*((M)*(pow(r,5))))+((19850429165)*(pow(r,6)))))))))))+((16)*((pow(a,14))*((pow(r,7))*(((-16384)*(pow(M,7)))+(((131072)*((pow(M,6))*(r)))+(((-777216)*((pow(M,5))*(pow(r,2))))+(((3952640)*((pow(M,4))*(pow(r,3))))+(((-19960240)*((pow(M,3))*(pow(r,4))))+(((134018688)*((pow(M,2))*(pow(r,5))))+(((1506400133)*((M)*(pow(r,6))))+((1615109552)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),12))*((((3)*(pow(a,8)))+(((323)*(pow(r,8)))+(((12)*((pow(a,6))*((r)*(((16)*(M))+((9)*(r))))))+(((68)*((pow(a,2))*((pow(r,5))*(((16)*(M))+((11)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((448)*(pow(M,2)))+(((640)*((M)*(r)))+((265)*(pow(r,2))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_604(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[604] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00006103515625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.4023739080814782462923342152765626523469856907803249918944935898670510185305687872045398353668950695"))*((pow(a,-17))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((15)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((7)*(M))+((4)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((1699873)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((1021020)*((pow(a,2))*((pow(r,25))*(((29)*(M))+((185)*(r))))))+(((28)*((pow(a,26))*((r)*(((733261)*(M))+((1216567)*(r))))))+(((3003)*((pow(a,4))*((pow(r,22))*(((2016)*(pow(M,2)))+(((116304)*((M)*(r)))+((377309)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((660960)*(pow(M,2)))+(((12393136)*((M)*(r)))+((13886285)*(pow(r,2))))))))+(((10296)*((pow(a,6))*((pow(r,19))*(((-240)*(pow(M,3)))+(((6240)*((pow(M,2))*(r)))+(((183157)*((M)*(pow(r,2))))+((404014)*(pow(r,3)))))))))+(((8)*((pow(a,22))*((pow(r,3))*(((-1230480)*(pow(M,3)))+(((15504480)*((pow(M,2))*(r)))+(((187545651)*((M)*(pow(r,2))))+((182485598)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((10240)*(pow(M,4)))+(((-158720)*((pow(M,3))*(r)))+(((2153760)*((pow(M,2))*(pow(r,2))))+(((43090000)*((M)*(pow(r,3))))+((72960109)*(pow(r,4))))))))))+(((pow(a,20))*((pow(r,4))*(((7219200)*(pow(M,4)))+(((-64312320)*((pow(M,3))*(r)))+(((502544160)*((pow(M,2))*(pow(r,2))))+(((5210077360)*((M)*(pow(r,3))))+((4853488477)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,13))*(((-18432)*(pow(M,5)))+(((215040)*((pow(M,4))*(r)))+(((-1770880)*((pow(M,3))*(pow(r,2))))+(((16897920)*((pow(M,2))*(pow(r,3))))+(((260914185)*((M)*(pow(r,4))))+((363339431)*(pow(r,5)))))))))))+(((12)*((pow(a,18))*((pow(r,5))*(((-342016)*(pow(M,5)))+(((2754560)*((pow(M,4))*(r)))+(((-15401600)*((pow(M,3))*(pow(r,2))))+(((101296000)*((pow(M,2))*(pow(r,3))))+(((1012683175)*((M)*(pow(r,4))))+((953600375)*(pow(r,5)))))))))))+(((3)*((pow(a,12))*((pow(r,10))*(((196608)*(pow(M,6)))+(((-1867776)*((pow(M,5))*(r)))+(((12052480)*((pow(M,4))*(pow(r,2))))+(((-71910400)*((pow(M,3))*(pow(r,3))))+(((551047360)*((pow(M,2))*(pow(r,4))))+(((7067231136)*((M)*(pow(r,5))))+((8481013233)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((1507328)*(pow(M,6)))+(((-11894784)*((pow(M,5))*(r)))+(((62638080)*((pow(M,4))*(pow(r,2))))+(((-305843200)*((pow(M,3))*(pow(r,3))))+(((1943217600)*((pow(M,2))*(pow(r,4))))+(((20075270880)*((M)*(pow(r,5))))+((19850429165)*(pow(r,6)))))))))))+((16)*((pow(a,14))*((pow(r,7))*(((-16384)*(pow(M,7)))+(((131072)*((pow(M,6))*(r)))+(((-777216)*((pow(M,5))*(pow(r,2))))+(((3952640)*((pow(M,4))*(pow(r,3))))+(((-19960240)*((pow(M,3))*(pow(r,4))))+(((134018688)*((pow(M,2))*(pow(r,5))))+(((1506400133)*((M)*(pow(r,6))))+((1615109552)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),12))*((((3)*(pow(a,8)))+(((323)*(pow(r,8)))+(((12)*((pow(a,6))*((r)*(((16)*(M))+((9)*(r))))))+(((68)*((pow(a,2))*((pow(r,5))*(((16)*(M))+((11)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((448)*(pow(M,2)))+(((640)*((M)*(r)))+((265)*(pow(r,2))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

}
