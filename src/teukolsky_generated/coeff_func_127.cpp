
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_635(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[635] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.0009765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.400549342771778797446286597645206441561658958578308785482083663426211920031393617323195501427144316"))*((pow(a,-18))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((3)*(pow(a,8)))+(((39)*(pow(r,8)))+(((104)*((pow(a,2))*((pow(r,5))*((M)+(r)))))+(((8)*((pow(a,6))*((r)*(((5)*(M))+((4)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((32)*(pow(M,2)))+(((72)*((M)*(r)))+((47)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((49152)*(pow(a,24)))+(((14549535)*(pow(r,24)))+(((255255)*((pow(a,2))*((pow(r,21))*(((254)*(M))+((557)*(r))))))+(((3)*((pow(a,22))*((r)*(((1297118)*(M))+((845167)*(r))))))+(((3003)*((pow(a,4))*((pow(r,18))*(((31256)*(pow(M,2)))+(((184644)*((M)*(r)))+((208839)*(pow(r,2))))))))+(((pow(a,20))*((pow(r,2))*(((29571560)*(pow(M,2)))+(((68485100)*((M)*(r)))+((32039369)*(pow(r,2)))))))+(((429)*((pow(a,6))*((pow(r,15))*(((106688)*(pow(M,3)))+(((1590304)*((pow(M,2))*(r)))+(((4911738)*((M)*(pow(r,2))))+((3838869)*(pow(r,3)))))))))+(((pow(a,18))*((pow(r,3))*(((39568832)*(pow(M,3)))+(((295925728)*((pow(M,2))*(r)))+(((470931594)*((M)*(pow(r,2))))+((196700679)*(pow(r,3))))))))+(((286)*((pow(a,8))*((pow(r,12))*(((8960)*(pow(M,4)))+(((942272)*((pow(M,3))*(r)))+(((7522368)*((pow(M,2))*(pow(r,2))))+(((16344344)*((M)*(pow(r,3))))+((9992189)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((3709440)*(pow(M,4)))+(((244831872)*((pow(M,3))*(r)))+(((1249040576)*((pow(M,2))*(pow(r,2))))+(((1770806352)*((M)*(pow(r,3))))+((722793771)*(pow(r,4)))))))))+(((26)*((pow(a,10))*((pow(r,9))*(((-14336)*(pow(M,5)))+(((430080)*((pow(M,4))*(r)))+(((25383840)*((pow(M,3))*(pow(r,2))))+(((147617680)*((pow(M,2))*(pow(r,3))))+(((257037690)*((M)*(pow(r,4))))+((132179979)*(pow(r,5)))))))))))+(((2)*((pow(a,14))*((pow(r,5))*(((-272384)*(pow(M,5)))+(((6737920)*((pow(M,4))*(r)))+(((314632480)*((pow(M,3))*(pow(r,2))))+(((1467564784)*((pow(M,2))*(pow(r,3))))+(((2072476826)*((M)*(pow(r,4))))+((874023017)*(pow(r,5)))))))))))+((2)*((pow(a,12))*((pow(r,6))*(((28672)*(pow(M,6)))+(((-458752)*((pow(M,5))*(r)))+(((9192960)*((pow(M,4))*(pow(r,2))))+(((430130560)*((pow(M,3))*(pow(r,3))))+(((2113742120)*((pow(M,2))*(pow(r,4))))+(((3203233572)*((M)*(pow(r,5))))+((1459336053)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),6))*((((323)*(pow(r,15)))+(((7)*((pow(a,14))*(((2)*(M))+(r))))+(((17)*((pow(a,2))*((pow(r,12))*(((110)*(M))+((97)*(r))))))+(((7)*((pow(a,12))*((r)*(((48)*(pow(M,2)))+(((60)*((M)*(r)))+((19)*(pow(r,2))))))))+(((3)*((pow(a,4))*((pow(r,9))*(((1296)*(pow(M,2)))+(((2444)*((M)*(r)))+((1157)*(pow(r,2))))))))+(((21)*((pow(a,10))*((pow(r,2))*(((64)*(pow(M,3)))+(((160)*((pow(M,2))*(r)))+(((138)*((M)*(pow(r,2))))+((39)*(pow(r,3)))))))))+(((pow(a,6))*((pow(r,6))*(((3392)*(pow(M,3)))+(((10464)*((pow(M,2))*(r)))+(((11154)*((M)*(pow(r,2))))+((3861)*(pow(r,3))))))))+((pow(a,8))*((pow(r,3))*(((1024)*(pow(M,4)))+(((4736)*((pow(M,3))*(r)))+(((9600)*((pow(M,2))*(pow(r,2))))+(((8184)*((M)*(pow(r,3))))+((2409)*(pow(r,4))))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_636(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[636] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.01562500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.6362090102803517839413849090276069782068879633517784735208857226532938823195068186177182207038804752"))*((pow(a,-11))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((-3)*((pow(a,2))*((r)*((M)+((11)*(r))))))+((pow(r,2))*(((2)*(pow(M,2)))+(((71)*((M)*(r)))+((-36)*(pow(r,2))))))))*(((a)*((r)*(((-45045)*((((2)*(M))+((-1)*(r)))*(pow(r,20))))+(((3781)*((pow(a,20))*(((2)*(M))+(r))))+(((30030)*((pow(a,2))*((pow(r,17))*(((-14)*(pow(M,2)))+(((-16)*((M)*(r)))+((13)*(pow(r,2))))))))+(((2)*((pow(a,18))*((r)*(((38654)*(pow(M,2)))+(((76464)*((M)*(r)))+((30459)*(pow(r,2))))))))+(((-231)*((pow(a,4))*((pow(r,14))*(((2752)*(pow(M,3)))+(((10432)*((pow(M,2))*(r)))+(((3234)*((M)*(pow(r,2))))+((-6519)*(pow(r,3)))))))))+(((pow(a,16))*((pow(r,2))*(((-44992)*(pow(M,3)))+(((550976)*((pow(M,2))*(r)))+(((1002318)*((M)*(pow(r,2))))+((395601)*(pow(r,3))))))))+(((24)*((pow(a,6))*((pow(r,11))*(((-13320)*(pow(M,4)))+(((-132288)*((pow(M,3))*(r)))+(((-232346)*((pow(M,2))*(pow(r,2))))+(((27912)*((M)*(pow(r,3))))+((141579)*(pow(r,4))))))))))+(((8)*((pow(a,14))*((pow(r,3))*(((-33560)*(pow(M,4)))+(((-100864)*((pow(M,3))*(r)))+(((161186)*((pow(M,2))*(pow(r,2))))+(((410792)*((M)*(pow(r,3))))+((178273)*(pow(r,4))))))))))+(((-2)*((pow(a,8))*((pow(r,8))*(((8704)*(pow(M,5)))+(((617600)*((pow(M,4))*(r)))+(((3191200)*((pow(M,3))*(pow(r,2))))+(((3186976)*((pow(M,2))*(pow(r,3))))+(((-2079934)*((M)*(pow(r,4))))+((-2476829)*(pow(r,5)))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((-11776)*(pow(M,5)))+(((-566400)*((pow(M,4))*(r)))+(((-1709280)*((pow(M,3))*(pow(r,2))))+(((233120)*((pow(M,2))*(pow(r,3))))+(((3095010)*((M)*(pow(r,4))))+((1614765)*(pow(r,5)))))))))))+((4)*((pow(a,10))*((pow(r,5))*(((512)*(pow(M,6)))+(((-10240)*((pow(M,5))*(r)))+(((-444960)*((pow(M,4))*(pow(r,2))))+(((-1624960)*((pow(M,3))*(pow(r,3))))+(((-784150)*((pow(M,2))*(pow(r,4))))+(((1723488)*((M)*(pow(r,5))))+((1214529)*(pow(r,6))))))))))))))))))))))))+((-315)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,12))+(((143)*(pow(r,12)))+(((572)*((pow(a,2))*((pow(r,9))*((M)+(r)))))+(((12)*((pow(a,10))*((r)*(((5)*(M))+((3)*(r))))))+(((5)*((pow(a,8))*((pow(r,2))*(pow(((8)*(M))+((7)*(r)),2)))))+(((11)*((pow(a,4))*((pow(r,6))*(pow(((8)*(M))+((9)*(r)),2)))))+((8)*((pow(a,6))*((pow(r,3))*(((32)*(pow(M,3)))+(((128)*((pow(M,2))*(r)))+(((189)*((M)*(pow(r,2))))+((84)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_637(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[637] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.007812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.101946330038679463505627181220627660134315136320075228294314864900461034523877515744485001885445175"))*((pow(a,-13))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,8))+(((pow(a,6))*((((9)*(M))+((-25)*(r)))*(r)))+(((7)*((pow(r,6))*(((2)*(pow(M,2)))+(((71)*((M)*(r)))+((-36)*(pow(r,2)))))))+(((-1)*((pow(a,4))*((pow(r,2))*(((34)*(pow(M,2)))+(((349)*((M)*(r)))+((293)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((24)*(pow(M,3)))+(((868)*((pow(M,2))*(r)))+(((115)*((M)*(pow(r,2))))+((-519)*(pow(r,3))))))))))))*(((a)*((r)*(((-45045)*((((2)*(M))+((-1)*(r)))*(pow(r,20))))+(((3781)*((pow(a,20))*(((2)*(M))+(r))))+(((30030)*((pow(a,2))*((pow(r,17))*(((-14)*(pow(M,2)))+(((-16)*((M)*(r)))+((13)*(pow(r,2))))))))+(((2)*((pow(a,18))*((r)*(((38654)*(pow(M,2)))+(((76464)*((M)*(r)))+((30459)*(pow(r,2))))))))+(((-231)*((pow(a,4))*((pow(r,14))*(((2752)*(pow(M,3)))+(((10432)*((pow(M,2))*(r)))+(((3234)*((M)*(pow(r,2))))+((-6519)*(pow(r,3)))))))))+(((pow(a,16))*((pow(r,2))*(((-44992)*(pow(M,3)))+(((550976)*((pow(M,2))*(r)))+(((1002318)*((M)*(pow(r,2))))+((395601)*(pow(r,3))))))))+(((24)*((pow(a,6))*((pow(r,11))*(((-13320)*(pow(M,4)))+(((-132288)*((pow(M,3))*(r)))+(((-232346)*((pow(M,2))*(pow(r,2))))+(((27912)*((M)*(pow(r,3))))+((141579)*(pow(r,4))))))))))+(((8)*((pow(a,14))*((pow(r,3))*(((-33560)*(pow(M,4)))+(((-100864)*((pow(M,3))*(r)))+(((161186)*((pow(M,2))*(pow(r,2))))+(((410792)*((M)*(pow(r,3))))+((178273)*(pow(r,4))))))))))+(((-2)*((pow(a,8))*((pow(r,8))*(((8704)*(pow(M,5)))+(((617600)*((pow(M,4))*(r)))+(((3191200)*((pow(M,3))*(pow(r,2))))+(((3186976)*((pow(M,2))*(pow(r,3))))+(((-2079934)*((M)*(pow(r,4))))+((-2476829)*(pow(r,5)))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((-11776)*(pow(M,5)))+(((-566400)*((pow(M,4))*(r)))+(((-1709280)*((pow(M,3))*(pow(r,2))))+(((233120)*((pow(M,2))*(pow(r,3))))+(((3095010)*((M)*(pow(r,4))))+((1614765)*(pow(r,5)))))))))))+((4)*((pow(a,10))*((pow(r,5))*(((512)*(pow(M,6)))+(((-10240)*((pow(M,5))*(r)))+(((-444960)*((pow(M,4))*(pow(r,2))))+(((-1624960)*((pow(M,3))*(pow(r,3))))+(((-784150)*((pow(M,2))*(pow(r,4))))+(((1723488)*((M)*(pow(r,5))))+((1214529)*(pow(r,6))))))))))))))))))))))))+((-315)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,12))+(((143)*(pow(r,12)))+(((572)*((pow(a,2))*((pow(r,9))*((M)+(r)))))+(((12)*((pow(a,10))*((r)*(((5)*(M))+((3)*(r))))))+(((5)*((pow(a,8))*((pow(r,2))*(pow(((8)*(M))+((7)*(r)),2)))))+(((11)*((pow(a,4))*((pow(r,6))*(pow(((8)*(M))+((9)*(r)),2)))))+((8)*((pow(a,6))*((pow(r,3))*(((32)*(pow(M,3)))+(((128)*((pow(M,2))*(r)))+(((189)*((M)*(pow(r,2))))+((84)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_638(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[638] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0009765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("8.582928793055821843613863859562502139548281217014381842790180401788076128396922590299822556559041754"))*((pow(a,-15))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,12))+(((pow(a,10))*((((29)*(M))+((-13)*(r)))*(r)))+(((33)*((pow(r,10))*(((2)*(pow(M,2)))+(((71)*((M)*(r)))+((-36)*(pow(r,2)))))))+(((-1)*((pow(a,8))*((pow(r,2))*(((30)*(pow(M,2)))+(((917)*((M)*(r)))+((626)*(pow(r,2))))))))+(((3)*((pow(a,2))*((pow(r,7))*(((64)*(pow(M,3)))+(((2328)*((pow(M,2))*(r)))+(((803)*((M)*(pow(r,2))))+((-1371)*(pow(r,3)))))))))+(((-2)*((pow(a,6))*((pow(r,3))*(((64)*(pow(M,3)))+(((92)*((pow(M,2))*(r)))+(((2035)*((M)*(pow(r,2))))+((1473)*(pow(r,3)))))))))+((pow(a,4))*((pow(r,4))*(((128)*(pow(M,4)))+(((4800)*((pow(M,3))*(r)))+(((6636)*((pow(M,2))*(pow(r,2))))+(((-3058)*((M)*(pow(r,3))))+((-5259)*(pow(r,4)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((3781)*(pow(a,16)))+(((45045)*(pow(r,16)))+(((60060)*((pow(a,2))*((pow(r,13))*(((2)*(M))+((5)*(r))))))+(((4)*((pow(a,14))*((r)*(((11554)*(M))+((13339)*(r))))))+(((924)*((pow(a,4))*((pow(r,10))*(((84)*(pow(M,2)))+(((696)*((M)*(r)))+((931)*(pow(r,2))))))))+(((12)*((pow(a,12))*((pow(r,2))*(((5828)*(pow(M,2)))+(((28936)*((M)*(r)))+((23759)*(pow(r,2))))))))+(((36)*((pow(a,6))*((pow(r,7))*(((128)*(pow(M,3)))+(((8432)*((pow(M,2))*(r)))+(((39366)*((M)*(pow(r,2))))+((38253)*(pow(r,3)))))))))+(((4)*((pow(a,10))*((pow(r,3))*(((1408)*(pow(M,3)))+(((72048)*((pow(M,2))*(r)))+(((261786)*((M)*(pow(r,2))))+((200653)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((-256)*(pow(M,4)))+(((5120)*((pow(M,3))*(r)))+(((222096)*((pow(M,2))*(pow(r,2))))+(((820160)*((M)*(pow(r,3))))+((669599)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,12))+(((143)*(pow(r,12)))+(((572)*((pow(a,2))*((pow(r,9))*((M)+(r)))))+(((12)*((pow(a,10))*((r)*(((5)*(M))+((3)*(r))))))+(((5)*((pow(a,8))*((pow(r,2))*(pow(((8)*(M))+((7)*(r)),2)))))+(((11)*((pow(a,4))*((pow(r,6))*(pow(((8)*(M))+((9)*(r)),2)))))+((8)*((pow(a,6))*((pow(r,3))*(((32)*(pow(M,3)))+(((128)*((pow(M,2))*(r)))+(((189)*((M)*(pow(r,2))))+((84)*(pow(r,3)))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_639(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[639] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.008300781250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-17))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,16))+(((3)*((pow(a,14))*((r)*(((19)*(M))+(r)))))+(((pow(a,12))*((pow(r,2))*(((142)*(pow(M,2)))+(((-1457)*((M)*(r)))+((-979)*(pow(r,2)))))))+(((143)*((pow(r,14))*(((2)*(pow(M,2)))+(((71)*((M)*(r)))+((-36)*(pow(r,2)))))))+(((143)*((pow(a,2))*((pow(r,11))*(((8)*(pow(M,3)))+(((292)*((pow(M,2))*(r)))+(((137)*((M)*(pow(r,2))))+((-177)*(pow(r,3)))))))))+(((-1)*((pow(a,10))*((pow(r,3))*(((584)*(pow(M,3)))+(((6884)*((pow(M,2))*(r)))+(((17307)*((M)*(pow(r,2))))+((8709)*(pow(r,3)))))))))+(((11)*((pow(a,4))*((pow(r,8))*(((128)*(pow(M,4)))+(((4832)*((pow(M,3))*(r)))+(((7926)*((pow(M,2))*(pow(r,2))))+(((-1305)*((M)*(pow(r,3))))+((-4619)*(pow(r,4))))))))))+(((-1)*((pow(a,8))*((pow(r,4))*(((128)*(pow(M,4)))+(((-12320)*((pow(M,3))*(r)))+(((8894)*((pow(M,2))*(pow(r,2))))+(((53093)*((M)*(pow(r,3))))+((30105)*(pow(r,4))))))))))+((pow(a,6))*((pow(r,5))*(((512)*(pow(M,5)))+(((20224)*((pow(M,4))*(r)))+(((64400)*((pow(M,3))*(pow(r,2))))+(((43848)*((pow(M,2))*(pow(r,3))))+(((-61093)*((M)*(pow(r,4))))+((-53023)*(pow(r,5))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((3781)*(pow(a,16)))+(((45045)*(pow(r,16)))+(((60060)*((pow(a,2))*((pow(r,13))*(((2)*(M))+((5)*(r))))))+(((4)*((pow(a,14))*((r)*(((11554)*(M))+((13339)*(r))))))+(((924)*((pow(a,4))*((pow(r,10))*(((84)*(pow(M,2)))+(((696)*((M)*(r)))+((931)*(pow(r,2))))))))+(((12)*((pow(a,12))*((pow(r,2))*(((5828)*(pow(M,2)))+(((28936)*((M)*(r)))+((23759)*(pow(r,2))))))))+(((36)*((pow(a,6))*((pow(r,7))*(((128)*(pow(M,3)))+(((8432)*((pow(M,2))*(r)))+(((39366)*((M)*(pow(r,2))))+((38253)*(pow(r,3)))))))))+(((4)*((pow(a,10))*((pow(r,3))*(((1408)*(pow(M,3)))+(((72048)*((pow(M,2))*(r)))+(((261786)*((M)*(pow(r,2))))+((200653)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((-256)*(pow(M,4)))+(((5120)*((pow(M,3))*(r)))+(((222096)*((pow(M,2))*(pow(r,2))))+(((820160)*((M)*(pow(r,3))))+((669599)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,12))+(((143)*(pow(r,12)))+(((572)*((pow(a,2))*((pow(r,9))*((M)+(r)))))+(((12)*((pow(a,10))*((r)*(((5)*(M))+((3)*(r))))))+(((5)*((pow(a,8))*((pow(r,2))*(pow(((8)*(M))+((7)*(r)),2)))))+(((11)*((pow(a,4))*((pow(r,6))*(pow(((8)*(M))+((9)*(r)),2)))))+((8)*((pow(a,6))*((pow(r,3))*(((32)*(pow(M,3)))+(((128)*((pow(M,2))*(r)))+(((189)*((M)*(pow(r,2))))+((84)*(pow(r,3)))))))))))))))*(expr[3])))))))))))))).cast<double>());
}
