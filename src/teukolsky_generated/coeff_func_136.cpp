
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_680(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[680] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.0002441406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.207121724244434738877002645829687957040957072340974975683480769601153055591706361613619506100685209"))*((pow(a,-18))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((15)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((7)*(M))+((4)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((1699873)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((1021020)*((pow(a,2))*((pow(r,25))*(((29)*(M))+((185)*(r))))))+(((28)*((pow(a,26))*((r)*(((733261)*(M))+((1216567)*(r))))))+(((3003)*((pow(a,4))*((pow(r,22))*(((2016)*(pow(M,2)))+(((116304)*((M)*(r)))+((377309)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((660960)*(pow(M,2)))+(((12393136)*((M)*(r)))+((13886285)*(pow(r,2))))))))+(((10296)*((pow(a,6))*((pow(r,19))*(((-240)*(pow(M,3)))+(((6240)*((pow(M,2))*(r)))+(((183157)*((M)*(pow(r,2))))+((404014)*(pow(r,3)))))))))+(((8)*((pow(a,22))*((pow(r,3))*(((-1230480)*(pow(M,3)))+(((15504480)*((pow(M,2))*(r)))+(((187545651)*((M)*(pow(r,2))))+((182485598)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((10240)*(pow(M,4)))+(((-158720)*((pow(M,3))*(r)))+(((2153760)*((pow(M,2))*(pow(r,2))))+(((43090000)*((M)*(pow(r,3))))+((72960109)*(pow(r,4))))))))))+(((pow(a,20))*((pow(r,4))*(((7219200)*(pow(M,4)))+(((-64312320)*((pow(M,3))*(r)))+(((502544160)*((pow(M,2))*(pow(r,2))))+(((5210077360)*((M)*(pow(r,3))))+((4853488477)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,13))*(((-18432)*(pow(M,5)))+(((215040)*((pow(M,4))*(r)))+(((-1770880)*((pow(M,3))*(pow(r,2))))+(((16897920)*((pow(M,2))*(pow(r,3))))+(((260914185)*((M)*(pow(r,4))))+((363339431)*(pow(r,5)))))))))))+(((12)*((pow(a,18))*((pow(r,5))*(((-342016)*(pow(M,5)))+(((2754560)*((pow(M,4))*(r)))+(((-15401600)*((pow(M,3))*(pow(r,2))))+(((101296000)*((pow(M,2))*(pow(r,3))))+(((1012683175)*((M)*(pow(r,4))))+((953600375)*(pow(r,5)))))))))))+(((3)*((pow(a,12))*((pow(r,10))*(((196608)*(pow(M,6)))+(((-1867776)*((pow(M,5))*(r)))+(((12052480)*((pow(M,4))*(pow(r,2))))+(((-71910400)*((pow(M,3))*(pow(r,3))))+(((551047360)*((pow(M,2))*(pow(r,4))))+(((7067231136)*((M)*(pow(r,5))))+((8481013233)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((1507328)*(pow(M,6)))+(((-11894784)*((pow(M,5))*(r)))+(((62638080)*((pow(M,4))*(pow(r,2))))+(((-305843200)*((pow(M,3))*(pow(r,3))))+(((1943217600)*((pow(M,2))*(pow(r,4))))+(((20075270880)*((M)*(pow(r,5))))+((19850429165)*(pow(r,6)))))))))))+((16)*((pow(a,14))*((pow(r,7))*(((-16384)*(pow(M,7)))+(((131072)*((pow(M,6))*(r)))+(((-777216)*((pow(M,5))*(pow(r,2))))+(((3952640)*((pow(M,4))*(pow(r,3))))+(((-19960240)*((pow(M,3))*(pow(r,4))))+(((134018688)*((pow(M,2))*(pow(r,5))))+(((1506400133)*((M)*(pow(r,6))))+((1615109552)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),12))*((((3)*(pow(a,8)))+(((323)*(pow(r,8)))+(((12)*((pow(a,6))*((r)*(((16)*(M))+((9)*(r))))))+(((68)*((pow(a,2))*((pow(r,5))*(((16)*(M))+((11)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((448)*(pow(M,2)))+(((640)*((M)*(r)))+((265)*(pow(r,2))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_681(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[681] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.03320312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-16))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((14336)*(pow(a,28)))+(((45045)*(pow(r,28)))+(((15015)*((pow(a,2))*((pow(r,25))*(((2)*(M))+((41)*(r))))))+(((7)*((pow(a,26))*((r)*(((19898)*(M))+((38621)*(r))))))+(((6006)*((pow(a,4))*((pow(r,22))*(((-4)*(pow(M,2)))+(((64)*((M)*(r)))+((649)*(pow(r,2))))))))+(((7)*((pow(a,24))*((pow(r,2))*(((-49928)*(pow(M,2)))+(((188848)*((M)*(r)))+((303223)*(pow(r,2))))))))+(((858)*((pow(a,6))*((pow(r,19))*(((32)*(pow(M,3)))+(((-328)*((pow(M,2))*(r)))+(((2642)*((M)*(pow(r,2))))+((17657)*(pow(r,3)))))))))+(((14)*((pow(a,22))*((pow(r,3))*(((51808)*(pow(M,3)))+(((-171928)*((pow(M,2))*(r)))+(((420886)*((M)*(pow(r,2))))+((692331)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((-256)*(pow(M,4)))+(((2048)*((pow(M,3))*(r)))+(((-10536)*((pow(M,2))*(pow(r,2))))+(((57008)*((M)*(pow(r,3))))+((282233)*(pow(r,4))))))))))+(((2)*((pow(a,20))*((pow(r,4))*(((-525184)*(pow(M,4)))+(((1850880)*((pow(M,3))*(r)))+(((-3755580)*((pow(M,2))*(pow(r,2))))+(((8167648)*((M)*(pow(r,3))))+((14716603)*(pow(r,4))))))))))+(((13)*((pow(a,10))*((pow(r,13))*(((4096)*(pow(M,5)))+(((-27136)*((pow(M,4))*(r)))+(((108800)*((pow(M,3))*(pow(r,2))))+(((-374720)*((pow(M,2))*(pow(r,3))))+(((1533602)*((M)*(pow(r,4))))+((5993057)*(pow(r,5)))))))))))+(((pow(a,18))*((pow(r,5))*(((987136)*(pow(M,5)))+(((-3834368)*((pow(M,4))*(r)))+(((8071424)*((pow(M,3))*(pow(r,2))))+(((-14143168)*((pow(M,2))*(pow(r,3))))+(((31340834)*((M)*(pow(r,4))))+((63634025)*(pow(r,5))))))))))+(((4)*((pow(a,12))*((pow(r,10))*(((-20480)*(pow(M,6)))+(((114688)*((pow(M,5))*(r)))+(((-380480)*((pow(M,4))*(pow(r,2))))+(((1019648)*((pow(M,3))*(pow(r,3))))+(((-2646188)*((pow(M,2))*(pow(r,4))))+(((8747536)*((M)*(pow(r,5))))+((28071841)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((-540672)*(pow(M,6)))+(((2326528)*((pow(M,5))*(r)))+(((-5443840)*((pow(M,4))*(pow(r,2))))+(((9957376)*((pow(M,3))*(pow(r,3))))+(((-17989744)*((pow(M,2))*(pow(r,4))))+(((43718752)*((M)*(pow(r,5))))+((101706003)*(pow(r,6)))))))))))+((4)*((pow(a,14))*((pow(r,7))*(((32768)*(pow(M,7)))+(((-155648)*((pow(M,6))*(r)))+(((436224)*((pow(M,5))*(pow(r,2))))+(((-966400)*((pow(M,4))*(pow(r,3))))+(((1948000)*((pow(M,3))*(pow(r,4))))+(((-4065720)*((pow(M,2))*(pow(r,5))))+(((11324110)*((M)*(pow(r,6))))+((30648415)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),14))*(((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_682(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[682] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.0004882812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.870828693386970692791874366158274650878009903889363473151872733660017578153469513988404947597189786"))*((pow(a,-18))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((458752)*(pow(a,32)))+(((14549535)*(pow(r,32)))+(((255255)*((pow(a,2))*((pow(r,29))*(((134)*(M))+((845)*(r))))))+(((7)*((pow(a,30))*((r)*(((2751502)*(M))+((2424327)*(r))))))+(((51051)*((pow(a,4))*((pow(r,26))*(((168)*(pow(M,2)))+(((9212)*((M)*(r)))+((29217)*(pow(r,2))))))))+(((7)*((pow(a,28))*((pow(r,2))*(((3920040)*(pow(M,2)))+(((42441068)*((M)*(r)))+((29480595)*(pow(r,2))))))))+(((7293)*((pow(a,6))*((pow(r,23))*(((-576)*(pow(M,3)))+(((14976)*((pow(M,2))*(r)))+(((411070)*((M)*(pow(r,2))))+((875163)*(pow(r,3)))))))))+(((7)*((pow(a,26))*((pow(r,3))*(((-4443840)*(pow(M,3)))+(((40374720)*((pow(M,2))*(r)))+(((298014322)*((M)*(pow(r,2))))+((194318675)*(pow(r,3)))))))))+(((2431)*((pow(a,8))*((pow(r,20))*(((1280)*(pow(M,4)))+(((-19840)*((pow(M,3))*(r)))+(((263280)*((pow(M,2))*(pow(r,2))))+(((4830104)*((M)*(pow(r,3))))+((7774925)*(pow(r,4))))))))))+(((pow(a,24))*((pow(r,4))*(((35930880)*(pow(M,4)))+(((-239207040)*((pow(M,3))*(r)))+(((1351691280)*((pow(M,2))*(pow(r,2))))+(((8889172456)*((M)*(pow(r,3))))+((5792658945)*(pow(r,4)))))))))+(((221)*((pow(a,10))*((pow(r,17))*(((-12288)*(pow(M,5)))+(((143360)*((pow(M,4))*(r)))+(((-1139520)*((pow(M,3))*(pow(r,2))))+(((10332480)*((pow(M,2))*(pow(r,3))))+(((142803506)*((M)*(pow(r,4))))+((185664555)*(pow(r,5)))))))))))+(((pow(a,22))*((pow(r,5))*(((-32944128)*(pow(M,5)))+(((205086720)*((pow(M,4))*(r)))+(((-835414080)*((pow(M,3))*(pow(r,2))))+(((3968327040)*((pow(M,2))*(pow(r,3))))+(((25775228834)*((M)*(pow(r,4))))+((17368821597)*(pow(r,5))))))))))+(((17)*((pow(a,12))*((pow(r,14))*(((147456)*(pow(M,6)))+(((-1400832)*((pow(M,5))*(r)))+(((8473600)*((pow(M,4))*(pow(r,2))))+(((-46394880)*((pow(M,3))*(pow(r,3))))+(((325178280)*((pow(M,2))*(pow(r,4))))+(((3620991052)*((M)*(pow(r,5))))+((3968552175)*(pow(r,6))))))))))))+(((pow(a,20))*((pow(r,6))*(((21315584)*(pow(M,6)))+(((-133718016)*((pow(M,5))*(r)))+(((509475840)*((pow(M,4))*(pow(r,2))))+(((-1751395840)*((pow(M,3))*(pow(r,3))))+(((7958682120)*((pow(M,2))*(pow(r,4))))+(((53935859500)*((M)*(pow(r,5))))+((38485430289)*(pow(r,6)))))))))))+(((17)*((pow(a,14))*((pow(r,11))*(((-131072)*(pow(M,7)))+(((1048576)*((pow(M,6))*(r)))+(((-5296128)*((pow(M,5))*(pow(r,2))))+(((22528000)*((pow(M,4))*(pow(r,3))))+(((-96691840)*((pow(M,3))*(pow(r,4))))+(((563211264)*((pow(M,2))*(pow(r,5))))+(((5283421654)*((M)*(pow(r,6))))+((5033330771)*(pow(r,7)))))))))))))+(((pow(a,18))*((pow(r,7))*(((-8519680)*(pow(M,7)))+(((55443456)*((pow(M,6))*(r)))+(((-219156480)*((pow(M,5))*(pow(r,2))))+(((724889600)*((pow(M,4))*(pow(r,3))))+(((-2447760000)*((pow(M,3))*(pow(r,4))))+(((11474144640)*((pow(M,2))*(pow(r,5))))+(((84142593710)*((M)*(pow(r,6))))+((64841932785)*(pow(r,7))))))))))))+((pow(a,16))*((pow(r,8))*(((1572864)*(pow(M,8)))+(((-10747904)*((pow(M,7))*(r)))+(((49446912)*((pow(M,6))*(pow(r,2))))+(((-187318272)*((pow(M,5))*(pow(r,3))))+(((652065280)*((pow(M,4))*(pow(r,4))))+(((-2386530048)*((pow(M,3))*(pow(r,5))))+(((12177929568)*((pow(M,2))*(pow(r,6))))+(((99541831984)*((M)*(pow(r,7))))+((84427450989)*(pow(r,8)))))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((765765)*((r)*((pow((pow(a,2))+(pow(r,2)),14))*((((19)*(pow(r,7)))+(((3)*((pow(a,6))*(((2)*(M))+(r))))+(((pow(a,2))*((pow(r,4))*(((70)*(M))+((41)*(r)))))+((pow(a,4))*((r)*(((64)*(pow(M,2)))+(((76)*((M)*(r)))+((25)*(pow(r,2))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_683(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[683] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.002371651785714285714285714285714285714285714285714285714285714285714285714285714285714285714285714286"))*((pow(a,-16))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*(((-1)*((a)*((r)*((((184331)*(pow(a,28)))+(((-28)*((pow(a,26))*((((34913)*(M))+((-74709)*(r)))*(r))))+(((-60060)*((pow(a,2))*(((M)+((-11)*(r)))*(pow(r,25)))))+(((45045)*(pow(r,28)))+(((3003)*((pow(a,4))*((pow(r,22))*(((32)*(pow(M,2)))+(((-272)*((M)*(r)))+((1503)*(pow(r,2))))))))+(((7)*((pow(a,24))*((pow(r,2))*(((510560)*(pow(M,2)))+(((-1165264)*((M)*(r)))+((1616205)*(pow(r,2))))))))+(((3432)*((pow(a,6))*((pow(r,19))*(((-48)*(pow(M,3)))+(((352)*((pow(M,2))*(r)))+(((-1499)*((M)*(pow(r,2))))+((5550)*(pow(r,3)))))))))+(((8)*((pow(a,22))*((pow(r,3))*(((-1069168)*(pow(M,3)))+(((2863648)*((pow(M,2))*(r)))+(((-3952639)*((M)*(pow(r,2))))+((4828010)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((2048)*(pow(M,4)))+(((-13312)*((pow(M,3))*(r)))+(((48864)*((pow(M,2))*(pow(r,2))))+(((-139024)*((M)*(pow(r,3))))+((388175)*(pow(r,4))))))))))+(((pow(a,20))*((pow(r,4))*(((13338624)*(pow(M,4)))+(((-41749504)*((pow(M,3))*(r)))+(((65364192)*((pow(M,2))*(pow(r,2))))+(((-75979248)*((M)*(pow(r,3))))+((92766175)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,13))*(((-10240)*(pow(M,5)))+(((59392)*((pow(M,4))*(r)))+(((-193152)*((pow(M,3))*(pow(r,2))))+(((473216)*((pow(M,2))*(pow(r,3))))+(((-1012109)*((M)*(pow(r,4))))+((2274405)*(pow(r,5)))))))))))+(((4)*((pow(a,18))*((pow(r,5))*(((-3278848)*(pow(M,5)))+(((11810816)*((pow(M,4))*(r)))+(((-21385344)*((pow(M,3))*(pow(r,2))))+(((27664768)*((pow(M,2))*(pow(r,3))))+(((-31736873)*((M)*(pow(r,4))))+((41309919)*(pow(r,5)))))))))))+(((pow(a,12))*((pow(r,10))*(((983040)*(pow(M,6)))+(((-5079040)*((pow(M,5))*(r)))+(((14735360)*((pow(M,4))*(pow(r,2))))+(((-31970304)*((pow(M,3))*(pow(r,3))))+(((58817984)*((pow(M,2))*(pow(r,4))))+(((-100892512)*((M)*(pow(r,5))))+((190197105)*(pow(r,6)))))))))))+(((pow(a,16))*((pow(r,6))*(((7405568)*(pow(M,6)))+(((-30244864)*((pow(M,5))*(r)))+(((63907840)*((pow(M,4))*(pow(r,2))))+(((-96982016)*((pow(M,3))*(pow(r,3))))+(((125207104)*((pow(M,2))*(pow(r,4))))+(((-155942752)*((M)*(pow(r,5))))+((224285327)*(pow(r,6)))))))))))+((16)*((pow(a,14))*((pow(r,7))*(((-114688)*(pow(M,7)))+(((524288)*((pow(M,6))*(r)))+(((-1354752)*((pow(M,5))*(pow(r,2))))+(((2621440)*((pow(M,4))*(pow(r,3))))+(((-4268880)*((pow(M,3))*(pow(r,4))))+(((6291456)*((pow(M,2))*(pow(r,5))))+(((-9018009)*((M)*(pow(r,6))))+((14680064)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*(expr[1]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),16))*((expr[2])*(expr[3])))))))))))).cast<double>());
}

void compute_coeffs_684(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[684] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.0004882812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.2182178902359923812660974854156194518564026941318081858384401011384223059784652803144934075949259539"))*((pow(a,-18))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*(((-1)*((a)*((r)*((((7491771)*(pow(a,32)))+(((14549535)*(pow(r,32)))+(((8168160)*((pow(a,2))*((pow(r,29))*((M)+((28)*(r))))))+(((168)*((pow(a,30))*((r)*(((157510)*(M))+((792257)*(r))))))+(((204204)*((pow(a,4))*((pow(r,26))*(((-28)*(pow(M,2)))+(((588)*((M)*(r)))+((8243)*(pow(r,2))))))))+(((420)*((pow(a,28))*((pow(r,2))*(((-117620)*(pow(M,2)))+(((764436)*((M)*(r)))+((2583631)*(pow(r,2))))))))+(((58344)*((pow(a,6))*((pow(r,23))*(((96)*(pow(M,3)))+(((-1320)*((pow(M,2))*(r)))+(((14086)*((M)*(pow(r,2))))+((131945)*(pow(r,3)))))))))+(((240)*((pow(a,26))*((pow(r,3))*(((372432)*(pow(M,3)))+(((-1911372)*((pow(M,2))*(r)))+(((7636856)*((M)*(pow(r,2))))+((22595423)*(pow(r,3)))))))))+(((19448)*((pow(a,8))*((pow(r,20))*(((-320)*(pow(M,4)))+(((3520)*((pow(M,3))*(r)))+(((-24636)*((pow(M,2))*(pow(r,2))))+(((178564)*((M)*(pow(r,3))))+((1258861)*(pow(r,4))))))))))+(((160)*((pow(a,24))*((pow(r,4))*(((-792304)*(pow(M,4)))+(((4001872)*((pow(M,3))*(r)))+(((-12348429)*((pow(M,2))*(pow(r,2))))+(((40749307)*((M)*(pow(r,3))))+((116678261)*(pow(r,4))))))))))+(((3536)*((pow(a,10))*((pow(r,17))*(((2048)*(pow(M,5)))+(((-19200)*((pow(M,4))*(r)))+(((108080)*((pow(M,3))*(pow(r,2))))+(((-515380)*((pow(M,2))*(pow(r,3))))+(((2863500)*((M)*(pow(r,4))))+((16232405)*(pow(r,5)))))))))))+(((8)*((pow(a,22))*((pow(r,5))*(((16310272)*(pow(M,5)))+(((-85992960)*((pow(M,4))*(r)))+(((258329440)*((pow(M,3))*(pow(r,2))))+(((-654045160)*((pow(M,2))*(pow(r,3))))+(((2015958450)*((M)*(pow(r,4))))+((5883650987)*(pow(r,5)))))))))))+(((68)*((pow(a,12))*((pow(r,14))*(((-122880)*(pow(M,6)))+(((1007616)*((pow(M,5))*(r)))+(((-4887040)*((pow(M,4))*(pow(r,2))))+(((18910720)*((pow(M,3))*(pow(r,3))))+(((-69498540)*((pow(M,2))*(pow(r,4))))+(((317063660)*((M)*(pow(r,5))))+((1508658805)*(pow(r,6))))))))))))+(((4)*((pow(a,20))*((pow(r,6))*(((-22732800)*(pow(M,6)))+(((127524864)*((pow(M,5))*(r)))+(((-401768960)*((pow(M,4))*(pow(r,2))))+(((995253760)*((pow(M,3))*(pow(r,3))))+(((-2376235980)*((pow(M,2))*(pow(r,4))))+(((7326968540)*((M)*(pow(r,5))))+((22519960739)*(pow(r,6))))))))))))+(((136)*((pow(a,14))*((pow(r,11))*(((65536)*(pow(M,7)))+(((-475136)*((pow(M,6))*(r)))+(((2064384)*((pow(M,5))*(pow(r,2))))+(((-7027200)*((pow(M,4))*(pow(r,3))))+(((21282240)*((pow(M,3))*(pow(r,4))))+(((-64820112)*((pow(M,2))*(pow(r,5))))+(((254392642)*((M)*(pow(r,6))))+((1048118827)*(pow(r,7)))))))))))))+(((32)*((pow(a,18))*((pow(r,7))*(((1196032)*(pow(M,7)))+(((-7180288)*((pow(M,6))*(r)))+(((24818688)*((pow(M,5))*(pow(r,2))))+(((-66476160)*((pow(M,4))*(pow(r,3))))+(((159363120)*((pow(M,3))*(pow(r,4))))+(((-390116244)*((pow(M,2))*(pow(r,5))))+(((1259282311)*((M)*(pow(r,6))))+((4176789659)*(pow(r,7)))))))))))))+((2)*((pow(a,16))*((pow(r,8))*(((-3670016)*(pow(M,8)))+(((23592960)*((pow(M,7))*(r)))+(((-97550336)*((pow(M,6))*(pow(r,2))))+(((317030400)*((pow(M,5))*(pow(r,3))))+(((-883192320)*((pow(M,4))*(pow(r,4))))+(((2281047552)*((pow(M,3))*(pow(r,5))))+(((-6074455520)*((pow(M,2))*(pow(r,6))))+(((21267402912)*((M)*(pow(r,7))))+((77770708855)*(pow(r,8))))))))))))))))))))))))))))))*((expr[0])*(expr[1]))))))+((765765)*((pow((pow(a,2))+(pow(r,2)),16))*(((pow(a,4))+(((19)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((9)*(M))+((5)*(r))))))))*((expr[2])*(expr[3])))))))))))))).cast<double>());
}
