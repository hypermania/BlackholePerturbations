
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_700(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[700] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0004417782738095238095238095238095238095238095238095238095238095238095238095238095238095238095238095238"))*((pow(a,-17))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((3)*(pow(a,4)))+(((17)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((7)*(M))+((5)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((28672)*(pow(a,28)))+(((765765)*(pow(r,28)))+(((15015)*((pow(a,2))*((pow(r,25))*(((118)*(M))+((655)*(r))))))+(((7)*((pow(a,26))*((r)*(((149806)*(M))+((132247)*(r))))))+(((6006)*((pow(a,4))*((pow(r,22))*(((72)*(pow(M,2)))+(((3468)*((M)*(r)))+((9703)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((59328)*(pow(M,2)))+(((658552)*((M)*(r)))+((463657)*(pow(r,2))))))))+(((2574)*((pow(a,6))*((pow(r,19))*(((-80)*(pow(M,3)))+(((1800)*((pow(M,2))*(r)))+(((43522)*((M)*(pow(r,2))))+((81959)*(pow(r,3)))))))))+(((14)*((pow(a,22))*((pow(r,3))*(((-84816)*(pow(M,3)))+(((762696)*((pow(M,2))*(r)))+(((5858898)*((M)*(pow(r,2))))+((3923063)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((1024)*(pow(M,4)))+(((-13568)*((pow(M,3))*(r)))+(((157056)*((pow(M,2))*(pow(r,2))))+(((2548168)*((M)*(pow(r,3))))+((3640525)*(pow(r,4))))))))))+(((2)*((pow(a,20))*((pow(r,4))*(((550656)*(pow(M,4)))+(((-3648384)*((pow(M,3))*(r)))+(((20843352)*((pow(M,2))*(pow(r,2))))+(((145435028)*((M)*(pow(r,3))))+((98824877)*(pow(r,4))))))))))+(((13)*((pow(a,10))*((pow(r,13))*(((-9216)*(pow(M,5)))+(((90624)*((pow(M,4))*(r)))+(((-624256)*((pow(M,3))*(pow(r,2))))+(((4993728)*((pow(M,2))*(pow(r,3))))+(((61386822)*((M)*(pow(r,4))))+((71149883)*(pow(r,5)))))))))))+(((3)*((pow(a,18))*((pow(r,5))*(((-252928)*(pow(M,5)))+(((1570304)*((pow(M,4))*(r)))+(((-6575488)*((pow(M,3))*(pow(r,2))))+(((32550976)*((pow(M,2))*(pow(r,3))))+(((229764178)*((M)*(pow(r,4))))+((164438589)*(pow(r,5)))))))))))+(((12)*((pow(a,12))*((pow(r,10))*(((8192)*(pow(M,6)))+(((-64512)*((pow(M,5))*(r)))+(((338560)*((pow(M,4))*(pow(r,2))))+(((-1643712)*((pow(M,3))*(pow(r,3))))+(((10337272)*((pow(M,2))*(pow(r,4))))+(((103254396)*((M)*(pow(r,5))))+((101472161)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((327680)*(pow(M,6)))+(((-2052096)*((pow(M,5))*(r)))+(((8263680)*((pow(M,4))*(pow(r,2))))+(((-30803200)*((pow(M,3))*(pow(r,3))))+(((151944000)*((pow(M,2))*(pow(r,4))))+(((1152787440)*((M)*(pow(r,5))))+((893480315)*(pow(r,6)))))))))))+((4)*((pow(a,14))*((pow(r,7))*(((-16384)*(pow(M,7)))+(((106496)*((pow(M,6))*(r)))+(((-486912)*((pow(M,5))*(pow(r,2))))+(((1921280)*((pow(M,4))*(pow(r,3))))+(((-7632400)*((pow(M,3))*(pow(r,4))))+(((40983240)*((pow(M,2))*(pow(r,5))))+(((349391210)*((M)*(pow(r,6))))+((300822095)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),12))*((((17)*(pow(r,7)))+(((3)*((pow(a,6))*(((2)*(M))+(r))))+(((pow(a,2))*((pow(r,4))*(((62)*(M))+((37)*(r)))))+((pow(a,4))*((r)*(((56)*(pow(M,2)))+(((68)*((M)*(r)))+((23)*(pow(r,2))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_701(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[701] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0002208891369047619047619047619047619047619047619047619047619047619047619047619047619047619047619047619"))*((pow(a,-19))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((((3)*(pow(a,4)))+(((17)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((7)*(M))+((5)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((28672)*(pow(a,28)))+(((765765)*(pow(r,28)))+(((15015)*((pow(a,2))*((pow(r,25))*(((118)*(M))+((655)*(r))))))+(((7)*((pow(a,26))*((r)*(((149806)*(M))+((132247)*(r))))))+(((6006)*((pow(a,4))*((pow(r,22))*(((72)*(pow(M,2)))+(((3468)*((M)*(r)))+((9703)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((59328)*(pow(M,2)))+(((658552)*((M)*(r)))+((463657)*(pow(r,2))))))))+(((2574)*((pow(a,6))*((pow(r,19))*(((-80)*(pow(M,3)))+(((1800)*((pow(M,2))*(r)))+(((43522)*((M)*(pow(r,2))))+((81959)*(pow(r,3)))))))))+(((14)*((pow(a,22))*((pow(r,3))*(((-84816)*(pow(M,3)))+(((762696)*((pow(M,2))*(r)))+(((5858898)*((M)*(pow(r,2))))+((3923063)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((1024)*(pow(M,4)))+(((-13568)*((pow(M,3))*(r)))+(((157056)*((pow(M,2))*(pow(r,2))))+(((2548168)*((M)*(pow(r,3))))+((3640525)*(pow(r,4))))))))))+(((2)*((pow(a,20))*((pow(r,4))*(((550656)*(pow(M,4)))+(((-3648384)*((pow(M,3))*(r)))+(((20843352)*((pow(M,2))*(pow(r,2))))+(((145435028)*((M)*(pow(r,3))))+((98824877)*(pow(r,4))))))))))+(((13)*((pow(a,10))*((pow(r,13))*(((-9216)*(pow(M,5)))+(((90624)*((pow(M,4))*(r)))+(((-624256)*((pow(M,3))*(pow(r,2))))+(((4993728)*((pow(M,2))*(pow(r,3))))+(((61386822)*((M)*(pow(r,4))))+((71149883)*(pow(r,5)))))))))))+(((3)*((pow(a,18))*((pow(r,5))*(((-252928)*(pow(M,5)))+(((1570304)*((pow(M,4))*(r)))+(((-6575488)*((pow(M,3))*(pow(r,2))))+(((32550976)*((pow(M,2))*(pow(r,3))))+(((229764178)*((M)*(pow(r,4))))+((164438589)*(pow(r,5)))))))))))+(((12)*((pow(a,12))*((pow(r,10))*(((8192)*(pow(M,6)))+(((-64512)*((pow(M,5))*(r)))+(((338560)*((pow(M,4))*(pow(r,2))))+(((-1643712)*((pow(M,3))*(pow(r,3))))+(((10337272)*((pow(M,2))*(pow(r,4))))+(((103254396)*((M)*(pow(r,5))))+((101472161)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((327680)*(pow(M,6)))+(((-2052096)*((pow(M,5))*(r)))+(((8263680)*((pow(M,4))*(pow(r,2))))+(((-30803200)*((pow(M,3))*(pow(r,3))))+(((151944000)*((pow(M,2))*(pow(r,4))))+(((1152787440)*((M)*(pow(r,5))))+((893480315)*(pow(r,6)))))))))))+((4)*((pow(a,14))*((pow(r,7))*(((-16384)*(pow(M,7)))+(((106496)*((pow(M,6))*(r)))+(((-486912)*((pow(M,5))*(pow(r,2))))+(((1921280)*((pow(M,4))*(pow(r,3))))+(((-7632400)*((pow(M,3))*(pow(r,4))))+(((40983240)*((pow(M,2))*(pow(r,5))))+(((349391210)*((M)*(pow(r,6))))+((300822095)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),12))*((((17)*(pow(r,7)))+(((3)*((pow(a,6))*(((2)*(M))+(r))))+(((pow(a,2))*((pow(r,4))*(((62)*(M))+((37)*(r)))))+((pow(a,4))*((r)*(((56)*(pow(M,2)))+(((68)*((M)*(r)))+((23)*(pow(r,2))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_702(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[702] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.005301339285714285714285714285714285714285714285714285714285714285714285714285714285714285714285714286"))*((pow(a,-18))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((3)*(pow(a,4)))+(((17)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((7)*(M))+((5)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((28672)*(pow(a,28)))+(((765765)*(pow(r,28)))+(((15015)*((pow(a,2))*((pow(r,25))*(((118)*(M))+((655)*(r))))))+(((7)*((pow(a,26))*((r)*(((149806)*(M))+((132247)*(r))))))+(((6006)*((pow(a,4))*((pow(r,22))*(((72)*(pow(M,2)))+(((3468)*((M)*(r)))+((9703)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((59328)*(pow(M,2)))+(((658552)*((M)*(r)))+((463657)*(pow(r,2))))))))+(((2574)*((pow(a,6))*((pow(r,19))*(((-80)*(pow(M,3)))+(((1800)*((pow(M,2))*(r)))+(((43522)*((M)*(pow(r,2))))+((81959)*(pow(r,3)))))))))+(((14)*((pow(a,22))*((pow(r,3))*(((-84816)*(pow(M,3)))+(((762696)*((pow(M,2))*(r)))+(((5858898)*((M)*(pow(r,2))))+((3923063)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((1024)*(pow(M,4)))+(((-13568)*((pow(M,3))*(r)))+(((157056)*((pow(M,2))*(pow(r,2))))+(((2548168)*((M)*(pow(r,3))))+((3640525)*(pow(r,4))))))))))+(((2)*((pow(a,20))*((pow(r,4))*(((550656)*(pow(M,4)))+(((-3648384)*((pow(M,3))*(r)))+(((20843352)*((pow(M,2))*(pow(r,2))))+(((145435028)*((M)*(pow(r,3))))+((98824877)*(pow(r,4))))))))))+(((13)*((pow(a,10))*((pow(r,13))*(((-9216)*(pow(M,5)))+(((90624)*((pow(M,4))*(r)))+(((-624256)*((pow(M,3))*(pow(r,2))))+(((4993728)*((pow(M,2))*(pow(r,3))))+(((61386822)*((M)*(pow(r,4))))+((71149883)*(pow(r,5)))))))))))+(((3)*((pow(a,18))*((pow(r,5))*(((-252928)*(pow(M,5)))+(((1570304)*((pow(M,4))*(r)))+(((-6575488)*((pow(M,3))*(pow(r,2))))+(((32550976)*((pow(M,2))*(pow(r,3))))+(((229764178)*((M)*(pow(r,4))))+((164438589)*(pow(r,5)))))))))))+(((12)*((pow(a,12))*((pow(r,10))*(((8192)*(pow(M,6)))+(((-64512)*((pow(M,5))*(r)))+(((338560)*((pow(M,4))*(pow(r,2))))+(((-1643712)*((pow(M,3))*(pow(r,3))))+(((10337272)*((pow(M,2))*(pow(r,4))))+(((103254396)*((M)*(pow(r,5))))+((101472161)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((327680)*(pow(M,6)))+(((-2052096)*((pow(M,5))*(r)))+(((8263680)*((pow(M,4))*(pow(r,2))))+(((-30803200)*((pow(M,3))*(pow(r,3))))+(((151944000)*((pow(M,2))*(pow(r,4))))+(((1152787440)*((M)*(pow(r,5))))+((893480315)*(pow(r,6)))))))))))+((4)*((pow(a,14))*((pow(r,7))*(((-16384)*(pow(M,7)))+(((106496)*((pow(M,6))*(r)))+(((-486912)*((pow(M,5))*(pow(r,2))))+(((1921280)*((pow(M,4))*(pow(r,3))))+(((-7632400)*((pow(M,3))*(pow(r,4))))+(((40983240)*((pow(M,2))*(pow(r,5))))+(((349391210)*((M)*(pow(r,6))))+((300822095)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),12))*((((17)*(pow(r,7)))+(((3)*((pow(a,6))*(((2)*(M))+(r))))+(((pow(a,2))*((pow(r,4))*(((62)*(M))+((37)*(r)))))+((pow(a,4))*((r)*(((56)*(pow(M,2)))+(((68)*((M)*(r)))+((23)*(pow(r,2))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_703(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[703] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00009765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.4569367667316877130800022987414466712015980069563637348754857854483249993357916564668095534571080084"))*((pow(a,-15))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,4)))+(((-3)*((pow(a,2))*((r)*(((2)*(M))+((21)*(r))))))+((2)*((pow(r,2))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2)))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((528395)*(pow(a,24)))+(((3828825)*(pow(r,24)))+(((150150)*((pow(a,2))*((pow(r,21))*(((50)*(M))+((281)*(r))))))+(((70)*((pow(a,22))*((r)*(((77794)*(M))+((129479)*(r))))))+(((120120)*((pow(a,4))*((pow(r,18))*(((12)*(pow(M,2)))+(((613)*((M)*(r)))+((1763)*(pow(r,2))))))))+(((56)*((pow(a,20))*((pow(r,2))*(((52956)*(pow(M,2)))+(((1025381)*((M)*(r)))+((1170824)*(pow(r,2))))))))+(((4290)*((pow(a,6))*((pow(r,15))*(((-128)*(pow(M,3)))+(((2880)*((pow(M,2))*(r)))+(((75630)*((M)*(pow(r,2))))+((149081)*(pow(r,3)))))))))+(((2)*((pow(a,18))*((pow(r,3))*(((-849024)*(pow(M,3)))+(((10588608)*((pow(M,2))*(r)))+(((135233694)*((M)*(pow(r,2))))+((136600967)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,12))*(((2048)*(pow(M,4)))+(((-27136)*((pow(M,3))*(r)))+(((325632)*((pow(M,2))*(pow(r,2))))+(((5913056)*((M)*(pow(r,3))))+((9040223)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((937984)*(pow(M,4)))+(((-8312320)*((pow(M,3))*(r)))+(((66612480)*((pow(M,2))*(pow(r,2))))+(((750509600)*((M)*(pow(r,3))))+((742326475)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,9))*(((-3072)*(pow(M,5)))+(((30208)*((pow(M,4))*(r)))+(((-222400)*((pow(M,3))*(pow(r,2))))+(((1939488)*((pow(M,2))*(pow(r,3))))+(((27747838)*((M)*(pow(r,4))))+((35376107)*(pow(r,5)))))))))))+(((4)*((pow(a,14))*((pow(r,5))*(((-89088)*(pow(M,5)))+(((715264)*((pow(M,4))*(r)))+(((-4245440)*((pow(M,3))*(pow(r,2))))+(((30144480)*((pow(M,2))*(pow(r,3))))+(((340047350)*((M)*(pow(r,4))))+((349698065)*(pow(r,5)))))))))))+((8)*((pow(a,12))*((pow(r,6))*(((8192)*(pow(M,6)))+(((-64512)*((pow(M,5))*(r)))+(((400128)*((pow(M,4))*(pow(r,2))))+(((-2325120)*((pow(M,3))*(pow(r,3))))+(((17172360)*((pow(M,2))*(pow(r,4))))+(((210477330)*((M)*(pow(r,5))))+((235698955)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),10))*(((pow(a,8))+(((85)*(pow(r,8)))+(((8)*((pow(a,6))*((r)*(((7)*(M))+((4)*(r))))))+(((40)*((pow(a,2))*((pow(r,5))*(((7)*(M))+((5)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((112)*(pow(M,2)))+(((168)*((M)*(r)))+((73)*(pow(r,2))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_704(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[704] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0002441406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.1444960929545185976717396882190295505485154628552263237045631513087932708444785830524452484865754193"))*((pow(a,-17))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,8)))+(((7)*((pow(a,6))*((((6)*(M))+((-5)*(r)))*(r))))+(((26)*((pow(r,6))*(((2)*(pow(M,2)))+(((89)*((M)*(r)))+((-45)*(pow(r,2)))))))+(((-2)*((pow(a,4))*((pow(r,2))*(((70)*(pow(M,2)))+(((709)*((M)*(r)))+((473)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((96)*(pow(M,3)))+(((4328)*((pow(M,2))*(r)))+(((254)*((M)*(pow(r,2))))+((-2079)*(pow(r,3))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((528395)*(pow(a,24)))+(((3828825)*(pow(r,24)))+(((150150)*((pow(a,2))*((pow(r,21))*(((50)*(M))+((281)*(r))))))+(((70)*((pow(a,22))*((r)*(((77794)*(M))+((129479)*(r))))))+(((120120)*((pow(a,4))*((pow(r,18))*(((12)*(pow(M,2)))+(((613)*((M)*(r)))+((1763)*(pow(r,2))))))))+(((56)*((pow(a,20))*((pow(r,2))*(((52956)*(pow(M,2)))+(((1025381)*((M)*(r)))+((1170824)*(pow(r,2))))))))+(((4290)*((pow(a,6))*((pow(r,15))*(((-128)*(pow(M,3)))+(((2880)*((pow(M,2))*(r)))+(((75630)*((M)*(pow(r,2))))+((149081)*(pow(r,3)))))))))+(((2)*((pow(a,18))*((pow(r,3))*(((-849024)*(pow(M,3)))+(((10588608)*((pow(M,2))*(r)))+(((135233694)*((M)*(pow(r,2))))+((136600967)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,12))*(((2048)*(pow(M,4)))+(((-27136)*((pow(M,3))*(r)))+(((325632)*((pow(M,2))*(pow(r,2))))+(((5913056)*((M)*(pow(r,3))))+((9040223)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((937984)*(pow(M,4)))+(((-8312320)*((pow(M,3))*(r)))+(((66612480)*((pow(M,2))*(pow(r,2))))+(((750509600)*((M)*(pow(r,3))))+((742326475)*(pow(r,4)))))))))+(((52)*((pow(a,10))*((pow(r,9))*(((-3072)*(pow(M,5)))+(((30208)*((pow(M,4))*(r)))+(((-222400)*((pow(M,3))*(pow(r,2))))+(((1939488)*((pow(M,2))*(pow(r,3))))+(((27747838)*((M)*(pow(r,4))))+((35376107)*(pow(r,5)))))))))))+(((4)*((pow(a,14))*((pow(r,5))*(((-89088)*(pow(M,5)))+(((715264)*((pow(M,4))*(r)))+(((-4245440)*((pow(M,3))*(pow(r,2))))+(((30144480)*((pow(M,2))*(pow(r,3))))+(((340047350)*((M)*(pow(r,4))))+((349698065)*(pow(r,5)))))))))))+((8)*((pow(a,12))*((pow(r,6))*(((8192)*(pow(M,6)))+(((-64512)*((pow(M,5))*(r)))+(((400128)*((pow(M,4))*(pow(r,2))))+(((-2325120)*((pow(M,3))*(pow(r,3))))+(((17172360)*((pow(M,2))*(pow(r,4))))+(((210477330)*((M)*(pow(r,5))))+((235698955)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((pow((pow(a,2))+(pow(r,2)),10))*(((pow(a,8))+(((85)*(pow(r,8)))+(((8)*((pow(a,6))*((r)*(((7)*(M))+((4)*(r))))))+(((40)*((pow(a,2))*((pow(r,5))*(((7)*(M))+((5)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((112)*(pow(M,2)))+(((168)*((M)*(r)))+((73)*(pow(r,2))))))))))))*(expr[3]))))))))))))))).cast<double>());
}
