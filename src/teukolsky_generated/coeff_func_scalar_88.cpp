
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_440(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[440] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.1015625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-12))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,8))+(((33)*(pow(r,8)))+(((4)*((pow(a,6))*((r)*(((8)*(M))+((5)*(r))))))+(((12)*((pow(a,2))*((pow(r,5))*(((8)*(M))+((7)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((35)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((919)*(pow(a,12)))+(((3465)*(pow(r,12)))+(((420)*((pow(a,2))*((pow(r,9))*(((13)*(M))+((43)*(r))))))+(((12)*((pow(a,10))*((r)*(((391)*(M))+((655)*(r))))))+(((21)*((pow(a,4))*((pow(r,6))*(((32)*(pow(M,2)))+(((1008)*((M)*(r)))+((1833)*(pow(r,2))))))))+(((3)*((pow(a,8))*((pow(r,2))*(((288)*(pow(M,2)))+(((6544)*((M)*(r)))+((8577)*(pow(r,2))))))))+((8)*((pow(a,6))*((pow(r,3))*(((-16)*(pow(M,3)))+(((192)*((pow(M,2))*(r)))+(((3831)*((M)*(pow(r,2))))+((5336)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((105)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,8))+(((33)*(pow(r,8)))+(((4)*((pow(a,6))*((r)*(((8)*(M))+((5)*(r))))))+(((12)*((pow(a,2))*((pow(r,5))*(((8)*(M))+((7)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((35)*(pow(r,2))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_441(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[441] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0009765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("8.582928793055821843613863859562502139548281217014381842790180401788076128396922590299822556559041754"))*((pow(a,-15))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,12))+(((pow(a,10))*((r)*(((29)*(M))+((2)*(r)))))+(((33)*((pow(r,10))*(((2)*(pow(M,2)))+(((41)*((M)*(r)))+((-21)*(pow(r,2)))))))+(((-1)*((pow(a,8))*((pow(r,2))*(((30)*(pow(M,2)))+(((467)*((M)*(r)))+((311)*(pow(r,2))))))))+(((3)*((pow(a,2))*((pow(r,7))*(((64)*(pow(M,3)))+(((1368)*((pow(M,2))*(r)))+(((443)*((M)*(pow(r,2))))+((-786)*(pow(r,3)))))))))+(((-2)*((pow(a,6))*((pow(r,3))*(((64)*(pow(M,3)))+(((92)*((pow(M,2))*(r)))+(((1135)*((M)*(pow(r,2))))+((798)*(pow(r,3)))))))))+((pow(a,4))*((pow(r,4))*(((128)*(pow(M,4)))+(((2880)*((pow(M,3))*(r)))+(((3756)*((pow(M,2))*(pow(r,2))))+(((-1798)*((M)*(pow(r,3))))+((-2949)*(pow(r,4)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((3781)*(pow(a,16)))+(((45045)*(pow(r,16)))+(((60060)*((pow(a,2))*((pow(r,13))*(((2)*(M))+((5)*(r))))))+(((4)*((pow(a,14))*((r)*(((11554)*(M))+((13339)*(r))))))+(((924)*((pow(a,4))*((pow(r,10))*(((84)*(pow(M,2)))+(((696)*((M)*(r)))+((931)*(pow(r,2))))))))+(((12)*((pow(a,12))*((pow(r,2))*(((5828)*(pow(M,2)))+(((28936)*((M)*(r)))+((23759)*(pow(r,2))))))))+(((36)*((pow(a,6))*((pow(r,7))*(((128)*(pow(M,3)))+(((8432)*((pow(M,2))*(r)))+(((39366)*((M)*(pow(r,2))))+((38253)*(pow(r,3)))))))))+(((4)*((pow(a,10))*((pow(r,3))*(((1408)*(pow(M,3)))+(((72048)*((pow(M,2))*(r)))+(((261786)*((M)*(pow(r,2))))+((200653)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((-256)*(pow(M,4)))+(((5120)*((pow(M,3))*(r)))+(((222096)*((pow(M,2))*(pow(r,2))))+(((820160)*((M)*(pow(r,3))))+((669599)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,12))+(((143)*(pow(r,12)))+(((572)*((pow(a,2))*((pow(r,9))*((M)+(r)))))+(((12)*((pow(a,10))*((r)*(((5)*(M))+((3)*(r))))))+(((5)*((pow(a,8))*((pow(r,2))*(pow(((8)*(M))+((7)*(r)),2)))))+(((11)*((pow(a,4))*((pow(r,6))*(pow(((8)*(M))+((9)*(r)),2)))))+((8)*((pow(a,6))*((pow(r,3))*(((32)*(pow(M,3)))+(((128)*((pow(M,2))*(r)))+(((189)*((M)*(pow(r,2))))+((84)*(pow(r,3)))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_442(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[442] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0009765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("8.582928793055821843613863859562502139548281217014381842790180401788076128396922590299822556559041754"))*((pow(a,-13))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,8))+(((33)*(pow(r,8)))+(((4)*((pow(a,6))*((r)*(((8)*(M))+((5)*(r))))))+(((12)*((pow(a,2))*((pow(r,5))*(((8)*(M))+((7)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((35)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((3781)*(pow(a,16)))+(((45045)*(pow(r,16)))+(((60060)*((pow(a,2))*((pow(r,13))*(((2)*(M))+((5)*(r))))))+(((4)*((pow(a,14))*((r)*(((11554)*(M))+((13339)*(r))))))+(((924)*((pow(a,4))*((pow(r,10))*(((84)*(pow(M,2)))+(((696)*((M)*(r)))+((931)*(pow(r,2))))))))+(((12)*((pow(a,12))*((pow(r,2))*(((5828)*(pow(M,2)))+(((28936)*((M)*(r)))+((23759)*(pow(r,2))))))))+(((36)*((pow(a,6))*((pow(r,7))*(((128)*(pow(M,3)))+(((8432)*((pow(M,2))*(r)))+(((39366)*((M)*(pow(r,2))))+((38253)*(pow(r,3)))))))))+(((4)*((pow(a,10))*((pow(r,3))*(((1408)*(pow(M,3)))+(((72048)*((pow(M,2))*(r)))+(((261786)*((M)*(pow(r,2))))+((200653)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((-256)*(pow(M,4)))+(((5120)*((pow(M,3))*(r)))+(((222096)*((pow(M,2))*(pow(r,2))))+(((820160)*((M)*(pow(r,3))))+((669599)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,12))+(((143)*(pow(r,12)))+(((572)*((pow(a,2))*((pow(r,9))*((M)+(r)))))+(((12)*((pow(a,10))*((r)*(((5)*(M))+((3)*(r))))))+(((5)*((pow(a,8))*((pow(r,2))*(pow(((8)*(M))+((7)*(r)),2)))))+(((11)*((pow(a,4))*((pow(r,6))*(pow(((8)*(M))+((9)*(r)),2)))))+((8)*((pow(a,6))*((pow(r,3))*(((32)*(pow(M,3)))+(((128)*((pow(M,2))*(r)))+(((189)*((M)*(pow(r,2))))+((84)*(pow(r,3)))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_443(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[443] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0004882812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("8.582928793055821843613863859562502139548281217014381842790180401788076128396922590299822556559041754"))*((pow(a,-15))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((pow(a,8))+(((33)*(pow(r,8)))+(((4)*((pow(a,6))*((r)*(((8)*(M))+((5)*(r))))))+(((12)*((pow(a,2))*((pow(r,5))*(((8)*(M))+((7)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((35)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((3781)*(pow(a,16)))+(((45045)*(pow(r,16)))+(((60060)*((pow(a,2))*((pow(r,13))*(((2)*(M))+((5)*(r))))))+(((4)*((pow(a,14))*((r)*(((11554)*(M))+((13339)*(r))))))+(((924)*((pow(a,4))*((pow(r,10))*(((84)*(pow(M,2)))+(((696)*((M)*(r)))+((931)*(pow(r,2))))))))+(((12)*((pow(a,12))*((pow(r,2))*(((5828)*(pow(M,2)))+(((28936)*((M)*(r)))+((23759)*(pow(r,2))))))))+(((36)*((pow(a,6))*((pow(r,7))*(((128)*(pow(M,3)))+(((8432)*((pow(M,2))*(r)))+(((39366)*((M)*(pow(r,2))))+((38253)*(pow(r,3)))))))))+(((4)*((pow(a,10))*((pow(r,3))*(((1408)*(pow(M,3)))+(((72048)*((pow(M,2))*(r)))+(((261786)*((M)*(pow(r,2))))+((200653)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((-256)*(pow(M,4)))+(((5120)*((pow(M,3))*(r)))+(((222096)*((pow(M,2))*(pow(r,2))))+(((820160)*((M)*(pow(r,3))))+((669599)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,12))+(((143)*(pow(r,12)))+(((572)*((pow(a,2))*((pow(r,9))*((M)+(r)))))+(((12)*((pow(a,10))*((r)*(((5)*(M))+((3)*(r))))))+(((5)*((pow(a,8))*((pow(r,2))*(pow(((8)*(M))+((7)*(r)),2)))))+(((11)*((pow(a,4))*((pow(r,6))*(pow(((8)*(M))+((9)*(r)),2)))))+((8)*((pow(a,6))*((pow(r,3))*(((32)*(pow(M,3)))+(((128)*((pow(M,2))*(r)))+(((189)*((M)*(pow(r,2))))+((84)*(pow(r,3)))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_444(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[444] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.003906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("8.582928793055821843613863859562502139548281217014381842790180401788076128396922590299822556559041754"))*((pow(a,-14))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,8))+(((33)*(pow(r,8)))+(((4)*((pow(a,6))*((r)*(((8)*(M))+((5)*(r))))))+(((12)*((pow(a,2))*((pow(r,5))*(((8)*(M))+((7)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((35)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((3781)*(pow(a,16)))+(((45045)*(pow(r,16)))+(((60060)*((pow(a,2))*((pow(r,13))*(((2)*(M))+((5)*(r))))))+(((4)*((pow(a,14))*((r)*(((11554)*(M))+((13339)*(r))))))+(((924)*((pow(a,4))*((pow(r,10))*(((84)*(pow(M,2)))+(((696)*((M)*(r)))+((931)*(pow(r,2))))))))+(((12)*((pow(a,12))*((pow(r,2))*(((5828)*(pow(M,2)))+(((28936)*((M)*(r)))+((23759)*(pow(r,2))))))))+(((36)*((pow(a,6))*((pow(r,7))*(((128)*(pow(M,3)))+(((8432)*((pow(M,2))*(r)))+(((39366)*((M)*(pow(r,2))))+((38253)*(pow(r,3)))))))))+(((4)*((pow(a,10))*((pow(r,3))*(((1408)*(pow(M,3)))+(((72048)*((pow(M,2))*(r)))+(((261786)*((M)*(pow(r,2))))+((200653)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((-256)*(pow(M,4)))+(((5120)*((pow(M,3))*(r)))+(((222096)*((pow(M,2))*(pow(r,2))))+(((820160)*((M)*(pow(r,3))))+((669599)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,12))+(((143)*(pow(r,12)))+(((572)*((pow(a,2))*((pow(r,9))*((M)+(r)))))+(((12)*((pow(a,10))*((r)*(((5)*(M))+((3)*(r))))))+(((5)*((pow(a,8))*((pow(r,2))*(pow(((8)*(M))+((7)*(r)),2)))))+(((11)*((pow(a,4))*((pow(r,6))*(pow(((8)*(M))+((9)*(r)),2)))))+((8)*((pow(a,6))*((pow(r,3))*(((32)*(pow(M,3)))+(((128)*((pow(M,2))*(r)))+(((189)*((M)*(pow(r,2))))+((84)*(pow(r,3)))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

}
