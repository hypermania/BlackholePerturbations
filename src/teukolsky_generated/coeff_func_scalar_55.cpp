
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_275(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[275] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0001953125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.2182178902359923812660974854156194518564026941318081858384401011384223059784652803144934075949259539"))*((pow(a,-15))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((3)*(pow(a,10)))+(((3)*((pow(a,8))*((r)*(((15)*(M))+((2)*(r))))))+(((-35)*((pow(r,9))*((M)+((10)*(r)))))+(((-2)*((pow(a,6))*((pow(r,2))*(((8)*(pow(M,2)))+(((194)*((M)*(r)))+((131)*(pow(r,2))))))))+(((-5)*((pow(a,2))*((pow(r,6))*(((16)*(pow(M,2)))+(((180)*((M)*(r)))+((193)*(pow(r,2))))))))+((-2)*((pow(a,4))*((pow(r,3))*(((16)*(pow(M,3)))+(((224)*((pow(M,2))*(r)))+(((649)*((M)*(pow(r,2))))+((440)*(pow(r,3))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-11)*((a)*((((27985)*(pow(a,16)))+(((1322685)*(pow(r,16)))+(((185640)*((pow(a,2))*((pow(r,13))*(((28)*(M))+((43)*(r))))))+(((80)*((pow(a,14))*((r)*(((8141)*(M))+((6869)*(r))))))+(((4368)*((pow(a,4))*((pow(r,10))*(((1521)*(pow(M,2)))+(((5619)*((M)*(r)))+((4694)*(pow(r,2))))))))+(((24)*((pow(a,12))*((pow(r,2))*(((109222)*(pow(M,2)))+(((272042)*((M)*(r)))+((154933)*(pow(r,2))))))))+(((1872)*((pow(a,6))*((pow(r,7))*(((1616)*(pow(M,3)))+(((11772)*((pow(M,2))*(r)))+(((25117)*((M)*(pow(r,2))))+((15534)*(pow(r,3)))))))))+(((8)*((pow(a,10))*((pow(r,3))*(((292256)*(pow(M,3)))+(((1749048)*((pow(M,2))*(r)))+(((3078672)*((M)*(pow(r,2))))+((1578731)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((171776)*(pow(M,4)))+(((2681600)*((pow(M,3))*(r)))+(((13382256)*((pow(M,2))*(pow(r,2))))+(((23212400)*((M)*(pow(r,3))))+((12334541)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((((63)*(pow(a,20)))+(((46189)*(pow(r,20)))+(((1260)*((pow(a,18))*((r)*(((5)*(M))+((3)*(r))))))+(((48620)*((pow(a,2))*((pow(r,17))*(((5)*(M))+((7)*(r))))))+(((105)*((pow(a,16))*((pow(r,2))*(((640)*(pow(M,2)))+(((1120)*((M)*(r)))+((457)*(pow(r,2))))))))+(((715)*((pow(a,4))*((pow(r,14))*(((640)*(pow(M,2)))+(((2080)*((M)*(r)))+((1537)*(pow(r,2))))))))+(((1680)*((pow(a,14))*((pow(r,3))*(((96)*(pow(M,3)))+(((384)*((pow(M,2))*(r)))+(((457)*((M)*(pow(r,2))))+((164)*(pow(r,3)))))))))+(((11440)*((pow(a,6))*((pow(r,11))*(((32)*(pow(M,3)))+(((192)*((pow(M,2))*(r)))+(((339)*((M)*(pow(r,2))))+((178)*(pow(r,3)))))))))+(((110)*((pow(a,8))*((pow(r,8))*(((1024)*(pow(M,4)))+(((11264)*((pow(M,3))*(r)))+(((38976)*((pow(M,2))*(pow(r,2))))+(((50864)*((M)*(pow(r,3))))+((21631)*(pow(r,4))))))))))+(((30)*((pow(a,12))*((pow(r,4))*(((3072)*(pow(M,4)))+(((27648)*((pow(M,3))*(r)))+(((78528)*((pow(M,2))*(pow(r,2))))+(((84528)*((M)*(pow(r,3))))+((29837)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((25600)*((pow(M,4))*(r)))+(((192640)*((pow(M,3))*(pow(r,2))))+(((540800)*((pow(M,2))*(pow(r,3))))+(((605045)*((M)*(pow(r,4))))+((226469)*(pow(r,5)))))))))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_276(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[276] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0001953125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.2182178902359923812660974854156194518564026941318081858384401011384223059784652803144934075949259539"))*((pow(a,-13))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((3)*(pow(a,8)))+(((35)*(pow(r,8)))+(((12)*((pow(a,6))*((r)*(((4)*(M))+((3)*(r))))))+(((20)*((pow(a,2))*((pow(r,5))*(((4)*(M))+((5)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((16)*(pow(M,2)))+(((64)*((M)*(r)))+((49)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-11)*((a)*((((27985)*(pow(a,16)))+(((1322685)*(pow(r,16)))+(((185640)*((pow(a,2))*((pow(r,13))*(((28)*(M))+((43)*(r))))))+(((80)*((pow(a,14))*((r)*(((8141)*(M))+((6869)*(r))))))+(((4368)*((pow(a,4))*((pow(r,10))*(((1521)*(pow(M,2)))+(((5619)*((M)*(r)))+((4694)*(pow(r,2))))))))+(((24)*((pow(a,12))*((pow(r,2))*(((109222)*(pow(M,2)))+(((272042)*((M)*(r)))+((154933)*(pow(r,2))))))))+(((1872)*((pow(a,6))*((pow(r,7))*(((1616)*(pow(M,3)))+(((11772)*((pow(M,2))*(r)))+(((25117)*((M)*(pow(r,2))))+((15534)*(pow(r,3)))))))))+(((8)*((pow(a,10))*((pow(r,3))*(((292256)*(pow(M,3)))+(((1749048)*((pow(M,2))*(r)))+(((3078672)*((M)*(pow(r,2))))+((1578731)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((171776)*(pow(M,4)))+(((2681600)*((pow(M,3))*(r)))+(((13382256)*((pow(M,2))*(pow(r,2))))+(((23212400)*((M)*(pow(r,3))))+((12334541)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((((63)*(pow(a,20)))+(((46189)*(pow(r,20)))+(((1260)*((pow(a,18))*((r)*(((5)*(M))+((3)*(r))))))+(((48620)*((pow(a,2))*((pow(r,17))*(((5)*(M))+((7)*(r))))))+(((105)*((pow(a,16))*((pow(r,2))*(((640)*(pow(M,2)))+(((1120)*((M)*(r)))+((457)*(pow(r,2))))))))+(((715)*((pow(a,4))*((pow(r,14))*(((640)*(pow(M,2)))+(((2080)*((M)*(r)))+((1537)*(pow(r,2))))))))+(((1680)*((pow(a,14))*((pow(r,3))*(((96)*(pow(M,3)))+(((384)*((pow(M,2))*(r)))+(((457)*((M)*(pow(r,2))))+((164)*(pow(r,3)))))))))+(((11440)*((pow(a,6))*((pow(r,11))*(((32)*(pow(M,3)))+(((192)*((pow(M,2))*(r)))+(((339)*((M)*(pow(r,2))))+((178)*(pow(r,3)))))))))+(((110)*((pow(a,8))*((pow(r,8))*(((1024)*(pow(M,4)))+(((11264)*((pow(M,3))*(r)))+(((38976)*((pow(M,2))*(pow(r,2))))+(((50864)*((M)*(pow(r,3))))+((21631)*(pow(r,4))))))))))+(((30)*((pow(a,12))*((pow(r,4))*(((3072)*(pow(M,4)))+(((27648)*((pow(M,3))*(r)))+(((78528)*((pow(M,2))*(pow(r,2))))+(((84528)*((M)*(pow(r,3))))+((29837)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((25600)*((pow(M,4))*(r)))+(((192640)*((pow(M,3))*(pow(r,2))))+(((540800)*((pow(M,2))*(pow(r,3))))+(((605045)*((M)*(pow(r,4))))+((226469)*(pow(r,5)))))))))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_277(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[277] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00009765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.2182178902359923812660974854156194518564026941318081858384401011384223059784652803144934075949259539"))*((pow(a,-15))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((((3)*(pow(a,8)))+(((35)*(pow(r,8)))+(((12)*((pow(a,6))*((r)*(((4)*(M))+((3)*(r))))))+(((20)*((pow(a,2))*((pow(r,5))*(((4)*(M))+((5)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((16)*(pow(M,2)))+(((64)*((M)*(r)))+((49)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-11)*((a)*((((27985)*(pow(a,16)))+(((1322685)*(pow(r,16)))+(((185640)*((pow(a,2))*((pow(r,13))*(((28)*(M))+((43)*(r))))))+(((80)*((pow(a,14))*((r)*(((8141)*(M))+((6869)*(r))))))+(((4368)*((pow(a,4))*((pow(r,10))*(((1521)*(pow(M,2)))+(((5619)*((M)*(r)))+((4694)*(pow(r,2))))))))+(((24)*((pow(a,12))*((pow(r,2))*(((109222)*(pow(M,2)))+(((272042)*((M)*(r)))+((154933)*(pow(r,2))))))))+(((1872)*((pow(a,6))*((pow(r,7))*(((1616)*(pow(M,3)))+(((11772)*((pow(M,2))*(r)))+(((25117)*((M)*(pow(r,2))))+((15534)*(pow(r,3)))))))))+(((8)*((pow(a,10))*((pow(r,3))*(((292256)*(pow(M,3)))+(((1749048)*((pow(M,2))*(r)))+(((3078672)*((M)*(pow(r,2))))+((1578731)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((171776)*(pow(M,4)))+(((2681600)*((pow(M,3))*(r)))+(((13382256)*((pow(M,2))*(pow(r,2))))+(((23212400)*((M)*(pow(r,3))))+((12334541)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((((63)*(pow(a,20)))+(((46189)*(pow(r,20)))+(((1260)*((pow(a,18))*((r)*(((5)*(M))+((3)*(r))))))+(((48620)*((pow(a,2))*((pow(r,17))*(((5)*(M))+((7)*(r))))))+(((105)*((pow(a,16))*((pow(r,2))*(((640)*(pow(M,2)))+(((1120)*((M)*(r)))+((457)*(pow(r,2))))))))+(((715)*((pow(a,4))*((pow(r,14))*(((640)*(pow(M,2)))+(((2080)*((M)*(r)))+((1537)*(pow(r,2))))))))+(((1680)*((pow(a,14))*((pow(r,3))*(((96)*(pow(M,3)))+(((384)*((pow(M,2))*(r)))+(((457)*((M)*(pow(r,2))))+((164)*(pow(r,3)))))))))+(((11440)*((pow(a,6))*((pow(r,11))*(((32)*(pow(M,3)))+(((192)*((pow(M,2))*(r)))+(((339)*((M)*(pow(r,2))))+((178)*(pow(r,3)))))))))+(((110)*((pow(a,8))*((pow(r,8))*(((1024)*(pow(M,4)))+(((11264)*((pow(M,3))*(r)))+(((38976)*((pow(M,2))*(pow(r,2))))+(((50864)*((M)*(pow(r,3))))+((21631)*(pow(r,4))))))))))+(((30)*((pow(a,12))*((pow(r,4))*(((3072)*(pow(M,4)))+(((27648)*((pow(M,3))*(r)))+(((78528)*((pow(M,2))*(pow(r,2))))+(((84528)*((M)*(pow(r,3))))+((29837)*(pow(r,4))))))))))+((8)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((25600)*((pow(M,4))*(r)))+(((192640)*((pow(M,3))*(pow(r,2))))+(((540800)*((pow(M,2))*(pow(r,3))))+(((605045)*((M)*(pow(r,4))))+((226469)*(pow(r,5)))))))))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_278(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[278] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.7500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-8))*((M)*((r)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((((3)*(pow(a,4)))+(((7)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((5)*(r))))))))*(((-16)*(pow(a,11)))+(((105)*((a)*((((2)*(M))+((-1)*(r)))*(pow(r,9)))))+(((-1)*((pow(a,9))*((r)*(((134)*(M))+((163)*(r))))))+(((10)*((pow(a,3))*((pow(r,6))*(((38)*(pow(M,2)))+(((46)*((M)*(r)))+((-43)*(pow(r,2))))))))+(((-2)*((pow(a,7))*((pow(r,2))*(((-154)*(pow(M,2)))+(((114)*((M)*(r)))+((249)*(pow(r,2))))))))+(((4)*((pow(a,5))*((pow(r,3))*(((12)*(pow(M,3)))+(((172)*((pow(M,2))*(r)))+(((39)*((M)*(pow(r,2))))+((-169)*(pow(r,3)))))))))+((15)*((pow((pow(a,2))+(pow(r,2)),2))*((((3)*(pow(a,4)))+(((7)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((5)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_279(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[279] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.03125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.7464200272921789327684895627734299784925191931283115959083948141392236061114902086988149554958611532"))*((pow(a,-11))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((((3)*(pow(a,4)))+(((7)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((5)*(r))))))))*((expr[0])*(((((128)*(pow(a,13)))+(((3465)*((a)*(pow(r,12))))+(((105)*((pow(a,3))*((pow(r,9))*(((94)*(M))+((151)*(r))))))+(((3)*((pow(a,11))*((r)*(((1186)*(M))+((849)*(r))))))+(((42)*((pow(a,5))*((pow(r,6))*(((156)*(pow(M,2)))+(((784)*((M)*(r)))+((689)*(pow(r,2))))))))+(((3)*((pow(a,9))*((pow(r,2))*(((2024)*(pow(M,2)))+(((6768)*((M)*(r)))+((4111)*(pow(r,2))))))))+((2)*((pow(a,7))*((pow(r,3))*(((160)*(pow(M,3)))+(((6312)*((pow(M,2))*(r)))+(((19902)*((M)*(pow(r,2))))+((13231)*(pow(r,3)))))))))))))))*(expr[0]))+((-105)*((pow((pow(a,2))+(pow(r,2)),2))*((((5)*(pow(a,8)))+(((33)*(pow(r,8)))+(((40)*((pow(a,6))*((r)*((M)+(r)))))+(((24)*((pow(a,2))*((pow(r,5))*(((3)*(M))+((4)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(pow(((4)*(M))+((7)*(r)),2)))))))))*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

}
