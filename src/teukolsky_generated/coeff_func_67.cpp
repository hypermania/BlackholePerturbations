
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_335(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[335] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.3437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-11))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*(((pow(a,4))+(((3)*(pow(r,4)))+((4)*((pow(a,2))*((r)*((M)+(r)))))))*(((32)*(pow(a,15)))+(((315)*((a)*((pow(r,13))*(((-2)*(M))+(r)))))+(((pow(a,13))*((r)*(((430)*(M))+((471)*(r)))))+(((630)*((pow(a,3))*((pow(r,10))*(((-2)*(pow(M,2)))+(((-4)*((M)*(r)))+((3)*(pow(r,2))))))))+(((2)*((pow(a,11))*((pow(r,2))*(((-414)*(pow(M,2)))+(((876)*((M)*(r)))+((1097)*(pow(r,2))))))))+(((-7)*((pow(a,5))*((pow(r,7))*(((32)*(pow(M,3)))+(((672)*((pow(M,2))*(r)))+(((474)*((M)*(pow(r,2))))+((-679)*(pow(r,3)))))))))+(((pow(a,9))*((pow(r,3))*(((-352)*(pow(M,3)))+(((-3840)*((pow(M,2))*(r)))+(((2046)*((M)*(pow(r,2))))+((5021)*(pow(r,3))))))))+(((4)*((pow(a,7))*((pow(r,4))*(((16)*(pow(M,4)))+(((-144)*((pow(M,3))*(r)))+(((-1614)*((pow(M,2))*(pow(r,2))))+(((-176)*((M)*(pow(r,3))))+((1611)*(pow(r,4))))))))))+((-105)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,4))+(((3)*(pow(r,4)))+((4)*((pow(a,2))*((r)*((M)+(r)))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))))))))).cast<double>());
}

void compute_coeffs_336(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[336] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-2.750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-10))*((M)*((r)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*(((pow(a,4))+(((3)*(pow(r,4)))+((4)*((pow(a,2))*((r)*((M)+(r)))))))*((expr[0])*(((((32)*(pow(a,13)))+(((315)*((a)*(pow(r,12))))+(((315)*((pow(a,3))*((pow(r,9))*(((2)*(M))+((5)*(r))))))+(((pow(a,11))*((r)*(((494)*(M))+((439)*(r)))))+(((14)*((pow(a,5))*((pow(r,6))*(((8)*(pow(M,2)))+(((172)*((M)*(r)))+((227)*(pow(r,2))))))))+(((pow(a,9))*((pow(r,2))*(((160)*(pow(M,2)))+(((2136)*((M)*(r)))+((1755)*(pow(r,2)))))))+((pow(a,7))*(((-32)*((pow(M,3))*(pow(r,3))))+(((272)*((pow(M,2))*(pow(r,4))))+(((3420)*((M)*(pow(r,5))))+((3266)*(pow(r,6)))))))))))))*(expr[0]))+((-105)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,4))+(((3)*(pow(r,4)))+((4)*((pow(a,2))*((r)*((M)+(r)))))))*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_337(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[337] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.01562500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.354006400772660060076647261377673391417367347787552137941929265755486133806778782499859600491322813"))*((pow(a,-13))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,8))+(((pow(a,6))*(((M)+((-8)*(r)))*(r)))+(((3)*((pow(r,6))*(((2)*(pow(M,2)))+(((29)*((M)*(r)))+((-15)*(pow(r,2)))))))+(((-1)*((pow(a,4))*((pow(r,2))*(((10)*(pow(M,2)))+(((31)*((M)*(r)))+((60)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((8)*(pow(M,3)))+(((124)*((pow(M,2))*(r)))+(((47)*((M)*(pow(r,2))))+((-96)*(pow(r,3))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((1024)*(pow(a,16)))+(((45045)*(pow(r,16)))+(((1155)*((pow(a,2))*((pow(r,13))*(((122)*(M))+((251)*(r))))))+(((pow(a,14))*((r)*(((37654)*(M))+((27019)*(r)))))+(((21)*((pow(a,4))*((pow(r,10))*(((5256)*(pow(M,2)))+(((35004)*((M)*(r)))+((37889)*(pow(r,2))))))))+(((3)*((pow(a,12))*((pow(r,2))*(((31832)*(pow(M,2)))+(((107140)*((M)*(r)))+((61445)*(pow(r,2))))))))+(((9)*((pow(a,6))*((pow(r,7))*(((960)*(pow(M,3)))+(((47616)*((pow(M,2))*(r)))+(((174250)*((M)*(pow(r,2))))+((134161)*(pow(r,3)))))))))+(((pow(a,10))*((pow(r,3))*(((11200)*(pow(M,3)))+(((398784)*((pow(M,2))*(r)))+(((1050690)*((M)*(pow(r,2))))+((597355)*(pow(r,3))))))))+((pow(a,8))*((pow(r,4))*(((-1280)*(pow(M,4)))+(((19840)*((pow(M,3))*(r)))+(((621456)*((pow(M,2))*(pow(r,2))))+(((1741000)*((M)*(pow(r,3))))+((1095655)*(pow(r,4)))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((r)*((pow((pow(a,2))+(pow(r,2)),4))*((((143)*(pow(r,11)))+(((15)*((pow(a,10))*(((2)*(M))+(r))))+(((11)*((pow(a,2))*((pow(r,8))*(((58)*(M))+((49)*(r))))))+(((5)*((pow(a,8))*((r)*(((64)*(pow(M,2)))+(((88)*((M)*(r)))+((31)*(pow(r,2))))))))+(((2)*((pow(a,4))*((pow(r,5))*(((448)*(pow(M,2)))+(((828)*((M)*(r)))+((387)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((192)*(pow(M,3)))+(((608)*((pow(M,2))*(r)))+(((714)*((M)*(pow(r,2))))+((259)*(pow(r,3))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_338(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[338] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.01562500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.354006400772660060076647261377673391417367347787552137941929265755486133806778782499859600491322813"))*((pow(a,-11))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*(((pow(a,4))+(((3)*(pow(r,4)))+((4)*((pow(a,2))*((r)*((M)+(r)))))))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((1024)*(pow(a,16)))+(((45045)*(pow(r,16)))+(((1155)*((pow(a,2))*((pow(r,13))*(((122)*(M))+((251)*(r))))))+(((pow(a,14))*((r)*(((37654)*(M))+((27019)*(r)))))+(((21)*((pow(a,4))*((pow(r,10))*(((5256)*(pow(M,2)))+(((35004)*((M)*(r)))+((37889)*(pow(r,2))))))))+(((3)*((pow(a,12))*((pow(r,2))*(((31832)*(pow(M,2)))+(((107140)*((M)*(r)))+((61445)*(pow(r,2))))))))+(((9)*((pow(a,6))*((pow(r,7))*(((960)*(pow(M,3)))+(((47616)*((pow(M,2))*(r)))+(((174250)*((M)*(pow(r,2))))+((134161)*(pow(r,3)))))))))+(((pow(a,10))*((pow(r,3))*(((11200)*(pow(M,3)))+(((398784)*((pow(M,2))*(r)))+(((1050690)*((M)*(pow(r,2))))+((597355)*(pow(r,3))))))))+((pow(a,8))*((pow(r,4))*(((-1280)*(pow(M,4)))+(((19840)*((pow(M,3))*(r)))+(((621456)*((pow(M,2))*(pow(r,2))))+(((1741000)*((M)*(pow(r,3))))+((1095655)*(pow(r,4)))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((r)*((pow((pow(a,2))+(pow(r,2)),4))*((((143)*(pow(r,11)))+(((15)*((pow(a,10))*(((2)*(M))+(r))))+(((11)*((pow(a,2))*((pow(r,8))*(((58)*(M))+((49)*(r))))))+(((5)*((pow(a,8))*((r)*(((64)*(pow(M,2)))+(((88)*((M)*(r)))+((31)*(pow(r,2))))))))+(((2)*((pow(a,4))*((pow(r,5))*(((448)*(pow(M,2)))+(((828)*((M)*(r)))+((387)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((192)*(pow(M,3)))+(((608)*((pow(M,2))*(r)))+(((714)*((M)*(pow(r,2))))+((259)*(pow(r,3))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_339(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[339] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.007812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.354006400772660060076647261377673391417367347787552137941929265755486133806778782499859600491322813"))*((pow(a,-13))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*(((pow(a,4))+(((3)*(pow(r,4)))+((4)*((pow(a,2))*((r)*((M)+(r)))))))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((1024)*(pow(a,16)))+(((45045)*(pow(r,16)))+(((1155)*((pow(a,2))*((pow(r,13))*(((122)*(M))+((251)*(r))))))+(((pow(a,14))*((r)*(((37654)*(M))+((27019)*(r)))))+(((21)*((pow(a,4))*((pow(r,10))*(((5256)*(pow(M,2)))+(((35004)*((M)*(r)))+((37889)*(pow(r,2))))))))+(((3)*((pow(a,12))*((pow(r,2))*(((31832)*(pow(M,2)))+(((107140)*((M)*(r)))+((61445)*(pow(r,2))))))))+(((9)*((pow(a,6))*((pow(r,7))*(((960)*(pow(M,3)))+(((47616)*((pow(M,2))*(r)))+(((174250)*((M)*(pow(r,2))))+((134161)*(pow(r,3)))))))))+(((pow(a,10))*((pow(r,3))*(((11200)*(pow(M,3)))+(((398784)*((pow(M,2))*(r)))+(((1050690)*((M)*(pow(r,2))))+((597355)*(pow(r,3))))))))+((pow(a,8))*((pow(r,4))*(((-1280)*(pow(M,4)))+(((19840)*((pow(M,3))*(r)))+(((621456)*((pow(M,2))*(pow(r,2))))+(((1741000)*((M)*(pow(r,3))))+((1095655)*(pow(r,4)))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((315)*((r)*((pow((pow(a,2))+(pow(r,2)),4))*((((143)*(pow(r,11)))+(((15)*((pow(a,10))*(((2)*(M))+(r))))+(((11)*((pow(a,2))*((pow(r,8))*(((58)*(M))+((49)*(r))))))+(((5)*((pow(a,8))*((r)*(((64)*(pow(M,2)))+(((88)*((M)*(r)))+((31)*(pow(r,2))))))))+(((2)*((pow(a,4))*((pow(r,5))*(((448)*(pow(M,2)))+(((828)*((M)*(r)))+((387)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((192)*(pow(M,3)))+(((608)*((pow(M,2))*(r)))+(((714)*((M)*(pow(r,2))))+((259)*(pow(r,3))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}
