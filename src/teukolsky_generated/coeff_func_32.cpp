
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_160(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[160] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-1.750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-6))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-4))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((5)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((3)*(r))))))))*(((-1)*((a)*((r)*(((15)*((pow(r,8))*(((-2)*(M))+(r))))+(((13)*((pow(a,8))*(((2)*(M))+(r))))+(((2)*((pow(a,2))*((pow(r,5))*(((-34)*(pow(M,2)))+(((-26)*((M)*(r)))+((29)*(pow(r,2))))))))+(((4)*((pow(a,4))*((pow(r,2))*(((-4)*(pow(M,3)))+(((-28)*((pow(M,2))*(r)))+(((3)*((M)*(pow(r,2))))+((21)*(pow(r,3)))))))))+((pow(a,6))*(((-44)*((pow(M,2))*(r)))+(((60)*((M)*(pow(r,2))))+((54)*(pow(r,3)))))))))))))+((3)*((pow((pow(a,2))+(pow(r,2)),2))*(((pow(a,4))+(((5)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((3)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_161(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[161] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.01562500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("2.774887385102321589347945789222237274108472863975144603565634712205045241278572813977383515072206303"))*((pow(a,-9))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,8)))+(((pow(a,6))*((r)*(((10)*(M))+((3)*(r)))))+(((10)*((pow(r,6))*(((2)*(pow(M,2)))+(((11)*((M)*(r)))+((-6)*(pow(r,2)))))))+(((-2)*((pow(a,4))*((pow(r,2))*(((22)*(pow(M,2)))+(((43)*((M)*(r)))+((28)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((32)*(pow(M,3)))+(((200)*((pow(M,2))*(r)))+(((6)*((M)*(pow(r,2))))+((-117)*(pow(r,3))))))))))))*((expr[2])*(((a)*((((113)*(pow(a,8)))+(((315)*(pow(r,8)))+(((210)*((pow(a,2))*((pow(r,5))*(((2)*(M))+((5)*(r))))))+(((2)*((pow(a,6))*((r)*(((194)*(M))+((323)*(r))))))+((4)*((pow(a,4))*((pow(r,2))*(((8)*(pow(M,2)))+(((202)*((M)*(r)))+((317)*(pow(r,2))))))))))))*((((pow(r,4))*(((-2)*(M))+(r)))+(((pow(a,4))*(((2)*(M))+(r)))+(((pow(a,2))*(((-4)*((pow(M,2))*(r)))+((2)*(pow(r,3)))))+((pow(expr[0],2))*(pow(expr[1],2))))))*(expr[2]))))+((-30)*((pow((pow(a,2))+(pow(r,2)),2))*(((pow(a,8))+(((21)*(pow(r,8)))+(((56)*((pow(a,2))*((pow(r,5))*((M)+(r)))))+(((8)*((pow(a,6))*((r)*(((3)*(M))+((2)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(pow(((4)*(M))+((5)*(r)),2)))))))))*((expr[0])*((expr[1])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_162(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[162] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.06250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("2.774887385102321589347945789222237274108472863975144603565634712205045241278572813977383515072206303"))*((pow(a,-7))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-4))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((5)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((3)*(r))))))))*((expr[2])*(((((315)*((a)*((pow(r,12))*(((-2)*(M))+(r)))))+(((113)*((pow(a,13))*(((2)*(M))+(r))))+(((420)*((pow(a,3))*((pow(r,9))*(((-5)*(pow(M,2)))+(((-4)*((M)*(r)))+((4)*(pow(r,2))))))))+(((4)*((pow(a,11))*((r)*(((81)*(pow(M,2)))+(((420)*((M)*(r)))+((218)*(pow(r,2))))))))+(((3)*((pow(a,9))*((pow(r,2))*(((-496)*(pow(M,3)))+(((-312)*((pow(M,2))*(r)))+(((1298)*((M)*(pow(r,2))))+((891)*(pow(r,3)))))))))+(((pow(a,5))*((pow(r,6))*(((-1744)*(pow(M,3)))+(((-5784)*((pow(M,2))*(r)))+(((-258)*((M)*(pow(r,2))))+((3683)*(pow(r,3))))))))+((8)*((pow(a,7))*((pow(r,3))*(((-16)*(pow(M,4)))+(((-404)*((pow(M,3))*(r)))+(((-618)*((pow(M,2))*(pow(r,2))))+(((404)*((M)*(pow(r,3))))+((529)*(pow(r,4))))))))))))))))*(expr[2]))+((-15)*((pow((pow(a,2))+(pow(r,2)),2))*(((pow(a,8))+(((21)*(pow(r,8)))+(((56)*((pow(a,2))*((pow(r,5))*((M)+(r)))))+(((8)*((pow(a,6))*((r)*(((3)*(M))+((2)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(pow(((4)*(M))+((5)*(r)),2)))))))))*((expr[0])*((expr[1])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_163(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[163] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.03125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("2.774887385102321589347945789222237274108472863975144603565634712205045241278572813977383515072206303"))*((pow(a,-9))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((pow(a,4))+(((5)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((3)*(r))))))))*(((a)*((r)*(((315)*((pow(r,12))*(((-2)*(M))+(r))))+(((113)*((pow(a,12))*(((2)*(M))+(r))))+(((420)*((pow(a,2))*((pow(r,9))*(((-5)*(pow(M,2)))+(((-4)*((M)*(r)))+((4)*(pow(r,2))))))))+(((4)*((pow(a,10))*((r)*(((81)*(pow(M,2)))+(((420)*((M)*(r)))+((218)*(pow(r,2))))))))+(((3)*((pow(a,8))*((pow(r,2))*(((-496)*(pow(M,3)))+(((-312)*((pow(M,2))*(r)))+(((1298)*((M)*(pow(r,2))))+((891)*(pow(r,3)))))))))+(((pow(a,4))*((pow(r,6))*(((-1744)*(pow(M,3)))+(((-5784)*((pow(M,2))*(r)))+(((-258)*((M)*(pow(r,2))))+((3683)*(pow(r,3))))))))+((8)*((pow(a,6))*((pow(r,3))*(((-16)*(pow(M,4)))+(((-404)*((pow(M,3))*(r)))+(((-618)*((pow(M,2))*(pow(r,2))))+(((404)*((M)*(pow(r,3))))+((529)*(pow(r,4))))))))))))))))))+((-15)*((pow((pow(a,2))+(pow(r,2)),2))*(((pow(a,8))+(((21)*(pow(r,8)))+(((56)*((pow(a,2))*((pow(r,5))*((M)+(r)))))+(((8)*((pow(a,6))*((r)*(((3)*(M))+((2)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(pow(((4)*(M))+((5)*(r)),2)))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_164(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[164] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.1250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("2.774887385102321589347945789222237274108472863975144603565634712205045241278572813977383515072206303"))*((pow(a,-8))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((5)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((3)*(r))))))))*((expr[2])*(((((315)*((a)*((((2)*(M))+((-1)*(r)))*(pow(r,12)))))+(((-113)*((pow(a,13))*(((2)*(M))+(r))))+(((420)*((pow(a,3))*((pow(r,9))*(((5)*(pow(M,2)))+(((4)*((M)*(r)))+((-4)*(pow(r,2))))))))+(((-4)*((pow(a,11))*((r)*(((81)*(pow(M,2)))+(((420)*((M)*(r)))+((218)*(pow(r,2))))))))+(((pow(a,5))*((pow(r,6))*(((1744)*(pow(M,3)))+(((5784)*((pow(M,2))*(r)))+(((258)*((M)*(pow(r,2))))+((-3683)*(pow(r,3))))))))+(((3)*((pow(a,9))*((pow(r,2))*(((496)*(pow(M,3)))+(((312)*((pow(M,2))*(r)))+(((-1298)*((M)*(pow(r,2))))+((-891)*(pow(r,3)))))))))+((8)*((pow(a,7))*((pow(r,3))*(((16)*(pow(M,4)))+(((404)*((pow(M,3))*(r)))+(((618)*((pow(M,2))*(pow(r,2))))+(((-404)*((M)*(pow(r,3))))+((-529)*(pow(r,4))))))))))))))))*(expr[2]))+((15)*((pow((pow(a,2))+(pow(r,2)),2))*(((pow(a,8))+(((21)*(pow(r,8)))+(((56)*((pow(a,2))*((pow(r,5))*((M)+(r)))))+(((8)*((pow(a,6))*((r)*(((3)*(M))+((2)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(pow(((4)*(M))+((5)*(r)),2)))))))))*((expr[0])*((expr[1])*(expr[3]))))))))))))))).cast<double>());
}
