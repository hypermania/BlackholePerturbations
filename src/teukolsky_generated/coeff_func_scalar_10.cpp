
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_50(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[50] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00007440476190476190476190476190476190476190476190476190476190476190476190476190476190476190476190476190"))*((HighPrecisionScalar("2.516611478423583232412228268982039019407398234874460046099542301903573984639270398527484024715841324"))*((pow(a,-11))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*(((pow(a,2))+((-1)*((r)*((M)+(r)))))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[2])*(((a)*((((16384)*(pow(a,16)))+(((3828825)*(pow(r,16)))+(((75075)*((pow(a,2))*((pow(r,13))*(((226)*(M))+((295)*(r))))))+(((pow(a,14))*((r)*(((1145038)*(M))+((703591)*(r)))))+(((15015)*((pow(a,4))*((pow(r,10))*(((1656)*(pow(M,2)))+(((5124)*((M)*(r)))+((3599)*(pow(r,2))))))))+(((3)*((pow(a,12))*((pow(r,2))*(((2563832)*(pow(M,2)))+(((4853908)*((M)*(r)))+((2129753)*(pow(r,2))))))))+(((495)*((pow(a,6))*((pow(r,7))*(((26816)*(pow(M,3)))+(((160704)*((pow(M,2))*(r)))+(((283102)*((M)*(pow(r,2))))+((145251)*(pow(r,3)))))))))+(((pow(a,10))*((pow(r,3))*(((9623872)*(pow(M,3)))+(((45201792)*((pow(M,2))*(r)))+(((62850954)*((M)*(pow(r,2))))+((25680631)*(pow(r,3))))))))+((pow(a,8))*((pow(r,4))*(((1825024)*(pow(M,4)))+(((22897792)*((pow(M,3))*(r)))+(((92193936)*((pow(M,2))*(pow(r,2))))+(((129599848)*((M)*(pow(r,3))))+((56157139)*(pow(r,4)))))))))))))))))*((((pow(r,4))*(((-2)*(M))+(r)))+(((pow(a,4))*(((2)*(M))+(r)))+(((pow(a,2))*(((-4)*((pow(M,2))*(r)))+((2)*(pow(r,3)))))+((pow(expr[0],2))*(pow(expr[1],2))))))*(expr[2]))))+((-630)*((r)*((((12155)*(pow(r,19)))+(((315)*((pow(a,18))*(((2)*(M))+(r))))+(((715)*((pow(a,2))*((pow(r,16))*(((98)*(M))+((121)*(r))))))+(((105)*((pow(a,16))*((r)*(((128)*(pow(M,2)))+(((176)*((M)*(r)))+((59)*(pow(r,2))))))))+(((572)*((pow(a,4))*((pow(r,13))*(((256)*(pow(M,2)))+(((724)*((M)*(r)))+((469)*(pow(r,2))))))))+(((84)*((pow(a,14))*((pow(r,2))*(((576)*(pow(M,3)))+(((1824)*((pow(M,2))*(r)))+(((1762)*((M)*(pow(r,2))))+((527)*(pow(r,3)))))))))+(((44)*((pow(a,6))*((pow(r,10))*(((3008)*(pow(M,3)))+(((15456)*((pow(M,2))*(r)))+(((23550)*((M)*(pow(r,2))))+((10765)*(pow(r,3)))))))))+(((12)*((pow(a,12))*((pow(r,3))*(((3072)*(pow(M,4)))+(((22272)*((pow(M,3))*(r)))+(((51648)*((pow(M,2))*(pow(r,2))))+(((46140)*((M)*(pow(r,3))))+((13765)*(pow(r,4))))))))))+(((2)*((pow(a,8))*((pow(r,7))*(((23552)*(pow(M,4)))+(((217600)*((pow(M,3))*(r)))+(((637248)*((pow(M,2))*(pow(r,2))))+(((710440)*((M)*(pow(r,3))))+((260885)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,4))*(((2048)*(pow(M,5)))+(((41984)*((pow(M,4))*(r)))+(((260864)*((pow(M,3))*(pow(r,2))))+(((610432)*((pow(M,2))*(pow(r,3))))+(((576130)*((M)*(pow(r,4))))+((184405)*(pow(r,5))))))))))))))))))))*((expr[0])*((expr[1])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_51(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[51] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0001488095238095238095238095238095238095238095238095238095238095238095238095238095238095238095238095238"))*((HighPrecisionScalar("2.516611478423583232412228268982039019407398234874460046099542301903573984639270398527484024715841324"))*((pow(a,-9))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((expr[0])*((expr[1])*(((a)*((((16384)*(pow(a,16)))+(((3828825)*(pow(r,16)))+(((75075)*((pow(a,2))*((pow(r,13))*(((226)*(M))+((295)*(r))))))+(((pow(a,14))*((r)*(((1145038)*(M))+((703591)*(r)))))+(((15015)*((pow(a,4))*((pow(r,10))*(((1656)*(pow(M,2)))+(((5124)*((M)*(r)))+((3599)*(pow(r,2))))))))+(((3)*((pow(a,12))*((pow(r,2))*(((2563832)*(pow(M,2)))+(((4853908)*((M)*(r)))+((2129753)*(pow(r,2))))))))+(((495)*((pow(a,6))*((pow(r,7))*(((26816)*(pow(M,3)))+(((160704)*((pow(M,2))*(r)))+(((283102)*((M)*(pow(r,2))))+((145251)*(pow(r,3)))))))))+(((pow(a,10))*((pow(r,3))*(((9623872)*(pow(M,3)))+(((45201792)*((pow(M,2))*(r)))+(((62850954)*((M)*(pow(r,2))))+((25680631)*(pow(r,3))))))))+((pow(a,8))*((pow(r,4))*(((1825024)*(pow(M,4)))+(((22897792)*((pow(M,3))*(r)))+(((92193936)*((pow(M,2))*(pow(r,2))))+(((129599848)*((M)*(pow(r,3))))+((56157139)*(pow(r,4)))))))))))))))))*((expr[0])*(expr[1]))))+((-315)*((((12155)*(pow(r,19)))+(((315)*((pow(a,18))*(((2)*(M))+(r))))+(((715)*((pow(a,2))*((pow(r,16))*(((98)*(M))+((121)*(r))))))+(((105)*((pow(a,16))*((r)*(((128)*(pow(M,2)))+(((176)*((M)*(r)))+((59)*(pow(r,2))))))))+(((572)*((pow(a,4))*((pow(r,13))*(((256)*(pow(M,2)))+(((724)*((M)*(r)))+((469)*(pow(r,2))))))))+(((84)*((pow(a,14))*((pow(r,2))*(((576)*(pow(M,3)))+(((1824)*((pow(M,2))*(r)))+(((1762)*((M)*(pow(r,2))))+((527)*(pow(r,3)))))))))+(((44)*((pow(a,6))*((pow(r,10))*(((3008)*(pow(M,3)))+(((15456)*((pow(M,2))*(r)))+(((23550)*((M)*(pow(r,2))))+((10765)*(pow(r,3)))))))))+(((12)*((pow(a,12))*((pow(r,3))*(((3072)*(pow(M,4)))+(((22272)*((pow(M,3))*(r)))+(((51648)*((pow(M,2))*(pow(r,2))))+(((46140)*((M)*(pow(r,3))))+((13765)*(pow(r,4))))))))))+(((2)*((pow(a,8))*((pow(r,7))*(((23552)*(pow(M,4)))+(((217600)*((pow(M,3))*(r)))+(((637248)*((pow(M,2))*(pow(r,2))))+(((710440)*((M)*(pow(r,3))))+((260885)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,4))*(((2048)*(pow(M,5)))+(((41984)*((pow(M,4))*(r)))+(((260864)*((pow(M,3))*(pow(r,2))))+(((610432)*((pow(M,2))*(pow(r,3))))+(((576130)*((M)*(pow(r,4))))+((184405)*(pow(r,5))))))))))))))))))))*((expr[2])*(expr[3])))))))))))).cast<double>());
}

void compute_coeffs_scalar_52(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[52] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00007440476190476190476190476190476190476190476190476190476190476190476190476190476190476190476190476190"))*((HighPrecisionScalar("2.516611478423583232412228268982039019407398234874460046099542301903573984639270398527484024715841324"))*((pow(a,-11))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*(((-1)*((a)*((((16384)*(pow(a,16)))+(((3828825)*(pow(r,16)))+(((75075)*((pow(a,2))*((pow(r,13))*(((226)*(M))+((295)*(r))))))+(((pow(a,14))*((r)*(((1145038)*(M))+((703591)*(r)))))+(((15015)*((pow(a,4))*((pow(r,10))*(((1656)*(pow(M,2)))+(((5124)*((M)*(r)))+((3599)*(pow(r,2))))))))+(((3)*((pow(a,12))*((pow(r,2))*(((2563832)*(pow(M,2)))+(((4853908)*((M)*(r)))+((2129753)*(pow(r,2))))))))+(((495)*((pow(a,6))*((pow(r,7))*(((26816)*(pow(M,3)))+(((160704)*((pow(M,2))*(r)))+(((283102)*((M)*(pow(r,2))))+((145251)*(pow(r,3)))))))))+(((pow(a,10))*((pow(r,3))*(((9623872)*(pow(M,3)))+(((45201792)*((pow(M,2))*(r)))+(((62850954)*((M)*(pow(r,2))))+((25680631)*(pow(r,3))))))))+((pow(a,8))*((pow(r,4))*(((1825024)*(pow(M,4)))+(((22897792)*((pow(M,3))*(r)))+(((92193936)*((pow(M,2))*(pow(r,2))))+(((129599848)*((M)*(pow(r,3))))+((56157139)*(pow(r,4)))))))))))))))))*((expr[0])*(expr[1])))))+((315)*((((12155)*(pow(r,19)))+(((315)*((pow(a,18))*(((2)*(M))+(r))))+(((715)*((pow(a,2))*((pow(r,16))*(((98)*(M))+((121)*(r))))))+(((105)*((pow(a,16))*((r)*(((128)*(pow(M,2)))+(((176)*((M)*(r)))+((59)*(pow(r,2))))))))+(((572)*((pow(a,4))*((pow(r,13))*(((256)*(pow(M,2)))+(((724)*((M)*(r)))+((469)*(pow(r,2))))))))+(((84)*((pow(a,14))*((pow(r,2))*(((576)*(pow(M,3)))+(((1824)*((pow(M,2))*(r)))+(((1762)*((M)*(pow(r,2))))+((527)*(pow(r,3)))))))))+(((44)*((pow(a,6))*((pow(r,10))*(((3008)*(pow(M,3)))+(((15456)*((pow(M,2))*(r)))+(((23550)*((M)*(pow(r,2))))+((10765)*(pow(r,3)))))))))+(((12)*((pow(a,12))*((pow(r,3))*(((3072)*(pow(M,4)))+(((22272)*((pow(M,3))*(r)))+(((51648)*((pow(M,2))*(pow(r,2))))+(((46140)*((M)*(pow(r,3))))+((13765)*(pow(r,4))))))))))+(((2)*((pow(a,8))*((pow(r,7))*(((23552)*(pow(M,4)))+(((217600)*((pow(M,3))*(r)))+(((637248)*((pow(M,2))*(pow(r,2))))+(((710440)*((M)*(pow(r,3))))+((260885)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,4))*(((2048)*(pow(M,5)))+(((41984)*((pow(M,4))*(r)))+(((260864)*((pow(M,3))*(pow(r,2))))+(((610432)*((pow(M,2))*(pow(r,3))))+(((576130)*((M)*(pow(r,4))))+((184405)*(pow(r,5))))))))))))))))))))*((expr[2])*(expr[3]))))))))))))).cast<double>());
}

void compute_coeffs_scalar_53(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[53] = std::complex<double>(0.0,1.0)*(((6)*((M)*((pow((pow(a,3))+((a)*((r)*(((-2)*(M))+(r)))),-2))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*(((-1)*((a)*((r)*((expr[0])*(expr[1])))))+((pow((pow(a,2))+(pow(r,2)),2))*((expr[2])*(expr[3])))))))))).cast<double>());
}

void compute_coeffs_scalar_54(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[54] = std::complex<double>(0.0,1.0)*(((-1)*((HighPrecisionScalar("1.870828693386970692791874366158274650878009903889363473151872733660017578153469513988404947597189786"))*((pow(a,-4))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-3))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((-1)*((a)*((r)*(((15)*((pow(r,8))*(((-2)*(M))+(r))))+(((13)*((pow(a,8))*(((2)*(M))+(r))))+(((2)*((pow(a,2))*((pow(r,5))*(((-34)*(pow(M,2)))+(((-26)*((M)*(r)))+((29)*(pow(r,2))))))))+(((4)*((pow(a,4))*((pow(r,2))*(((-4)*(pow(M,3)))+(((-28)*((pow(M,2))*(r)))+(((3)*((M)*(pow(r,2))))+((21)*(pow(r,3)))))))))+((pow(a,6))*(((-44)*((pow(M,2))*(r)))+(((60)*((M)*(pow(r,2))))+((54)*(pow(r,3)))))))))))))+((3)*((pow((pow(a,2))+(pow(r,2)),2))*(((pow(a,4))+(((5)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((3)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

}
