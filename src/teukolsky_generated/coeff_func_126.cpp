
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_630(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[630] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.002766927083333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((pow(a,-17))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((((3)*(pow(a,8)))+(((39)*(pow(r,8)))+(((104)*((pow(a,2))*((pow(r,5))*((M)+(r)))))+(((8)*((pow(a,6))*((r)*(((5)*(M))+((4)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((32)*(pow(M,2)))+(((72)*((M)*(r)))+((47)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((2048)*(pow(a,20)))+(((135135)*(pow(r,20)))+(((225225)*((pow(a,2))*((pow(r,17))*(((2)*(M))+((5)*(r))))))+(((pow(a,18))*((r)*(((93898)*(M))+((67429)*(r)))))+(((924)*((pow(a,4))*((pow(r,14))*(((422)*(pow(M,2)))+(((3478)*((M)*(r)))+((4493)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((317672)*(pow(M,2)))+(((1068856)*((M)*(r)))+((594119)*(pow(r,2)))))))+(((132)*((pow(a,6))*((pow(r,11))*(((288)*(pow(M,3)))+(((17292)*((pow(M,2))*(r)))+(((75088)*((M)*(pow(r,2))))+((67297)*(pow(r,3)))))))))+(((4)*((pow(a,14))*((pow(r,3))*(((15008)*(pow(M,3)))+(((499020)*((pow(M,2))*(r)))+(((1224468)*((M)*(pow(r,2))))+((644693)*(pow(r,3)))))))))+(((66)*((pow(a,8))*((pow(r,8))*(((-128)*(pow(M,4)))+(((2560)*((pow(M,3))*(r)))+(((84108)*((pow(M,2))*(pow(r,2))))+(((260788)*((M)*(pow(r,3))))+((184169)*(pow(r,4))))))))))+(((4)*((pow(a,12))*((pow(r,4))*(((-3392)*(pow(M,4)))+(((53248)*((pow(M,3))*(r)))+(((1298742)*((pow(M,2))*(pow(r,2))))+(((3048190)*((M)*(pow(r,3))))+((1662295)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((-11008)*((pow(M,4))*(r)))+(((141952)*((pow(M,3))*(pow(r,2))))+(((3587536)*((pow(M,2))*(pow(r,3))))+(((9166730)*((M)*(pow(r,4))))+((5515819)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((r)*((pow((pow(a,2))+(pow(r,2)),6))*((((39)*(pow(r,11)))+(((3)*((pow(a,10))*(((2)*(M))+(r))))+(((13)*((pow(a,2))*((pow(r,8))*(((14)*(M))+((11)*(r))))))+(((pow(a,8))*((r)*(((80)*(pow(M,2)))+(((104)*((M)*(r)))+((35)*(pow(r,2)))))))+(((2)*((pow(a,4))*((pow(r,5))*(((136)*(pow(M,2)))+(((228)*((M)*(r)))+((99)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((64)*(pow(M,3)))+(((176)*((pow(M,2))*(r)))+(((186)*((M)*(pow(r,2))))+((63)*(pow(r,3))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_631(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[631] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.03320312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-16))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((3)*(pow(a,8)))+(((39)*(pow(r,8)))+(((104)*((pow(a,2))*((pow(r,5))*((M)+(r)))))+(((8)*((pow(a,6))*((r)*(((5)*(M))+((4)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((32)*(pow(M,2)))+(((72)*((M)*(r)))+((47)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((2048)*(pow(a,20)))+(((135135)*(pow(r,20)))+(((225225)*((pow(a,2))*((pow(r,17))*(((2)*(M))+((5)*(r))))))+(((pow(a,18))*((r)*(((93898)*(M))+((67429)*(r)))))+(((924)*((pow(a,4))*((pow(r,14))*(((422)*(pow(M,2)))+(((3478)*((M)*(r)))+((4493)*(pow(r,2))))))))+(((pow(a,16))*((pow(r,2))*(((317672)*(pow(M,2)))+(((1068856)*((M)*(r)))+((594119)*(pow(r,2)))))))+(((132)*((pow(a,6))*((pow(r,11))*(((288)*(pow(M,3)))+(((17292)*((pow(M,2))*(r)))+(((75088)*((M)*(pow(r,2))))+((67297)*(pow(r,3)))))))))+(((4)*((pow(a,14))*((pow(r,3))*(((15008)*(pow(M,3)))+(((499020)*((pow(M,2))*(r)))+(((1224468)*((M)*(pow(r,2))))+((644693)*(pow(r,3)))))))))+(((66)*((pow(a,8))*((pow(r,8))*(((-128)*(pow(M,4)))+(((2560)*((pow(M,3))*(r)))+(((84108)*((pow(M,2))*(pow(r,2))))+(((260788)*((M)*(pow(r,3))))+((184169)*(pow(r,4))))))))))+(((4)*((pow(a,12))*((pow(r,4))*(((-3392)*(pow(M,4)))+(((53248)*((pow(M,3))*(r)))+(((1298742)*((pow(M,2))*(pow(r,2))))+(((3048190)*((M)*(pow(r,3))))+((1662295)*(pow(r,4))))))))))+((2)*((pow(a,10))*((pow(r,5))*(((1024)*(pow(M,5)))+(((-11008)*((pow(M,4))*(r)))+(((141952)*((pow(M,3))*(pow(r,2))))+(((3587536)*((pow(M,2))*(pow(r,3))))+(((9166730)*((M)*(pow(r,4))))+((5515819)*(pow(r,5)))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((3465)*((r)*((pow((pow(a,2))+(pow(r,2)),6))*((((39)*(pow(r,11)))+(((3)*((pow(a,10))*(((2)*(M))+(r))))+(((13)*((pow(a,2))*((pow(r,8))*(((14)*(M))+((11)*(r))))))+(((pow(a,8))*((r)*(((80)*(pow(M,2)))+(((104)*((M)*(r)))+((35)*(pow(r,2)))))))+(((2)*((pow(a,4))*((pow(r,5))*(((136)*(pow(M,2)))+(((228)*((M)*(r)))+((99)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((64)*(pow(M,3)))+(((176)*((pow(M,2))*(r)))+(((186)*((M)*(pow(r,2))))+((63)*(pow(r,3))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_632(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[632] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0002441406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.4668497809239262658154288658817354805205529861927695951606945544754039733437978724410651671423814387"))*((pow(a,-19))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((6)*(pow(a,12)))+(((pow(a,10))*((((62)*(M))+((-119)*(r)))*(r)))+(((78)*((pow(r,10))*(((2)*(pow(M,2)))+(((71)*((M)*(r)))+((-36)*(pow(r,2)))))))+(((-2)*((pow(a,8))*((pow(r,2))*(((50)*(pow(M,2)))+(((959)*((M)*(r)))+((990)*(pow(r,2))))))))+(((13)*((pow(a,2))*((pow(r,7))*(((32)*(pow(M,3)))+(((1168)*((pow(M,2))*(r)))+(((542)*((M)*(pow(r,2))))+((-759)*(pow(r,3)))))))))+(((-2)*((pow(a,6))*((pow(r,3))*(((112)*(pow(M,3)))+(((-520)*((pow(M,2))*(r)))+(((3738)*((M)*(pow(r,2))))+((3915)*(pow(r,3)))))))))+((2)*((pow(a,4))*((pow(r,4))*(((128)*(pow(M,4)))+(((4832)*((pow(M,3))*(r)))+(((7796)*((pow(M,2))*(pow(r,2))))+(((-1994)*((M)*(pow(r,3))))+((-6517)*(pow(r,4))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((49152)*(pow(a,24)))+(((14549535)*(pow(r,24)))+(((255255)*((pow(a,2))*((pow(r,21))*(((254)*(M))+((557)*(r))))))+(((3)*((pow(a,22))*((r)*(((1297118)*(M))+((845167)*(r))))))+(((3003)*((pow(a,4))*((pow(r,18))*(((31256)*(pow(M,2)))+(((184644)*((M)*(r)))+((208839)*(pow(r,2))))))))+(((pow(a,20))*((pow(r,2))*(((29571560)*(pow(M,2)))+(((68485100)*((M)*(r)))+((32039369)*(pow(r,2)))))))+(((429)*((pow(a,6))*((pow(r,15))*(((106688)*(pow(M,3)))+(((1590304)*((pow(M,2))*(r)))+(((4911738)*((M)*(pow(r,2))))+((3838869)*(pow(r,3)))))))))+(((pow(a,18))*((pow(r,3))*(((39568832)*(pow(M,3)))+(((295925728)*((pow(M,2))*(r)))+(((470931594)*((M)*(pow(r,2))))+((196700679)*(pow(r,3))))))))+(((286)*((pow(a,8))*((pow(r,12))*(((8960)*(pow(M,4)))+(((942272)*((pow(M,3))*(r)))+(((7522368)*((pow(M,2))*(pow(r,2))))+(((16344344)*((M)*(pow(r,3))))+((9992189)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((3709440)*(pow(M,4)))+(((244831872)*((pow(M,3))*(r)))+(((1249040576)*((pow(M,2))*(pow(r,2))))+(((1770806352)*((M)*(pow(r,3))))+((722793771)*(pow(r,4)))))))))+(((26)*((pow(a,10))*((pow(r,9))*(((-14336)*(pow(M,5)))+(((430080)*((pow(M,4))*(r)))+(((25383840)*((pow(M,3))*(pow(r,2))))+(((147617680)*((pow(M,2))*(pow(r,3))))+(((257037690)*((M)*(pow(r,4))))+((132179979)*(pow(r,5)))))))))))+(((2)*((pow(a,14))*((pow(r,5))*(((-272384)*(pow(M,5)))+(((6737920)*((pow(M,4))*(r)))+(((314632480)*((pow(M,3))*(pow(r,2))))+(((1467564784)*((pow(M,2))*(pow(r,3))))+(((2072476826)*((M)*(pow(r,4))))+((874023017)*(pow(r,5)))))))))))+((2)*((pow(a,12))*((pow(r,6))*(((28672)*(pow(M,6)))+(((-458752)*((pow(M,5))*(r)))+(((9192960)*((pow(M,4))*(pow(r,2))))+(((430130560)*((pow(M,3))*(pow(r,3))))+(((2113742120)*((pow(M,2))*(pow(r,4))))+(((3203233572)*((M)*(pow(r,5))))+((1459336053)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),6))*((((323)*(pow(r,15)))+(((7)*((pow(a,14))*(((2)*(M))+(r))))+(((17)*((pow(a,2))*((pow(r,12))*(((110)*(M))+((97)*(r))))))+(((7)*((pow(a,12))*((r)*(((48)*(pow(M,2)))+(((60)*((M)*(r)))+((19)*(pow(r,2))))))))+(((3)*((pow(a,4))*((pow(r,9))*(((1296)*(pow(M,2)))+(((2444)*((M)*(r)))+((1157)*(pow(r,2))))))))+(((21)*((pow(a,10))*((pow(r,2))*(((64)*(pow(M,3)))+(((160)*((pow(M,2))*(r)))+(((138)*((M)*(pow(r,2))))+((39)*(pow(r,3)))))))))+(((pow(a,6))*((pow(r,6))*(((3392)*(pow(M,3)))+(((10464)*((pow(M,2))*(r)))+(((11154)*((M)*(pow(r,2))))+((3861)*(pow(r,3))))))))+((pow(a,8))*((pow(r,3))*(((1024)*(pow(M,4)))+(((4736)*((pow(M,3))*(r)))+(((9600)*((pow(M,2))*(pow(r,2))))+(((8184)*((M)*(pow(r,3))))+((2409)*(pow(r,4))))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_633(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[633] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0004882812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.4668497809239262658154288658817354805205529861927695951606945544754039733437978724410651671423814387"))*((pow(a,-17))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((3)*(pow(a,8)))+(((39)*(pow(r,8)))+(((104)*((pow(a,2))*((pow(r,5))*((M)+(r)))))+(((8)*((pow(a,6))*((r)*(((5)*(M))+((4)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((32)*(pow(M,2)))+(((72)*((M)*(r)))+((47)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((49152)*(pow(a,24)))+(((14549535)*(pow(r,24)))+(((255255)*((pow(a,2))*((pow(r,21))*(((254)*(M))+((557)*(r))))))+(((3)*((pow(a,22))*((r)*(((1297118)*(M))+((845167)*(r))))))+(((3003)*((pow(a,4))*((pow(r,18))*(((31256)*(pow(M,2)))+(((184644)*((M)*(r)))+((208839)*(pow(r,2))))))))+(((pow(a,20))*((pow(r,2))*(((29571560)*(pow(M,2)))+(((68485100)*((M)*(r)))+((32039369)*(pow(r,2)))))))+(((429)*((pow(a,6))*((pow(r,15))*(((106688)*(pow(M,3)))+(((1590304)*((pow(M,2))*(r)))+(((4911738)*((M)*(pow(r,2))))+((3838869)*(pow(r,3)))))))))+(((pow(a,18))*((pow(r,3))*(((39568832)*(pow(M,3)))+(((295925728)*((pow(M,2))*(r)))+(((470931594)*((M)*(pow(r,2))))+((196700679)*(pow(r,3))))))))+(((286)*((pow(a,8))*((pow(r,12))*(((8960)*(pow(M,4)))+(((942272)*((pow(M,3))*(r)))+(((7522368)*((pow(M,2))*(pow(r,2))))+(((16344344)*((M)*(pow(r,3))))+((9992189)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((3709440)*(pow(M,4)))+(((244831872)*((pow(M,3))*(r)))+(((1249040576)*((pow(M,2))*(pow(r,2))))+(((1770806352)*((M)*(pow(r,3))))+((722793771)*(pow(r,4)))))))))+(((26)*((pow(a,10))*((pow(r,9))*(((-14336)*(pow(M,5)))+(((430080)*((pow(M,4))*(r)))+(((25383840)*((pow(M,3))*(pow(r,2))))+(((147617680)*((pow(M,2))*(pow(r,3))))+(((257037690)*((M)*(pow(r,4))))+((132179979)*(pow(r,5)))))))))))+(((2)*((pow(a,14))*((pow(r,5))*(((-272384)*(pow(M,5)))+(((6737920)*((pow(M,4))*(r)))+(((314632480)*((pow(M,3))*(pow(r,2))))+(((1467564784)*((pow(M,2))*(pow(r,3))))+(((2072476826)*((M)*(pow(r,4))))+((874023017)*(pow(r,5)))))))))))+((2)*((pow(a,12))*((pow(r,6))*(((28672)*(pow(M,6)))+(((-458752)*((pow(M,5))*(r)))+(((9192960)*((pow(M,4))*(pow(r,2))))+(((430130560)*((pow(M,3))*(pow(r,3))))+(((2113742120)*((pow(M,2))*(pow(r,4))))+(((3203233572)*((M)*(pow(r,5))))+((1459336053)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),6))*((((323)*(pow(r,15)))+(((7)*((pow(a,14))*(((2)*(M))+(r))))+(((17)*((pow(a,2))*((pow(r,12))*(((110)*(M))+((97)*(r))))))+(((7)*((pow(a,12))*((r)*(((48)*(pow(M,2)))+(((60)*((M)*(r)))+((19)*(pow(r,2))))))))+(((3)*((pow(a,4))*((pow(r,9))*(((1296)*(pow(M,2)))+(((2444)*((M)*(r)))+((1157)*(pow(r,2))))))))+(((21)*((pow(a,10))*((pow(r,2))*(((64)*(pow(M,3)))+(((160)*((pow(M,2))*(r)))+(((138)*((M)*(pow(r,2))))+((39)*(pow(r,3)))))))))+(((pow(a,6))*((pow(r,6))*(((3392)*(pow(M,3)))+(((10464)*((pow(M,2))*(r)))+(((11154)*((M)*(pow(r,2))))+((3861)*(pow(r,3))))))))+((pow(a,8))*((pow(r,3))*(((1024)*(pow(M,4)))+(((4736)*((pow(M,3))*(r)))+(((9600)*((pow(M,2))*(pow(r,2))))+(((8184)*((M)*(pow(r,3))))+((2409)*(pow(r,4))))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_634(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[634] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.0002441406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.4668497809239262658154288658817354805205529861927695951606945544754039733437978724410651671423814387"))*((pow(a,-19))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((((3)*(pow(a,8)))+(((39)*(pow(r,8)))+(((104)*((pow(a,2))*((pow(r,5))*((M)+(r)))))+(((8)*((pow(a,6))*((r)*(((5)*(M))+((4)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((32)*(pow(M,2)))+(((72)*((M)*(r)))+((47)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((49152)*(pow(a,24)))+(((14549535)*(pow(r,24)))+(((255255)*((pow(a,2))*((pow(r,21))*(((254)*(M))+((557)*(r))))))+(((3)*((pow(a,22))*((r)*(((1297118)*(M))+((845167)*(r))))))+(((3003)*((pow(a,4))*((pow(r,18))*(((31256)*(pow(M,2)))+(((184644)*((M)*(r)))+((208839)*(pow(r,2))))))))+(((pow(a,20))*((pow(r,2))*(((29571560)*(pow(M,2)))+(((68485100)*((M)*(r)))+((32039369)*(pow(r,2)))))))+(((429)*((pow(a,6))*((pow(r,15))*(((106688)*(pow(M,3)))+(((1590304)*((pow(M,2))*(r)))+(((4911738)*((M)*(pow(r,2))))+((3838869)*(pow(r,3)))))))))+(((pow(a,18))*((pow(r,3))*(((39568832)*(pow(M,3)))+(((295925728)*((pow(M,2))*(r)))+(((470931594)*((M)*(pow(r,2))))+((196700679)*(pow(r,3))))))))+(((286)*((pow(a,8))*((pow(r,12))*(((8960)*(pow(M,4)))+(((942272)*((pow(M,3))*(r)))+(((7522368)*((pow(M,2))*(pow(r,2))))+(((16344344)*((M)*(pow(r,3))))+((9992189)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((3709440)*(pow(M,4)))+(((244831872)*((pow(M,3))*(r)))+(((1249040576)*((pow(M,2))*(pow(r,2))))+(((1770806352)*((M)*(pow(r,3))))+((722793771)*(pow(r,4)))))))))+(((26)*((pow(a,10))*((pow(r,9))*(((-14336)*(pow(M,5)))+(((430080)*((pow(M,4))*(r)))+(((25383840)*((pow(M,3))*(pow(r,2))))+(((147617680)*((pow(M,2))*(pow(r,3))))+(((257037690)*((M)*(pow(r,4))))+((132179979)*(pow(r,5)))))))))))+(((2)*((pow(a,14))*((pow(r,5))*(((-272384)*(pow(M,5)))+(((6737920)*((pow(M,4))*(r)))+(((314632480)*((pow(M,3))*(pow(r,2))))+(((1467564784)*((pow(M,2))*(pow(r,3))))+(((2072476826)*((M)*(pow(r,4))))+((874023017)*(pow(r,5)))))))))))+((2)*((pow(a,12))*((pow(r,6))*(((28672)*(pow(M,6)))+(((-458752)*((pow(M,5))*(r)))+(((9192960)*((pow(M,4))*(pow(r,2))))+(((430130560)*((pow(M,3))*(pow(r,3))))+(((2113742120)*((pow(M,2))*(pow(r,4))))+(((3203233572)*((M)*(pow(r,5))))+((1459336053)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),6))*((((323)*(pow(r,15)))+(((7)*((pow(a,14))*(((2)*(M))+(r))))+(((17)*((pow(a,2))*((pow(r,12))*(((110)*(M))+((97)*(r))))))+(((7)*((pow(a,12))*((r)*(((48)*(pow(M,2)))+(((60)*((M)*(r)))+((19)*(pow(r,2))))))))+(((3)*((pow(a,4))*((pow(r,9))*(((1296)*(pow(M,2)))+(((2444)*((M)*(r)))+((1157)*(pow(r,2))))))))+(((21)*((pow(a,10))*((pow(r,2))*(((64)*(pow(M,3)))+(((160)*((pow(M,2))*(r)))+(((138)*((M)*(pow(r,2))))+((39)*(pow(r,3)))))))))+(((pow(a,6))*((pow(r,6))*(((3392)*(pow(M,3)))+(((10464)*((pow(M,2))*(r)))+(((11154)*((M)*(pow(r,2))))+((3861)*(pow(r,3))))))))+((pow(a,8))*((pow(r,3))*(((1024)*(pow(M,4)))+(((4736)*((pow(M,3))*(r)))+(((9600)*((pow(M,2))*(pow(r,2))))+(((8184)*((M)*(pow(r,3))))+((2409)*(pow(r,4))))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}
