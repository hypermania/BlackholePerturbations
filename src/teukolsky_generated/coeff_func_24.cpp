
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_120(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[120] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.732050807568877293527446341505872366942805253810380628055806979451933016908800037081146186757248576"))*((pow(a,-6))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-4))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((a)*((r)*(((105)*((pow(r,12))*(((-2)*(M))+(r))))+(((81)*((pow(a,12))*(((2)*(M))+(r))))+(((10)*((pow(a,2))*((pow(r,9))*(((-50)*(pow(M,2)))+(((-76)*((M)*(r)))+((61)*(pow(r,2))))))))+(((pow(a,10))*(((-212)*((pow(M,2))*(r)))+(((760)*((M)*(pow(r,2))))+((514)*(pow(r,3))))))+(((pow(a,8))*((pow(r,2))*(((-256)*(pow(M,3)))+(((-1232)*((pow(M,2))*(r)))+(((1178)*((M)*(pow(r,2))))+((1351)*(pow(r,3))))))))+(((pow(a,4))*((pow(r,6))*(((-128)*(pow(M,3)))+(((-1808)*((pow(M,2))*(r)))+(((-746)*((M)*(pow(r,2))))+((1471)*(pow(r,3))))))))+((4)*((pow(a,6))*((pow(r,3))*(((16)*(pow(M,4)))+(((-96)*((pow(M,3))*(r)))+(((-582)*((pow(M,2))*(pow(r,2))))+(((96)*((M)*(pow(r,3))))+((471)*(pow(r,4))))))))))))))))))+((-15)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,4))+(((7)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((3)*(M))+((2)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_121(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[121] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.1250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.9636241116594315332535932579639674980325262928726793824585213934257143886052522082397792738789757164"))*((pow(a,-8))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-5))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[2])*(((((3465)*((a)*((pow(r,16))*(((-2)*(M))+(r)))))+(((919)*((pow(a,17))*(((2)*(M))+(r))))+(((210)*((pow(a,3))*((pow(r,13))*(((-118)*(pow(M,2)))+(((-146)*((M)*(r)))+((119)*(pow(r,2))))))))+(((2)*((pow(a,15))*((r)*(((2854)*(pow(M,2)))+(((10206)*((M)*(r)))+((4849)*(pow(r,2))))))))+(((-42)*((pow(a,5))*((pow(r,10))*(((552)*(pow(M,3)))+(((2712)*((pow(M,2))*(r)))+(((904)*((M)*(pow(r,2))))+((-1859)*(pow(r,3)))))))))+(((2)*((pow(a,13))*((pow(r,2))*(((-8520)*(pow(M,3)))+(((4344)*((pow(M,2))*(r)))+(((39320)*((M)*(pow(r,2))))+((21185)*(pow(r,3)))))))))+(((2)*((pow(a,11))*((pow(r,3))*(((-1856)*(pow(M,4)))+(((-37792)*((pow(M,3))*(r)))+(((-23874)*((pow(M,2))*(pow(r,2))))+(((72130)*((M)*(pow(r,3))))+((51005)*(pow(r,4))))))))))+(((2)*((pow(a,7))*((pow(r,7))*(((-1216)*(pow(M,4)))+(((-43936)*((pow(M,3))*(r)))+(((-100734)*((pow(M,2))*(pow(r,2))))+(((14594)*((M)*(pow(r,3))))+((68867)*(pow(r,4))))))))))+((4)*((pow(a,9))*((pow(r,4))*(((128)*(pow(M,5)))+(((-1536)*((pow(M,4))*(r)))+(((-30808)*((pow(M,3))*(pow(r,2))))+(((-40768)*((pow(M,2))*(pow(r,3))))+(((31905)*((M)*(pow(r,4))))+((37400)*(pow(r,5)))))))))))))))))))*(expr[2]))+((-105)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,8))+(((33)*(pow(r,8)))+(((4)*((pow(a,6))*((r)*(((8)*(M))+((5)*(r))))))+(((12)*((pow(a,2))*((pow(r,5))*(((8)*(M))+((7)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(((32)*(pow(M,2)))+(((64)*((M)*(r)))+((35)*(pow(r,2))))))))))))*((expr[0])*((expr[1])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_122(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[122] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.06250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.6362090102803517839413849090276069782068879633517784735208857226532938823195068186177182207038804752"))*((pow(a,-10))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((a)*((r)*(((-45045)*((((2)*(M))+((-1)*(r)))*(pow(r,20))))+(((3781)*((pow(a,20))*(((2)*(M))+(r))))+(((30030)*((pow(a,2))*((pow(r,17))*(((-14)*(pow(M,2)))+(((-16)*((M)*(r)))+((13)*(pow(r,2))))))))+(((2)*((pow(a,18))*((r)*(((38654)*(pow(M,2)))+(((76464)*((M)*(r)))+((30459)*(pow(r,2))))))))+(((-231)*((pow(a,4))*((pow(r,14))*(((2752)*(pow(M,3)))+(((10432)*((pow(M,2))*(r)))+(((3234)*((M)*(pow(r,2))))+((-6519)*(pow(r,3)))))))))+(((pow(a,16))*((pow(r,2))*(((-44992)*(pow(M,3)))+(((550976)*((pow(M,2))*(r)))+(((1002318)*((M)*(pow(r,2))))+((395601)*(pow(r,3))))))))+(((24)*((pow(a,6))*((pow(r,11))*(((-13320)*(pow(M,4)))+(((-132288)*((pow(M,3))*(r)))+(((-232346)*((pow(M,2))*(pow(r,2))))+(((27912)*((M)*(pow(r,3))))+((141579)*(pow(r,4))))))))))+(((8)*((pow(a,14))*((pow(r,3))*(((-33560)*(pow(M,4)))+(((-100864)*((pow(M,3))*(r)))+(((161186)*((pow(M,2))*(pow(r,2))))+(((410792)*((M)*(pow(r,3))))+((178273)*(pow(r,4))))))))))+(((-2)*((pow(a,8))*((pow(r,8))*(((8704)*(pow(M,5)))+(((617600)*((pow(M,4))*(r)))+(((3191200)*((pow(M,3))*(pow(r,2))))+(((3186976)*((pow(M,2))*(pow(r,3))))+(((-2079934)*((M)*(pow(r,4))))+((-2476829)*(pow(r,5)))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((-11776)*(pow(M,5)))+(((-566400)*((pow(M,4))*(r)))+(((-1709280)*((pow(M,3))*(pow(r,2))))+(((233120)*((pow(M,2))*(pow(r,3))))+(((3095010)*((M)*(pow(r,4))))+((1614765)*(pow(r,5)))))))))))+((4)*((pow(a,10))*((pow(r,5))*(((512)*(pow(M,6)))+(((-10240)*((pow(M,5))*(r)))+(((-444960)*((pow(M,4))*(pow(r,2))))+(((-1624960)*((pow(M,3))*(pow(r,3))))+(((-784150)*((pow(M,2))*(pow(r,4))))+(((1723488)*((M)*(pow(r,5))))+((1214529)*(pow(r,6))))))))))))))))))))))))+((-315)*((pow((pow(a,2))+(pow(r,2)),4))*(((pow(a,12))+(((143)*(pow(r,12)))+(((572)*((pow(a,2))*((pow(r,9))*((M)+(r)))))+(((12)*((pow(a,10))*((r)*(((5)*(M))+((3)*(r))))))+(((5)*((pow(a,8))*((pow(r,2))*(pow(((8)*(M))+((7)*(r)),2)))))+(((11)*((pow(a,4))*((pow(r,6))*(pow(((8)*(M))+((9)*(r)),2)))))+((8)*((pow(a,6))*((pow(r,3))*(((32)*(pow(M,3)))+(((128)*((pow(M,2))*(r)))+(((189)*((M)*(pow(r,2))))+((84)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_123(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[123] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.007812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("0.06579516949597689883839283206077768414537803663074561176102407958962616399158197796671892474784463084"))*((pow(a,-12))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((a)*((r)*(((-14549535)*((((2)*(M))+((-1)*(r)))*(pow(r,24))))+(((368961)*((pow(a,24))*(((2)*(M))+(r))))+(((510510)*((pow(a,2))*((pow(r,21))*(((-326)*(pow(M,2)))+(((-358)*((M)*(r)))+((289)*(pow(r,2))))))))+(((2)*((pow(a,22))*((r)*(((7387018)*(pow(M,2)))+(((11814550)*((M)*(r)))+((4245001)*(pow(r,2))))))))+(((-12012)*((pow(a,4))*((pow(r,18))*(((28468)*(pow(M,3)))+(((95848)*((pow(M,2))*(r)))+(((28831)*((M)*(pow(r,2))))+((-56471)*(pow(r,3)))))))))+(((4)*((pow(a,20))*((pow(r,2))*(((6703876)*(pow(M,3)))+(((46990904)*((pow(M,2))*(r)))+(((57832219)*((M)*(pow(r,2))))+((19113251)*(pow(r,3)))))))))+(((858)*((pow(a,6))*((pow(r,15))*(((-345920)*(pow(M,4)))+(((-2496576)*((pow(M,3))*(r)))+(((-3867078)*((pow(M,2))*(pow(r,2))))+(((390870)*((M)*(pow(r,3))))+((2175729)*(pow(r,4))))))))))+(((2)*((pow(a,18))*((pow(r,3))*(((-38137280)*(pow(M,4)))+(((30987456)*((pow(M,3))*(r)))+(((456214542)*((pow(M,2))*(pow(r,2))))+(((568946910)*((M)*(pow(r,3))))+((190699299)*(pow(r,4))))))))))+(((-11)*((pow(a,8))*((pow(r,12))*(((8470016)*(pow(M,5)))+(((140715520)*((pow(M,4))*(r)))+(((513867968)*((pow(M,3))*(pow(r,2))))+(((450051776)*((pow(M,2))*(pow(r,3))))+(((-256518650)*((M)*(pow(r,4))))+((-310713073)*(pow(r,5)))))))))))+(((pow(a,16))*((pow(r,4))*(((-82848256)*(pow(M,5)))+(((-664768000)*((pow(M,4))*(r)))+(((-524130368)*((pow(M,3))*(pow(r,2))))+(((2202066496)*((pow(M,2))*(pow(r,3))))+(((3338884990)*((M)*(pow(r,4))))+((1210475077)*(pow(r,5))))))))))+(((-4)*((pow(a,10))*((pow(r,9))*(((759808)*(pow(M,6)))+(((90890752)*((pow(M,5))*(r)))+(((824690080)*((pow(M,4))*(pow(r,2))))+(((2018501984)*((pow(M,3))*(pow(r,3))))+(((879009586)*((pow(M,2))*(pow(r,4))))+(((-1552012454)*((M)*(pow(r,5))))+((-1093571531)*(pow(r,6))))))))))))+(((4)*((pow(a,14))*((pow(r,5))*(((-960512)*(pow(M,6)))+(((-85729792)*((pow(M,5))*(r)))+(((-548532320)*((pow(M,4))*(pow(r,2))))+(((-738548064)*((pow(M,3))*(pow(r,3))))+(((637311346)*((pow(M,2))*(pow(r,4))))+(((1573119590)*((M)*(pow(r,5))))+((654581557)*(pow(r,6))))))))))))+((8)*((pow(a,12))*((pow(r,6))*(((28672)*(pow(M,7)))+(((-860160)*((pow(M,6))*(r)))+(((-66307968)*((pow(M,5))*(pow(r,2))))+(((-456665600)*((pow(M,4))*(pow(r,3))))+(((-827058420)*((pow(M,3))*(pow(r,4))))+(((23487072)*((pow(M,2))*(pow(r,5))))+(((974676885)*((M)*(pow(r,6))))+((499849224)*(pow(r,7)))))))))))))))))))))))))))+((-3465)*((pow((pow(a,2))+(pow(r,2)),4))*((((7)*(pow(a,16)))+(((4199)*(pow(r,16)))+(((56)*((pow(a,14))*((r)*(((12)*(M))+((7)*(r))))))+(((1768)*((pow(a,2))*((pow(r,13))*(((12)*(M))+((13)*(r))))))+(((28)*((pow(a,12))*((pow(r,2))*(((240)*(pow(M,2)))+(((384)*((M)*(r)))+((151)*(pow(r,2))))))))+(((52)*((pow(a,4))*((pow(r,10))*(((720)*(pow(M,2)))+(((1728)*((M)*(r)))+((1013)*(pow(r,2))))))))+(((56)*((pow(a,10))*((pow(r,3))*(((256)*(pow(M,3)))+(((864)*((pow(M,2))*(r)))+(((972)*((M)*(pow(r,2))))+((345)*(pow(r,3)))))))))+(((104)*((pow(a,6))*((pow(r,7))*(((256)*(pow(M,3)))+(((1056)*((pow(M,2))*(r)))+(((1452)*((M)*(pow(r,2))))+((627)*(pow(r,3)))))))))+((2)*((pow(a,8))*((pow(r,4))*(((3072)*(pow(M,4)))+(((20480)*((pow(M,3))*(r)))+(((57024)*((pow(M,2))*(pow(r,2))))+(((63360)*((M)*(pow(r,3))))+((23397)*(pow(r,4))))))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_124(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[124] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.1458333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"))*((pow(a,-7))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-4))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,4)))+(((-1)*((pow(a,2))*((r)*(((6)*(M))+(r)))))+((2)*((pow(r,2))*(((2)*(pow(M,2)))+(((11)*((M)*(r)))+((-6)*(pow(r,2)))))))))*(((a)*((r)*(((15)*((pow(r,12))*(((-2)*(M))+(r))))+(((33)*((pow(a,12))*(((2)*(M))+(r))))+(((-20)*((pow(a,2))*((pow(r,9))*((pow(M,2))+(((8)*((M)*(r)))+((-5)*(pow(r,2))))))))+(((4)*((pow(a,10))*((r)*(((-59)*(pow(M,2)))+(((40)*((M)*(r)))+((43)*(pow(r,2))))))))+(((pow(a,4))*((pow(r,6))*(((16)*(pow(M,3)))+(((-104)*((pow(M,2))*(r)))+(((-338)*((M)*(pow(r,2))))+((283)*(pow(r,3))))))))+(((pow(a,8))*((pow(r,2))*(((272)*(pow(M,3)))+(((-536)*((pow(M,2))*(r)))+(((14)*((M)*(pow(r,2))))+((373)*(pow(r,3))))))))+((16)*((pow(a,6))*((pow(r,3))*(((-8)*(pow(M,4)))+(((18)*((pow(M,3))*(r)))+(((-24)*((pow(M,2))*(pow(r,2))))+(((-18)*((M)*(pow(r,3))))+((27)*(pow(r,4))))))))))))))))))+((-15)*((pow((pow(a,2))+(pow(r,2)),6))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))).cast<double>());
}
