
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_610(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[610] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.001660156250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-17))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((pow(a,4))+(((5)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((3)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((10240)*(pow(a,24)))+(((225225)*(pow(r,24)))+(((15015)*((pow(a,2))*((pow(r,21))*(((34)*(M))+((163)*(r))))))+(((5)*((pow(a,22))*((r)*(((63902)*(M))+((56527)*(r))))))+(((15015)*((pow(a,4))*((pow(r,18))*(((8)*(pow(M,2)))+(((332)*((M)*(r)))+((805)*(pow(r,2))))))))+(((5)*((pow(a,20))*((pow(r,2))*(((61208)*(pow(M,2)))+(((700228)*((M)*(r)))+((501931)*(pow(r,2))))))))+(((429)*((pow(a,6))*((pow(r,15))*(((-128)*(pow(M,3)))+(((2432)*((pow(M,2))*(r)))+(((50934)*((M)*(pow(r,2))))+((83491)*(pow(r,3)))))))))+(((pow(a,18))*((pow(r,3))*(((-235648)*(pow(M,3)))+(((2094848)*((pow(M,2))*(r)))+(((16955574)*((M)*(pow(r,2))))+((11774969)*(pow(r,3))))))))+(((286)*((pow(a,8))*((pow(r,12))*(((128)*(pow(M,4)))+(((-1408)*((pow(M,3))*(r)))+(((13968)*((pow(M,2))*(pow(r,2))))+(((197864)*((M)*(pow(r,3))))+((247499)*(pow(r,4))))))))))+(((pow(a,16))*((pow(r,4))*(((164608)*(pow(M,4)))+(((-1084672)*((pow(M,3))*(r)))+(((6341728)*((pow(M,2))*(pow(r,2))))+(((48027056)*((M)*(pow(r,3))))+((34616509)*(pow(r,4)))))))))+(((26)*((pow(a,10))*((pow(r,9))*(((-1024)*(pow(M,5)))+(((8192)*((pow(M,4))*(r)))+(((-48320)*((pow(M,3))*(pow(r,2))))+(((339200)*((pow(M,2))*(pow(r,3))))+(((3685670)*((M)*(pow(r,4))))+((3769765)*(pow(r,5)))))))))))+(((2)*((pow(a,14))*((pow(r,5))*(((-37888)*(pow(M,5)))+(((234496)*((pow(M,4))*(r)))+(((-1039040)*((pow(M,3))*(pow(r,2))))+(((5551040)*((pow(M,2))*(pow(r,3))))+(((44204150)*((M)*(pow(r,4))))+((34514975)*(pow(r,5)))))))))))+((2)*((pow(a,12))*((pow(r,6))*(((8192)*(pow(M,6)))+(((-51200)*((pow(M,5))*(r)))+(((240384)*((pow(M,4))*(pow(r,2))))+(((-1068800)*((pow(M,3))*(pow(r,3))))+(((6148360)*((pow(M,2))*(pow(r,4))))+(((55384860)*((M)*(pow(r,5))))+((48566555)*(pow(r,6))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),10))*((((5)*(pow(r,7)))+(((pow(a,6))*(((2)*(M))+(r)))+(((pow(a,2))*((pow(r,4))*(((18)*(M))+((11)*(r)))))+((pow(a,4))*((r)*(((16)*(pow(M,2)))+(((20)*((M)*(r)))+((7)*(pow(r,2))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_611(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[611] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.03320312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-16))*((M)*((r)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*(((pow(a,4))+(((5)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((3)*(r))))))))*((expr[0])*(((((10240)*(pow(a,25)))+(((225225)*((a)*(pow(r,24))))+(((15015)*((pow(a,3))*((pow(r,21))*(((34)*(M))+((163)*(r))))))+(((5)*((pow(a,23))*((r)*(((63902)*(M))+((56527)*(r))))))+(((15015)*((pow(a,5))*((pow(r,18))*(((8)*(pow(M,2)))+(((332)*((M)*(r)))+((805)*(pow(r,2))))))))+(((5)*((pow(a,21))*((pow(r,2))*(((61208)*(pow(M,2)))+(((700228)*((M)*(r)))+((501931)*(pow(r,2))))))))+(((429)*((pow(a,7))*((pow(r,15))*(((-128)*(pow(M,3)))+(((2432)*((pow(M,2))*(r)))+(((50934)*((M)*(pow(r,2))))+((83491)*(pow(r,3)))))))))+(((pow(a,19))*((pow(r,3))*(((-235648)*(pow(M,3)))+(((2094848)*((pow(M,2))*(r)))+(((16955574)*((M)*(pow(r,2))))+((11774969)*(pow(r,3))))))))+(((286)*((pow(a,9))*((pow(r,12))*(((128)*(pow(M,4)))+(((-1408)*((pow(M,3))*(r)))+(((13968)*((pow(M,2))*(pow(r,2))))+(((197864)*((M)*(pow(r,3))))+((247499)*(pow(r,4))))))))))+(((pow(a,17))*((pow(r,4))*(((164608)*(pow(M,4)))+(((-1084672)*((pow(M,3))*(r)))+(((6341728)*((pow(M,2))*(pow(r,2))))+(((48027056)*((M)*(pow(r,3))))+((34616509)*(pow(r,4)))))))))+(((26)*((pow(a,11))*((pow(r,9))*(((-1024)*(pow(M,5)))+(((8192)*((pow(M,4))*(r)))+(((-48320)*((pow(M,3))*(pow(r,2))))+(((339200)*((pow(M,2))*(pow(r,3))))+(((3685670)*((M)*(pow(r,4))))+((3769765)*(pow(r,5)))))))))))+(((2)*((pow(a,15))*((pow(r,5))*(((-37888)*(pow(M,5)))+(((234496)*((pow(M,4))*(r)))+(((-1039040)*((pow(M,3))*(pow(r,2))))+(((5551040)*((pow(M,2))*(pow(r,3))))+(((44204150)*((M)*(pow(r,4))))+((34514975)*(pow(r,5)))))))))))+((2)*((pow(a,13))*((pow(r,6))*(((8192)*(pow(M,6)))+(((-51200)*((pow(M,5))*(r)))+(((240384)*((pow(M,4))*(pow(r,2))))+(((-1068800)*((pow(M,3))*(pow(r,3))))+(((6148360)*((pow(M,2))*(pow(r,4))))+(((55384860)*((M)*(pow(r,5))))+((48566555)*(pow(r,6))))))))))))))))))))))))*(expr[0]))+((-45045)*((pow((pow(a,2))+(pow(r,2)),10))*(((pow(a,4))+(((5)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((3)*(r))))))))*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_612(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[612] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00004882812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("2.915475947422650235437076438772791538260699167442985977225003372433905030998356313832620163226517699"))*((pow(a,-19))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,8)))+(((pow(a,6))*((((10)*(M))+((-33)*(r)))*(r)))+(((10)*((pow(r,6))*(((2)*(pow(M,2)))+(((71)*((M)*(r)))+((-36)*(pow(r,2)))))))+(((-2)*((pow(a,4))*((pow(r,2))*(((22)*(pow(M,2)))+(((127)*((M)*(r)))+((166)*(pow(r,2))))))))+((pow(a,2))*((pow(r,3))*(((32)*(pow(M,3)))+(((1160)*((pow(M,2))*(r)))+(((246)*((M)*(pow(r,2))))+((-657)*(pow(r,3))))))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((114688)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((255255)*((pow(a,2))*((pow(r,25))*(((206)*(M))+((695)*(r))))))+(((7)*((pow(a,26))*((r)*(((1052134)*(M))+((755443)*(r))))))+(((6006)*((pow(a,4))*((pow(r,22))*(((8508)*(pow(M,2)))+(((96552)*((M)*(r)))+((165667)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((1793192)*(pow(M,2)))+(((6001728)*((M)*(r)))+((3224903)*(pow(r,2))))))))+(((2574)*((pow(a,6))*((pow(r,19))*(((2400)*(pow(M,3)))+(((194920)*((pow(M,2))*(r)))+(((1131698)*((M)*(pow(r,2))))+((1320061)*(pow(r,3)))))))))+(((70)*((pow(a,22))*((pow(r,3))*(((186336)*(pow(M,3)))+(((5659080)*((pow(M,2))*(r)))+(((13001370)*((M)*(pow(r,2))))+((6336865)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((-12800)*(pow(M,4)))+(((371200)*((pow(M,3))*(r)))+(((15477720)*((pow(M,2))*(pow(r,2))))+(((61573120)*((M)*(pow(r,3))))+((55100059)*(pow(r,4))))))))))+(((10)*((pow(a,20))*((pow(r,4))*(((-578304)*(pow(M,4)))+(((9278208)*((pow(M,3))*(r)))+(((186197940)*((pow(M,2))*(pow(r,2))))+(((378635800)*((M)*(pow(r,3))))+((180690325)*(pow(r,4))))))))))+(((65)*((pow(a,10))*((pow(r,13))*(((12288)*(pow(M,5)))+(((-199680)*((pow(M,4))*(r)))+(((3086080)*((pow(M,3))*(pow(r,2))))+(((88851264)*((pow(M,2))*(pow(r,3))))+(((274061382)*((M)*(pow(r,4))))+((201488035)*(pow(r,5)))))))))))+(((3)*((pow(a,18))*((pow(r,5))*(((864256)*(pow(M,5)))+(((-9405440)*((pow(M,4))*(r)))+(((96912640)*((pow(M,3))*(pow(r,2))))+(((1719012800)*((pow(M,2))*(pow(r,3))))+(((3424686650)*((M)*(pow(r,4))))+((1673282765)*(pow(r,5)))))))))))+(((60)*((pow(a,12))*((pow(r,10))*(((-6144)*(pow(M,6)))+(((71680)*((pow(M,5))*(r)))+(((-647040)*((pow(M,4))*(pow(r,2))))+(((7262080)*((pow(M,3))*(pow(r,3))))+(((164470188)*((pow(M,2))*(pow(r,4))))+(((422894584)*((M)*(pow(r,5))))+((267435189)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((-827392)*(pow(M,6)))+(((7888896)*((pow(M,5))*(r)))+(((-57438720)*((pow(M,4))*(pow(r,2))))+(((524372480)*((pow(M,3))*(pow(r,3))))+(((9330483600)*((pow(M,2))*(pow(r,4))))+(((19336000320)*((M)*(pow(r,5))))+((9997277465)*(pow(r,6)))))))))))+((4)*((pow(a,14))*((pow(r,7))*(((32768)*(pow(M,7)))+(((-299008)*((pow(M,6))*(r)))+(((2199552)*((pow(M,5))*(pow(r,2))))+(((-15669760)*((pow(M,4))*(pow(r,3))))+(((148851680)*((pow(M,3))*(pow(r,4))))+(((2883128520)*((pow(M,2))*(pow(r,5))))+(((6508958330)*((M)*(pow(r,6))))+((3666576305)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),10))*((((323)*(pow(r,11)))+(((15)*((pow(a,10))*(((2)*(M))+(r))))+(((17)*((pow(a,2))*((pow(r,8))*(((94)*(M))+((67)*(r))))))+(((5)*((pow(a,8))*((r)*(((112)*(pow(M,2)))+(((136)*((M)*(r)))+((43)*(pow(r,2))))))))+(((2)*((pow(a,4))*((pow(r,5))*(((1288)*(pow(M,2)))+(((1908)*((M)*(r)))+((747)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((672)*(pow(M,3)))+(((1568)*((pow(M,2))*(r)))+(((1434)*((M)*(pow(r,2))))+((439)*(pow(r,3))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_613(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[613] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00009765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("2.915475947422650235437076438772791538260699167442985977225003372433905030998356313832620163226517699"))*((pow(a,-17))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((5)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((3)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((114688)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((255255)*((pow(a,2))*((pow(r,25))*(((206)*(M))+((695)*(r))))))+(((7)*((pow(a,26))*((r)*(((1052134)*(M))+((755443)*(r))))))+(((6006)*((pow(a,4))*((pow(r,22))*(((8508)*(pow(M,2)))+(((96552)*((M)*(r)))+((165667)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((1793192)*(pow(M,2)))+(((6001728)*((M)*(r)))+((3224903)*(pow(r,2))))))))+(((2574)*((pow(a,6))*((pow(r,19))*(((2400)*(pow(M,3)))+(((194920)*((pow(M,2))*(r)))+(((1131698)*((M)*(pow(r,2))))+((1320061)*(pow(r,3)))))))))+(((70)*((pow(a,22))*((pow(r,3))*(((186336)*(pow(M,3)))+(((5659080)*((pow(M,2))*(r)))+(((13001370)*((M)*(pow(r,2))))+((6336865)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((-12800)*(pow(M,4)))+(((371200)*((pow(M,3))*(r)))+(((15477720)*((pow(M,2))*(pow(r,2))))+(((61573120)*((M)*(pow(r,3))))+((55100059)*(pow(r,4))))))))))+(((10)*((pow(a,20))*((pow(r,4))*(((-578304)*(pow(M,4)))+(((9278208)*((pow(M,3))*(r)))+(((186197940)*((pow(M,2))*(pow(r,2))))+(((378635800)*((M)*(pow(r,3))))+((180690325)*(pow(r,4))))))))))+(((65)*((pow(a,10))*((pow(r,13))*(((12288)*(pow(M,5)))+(((-199680)*((pow(M,4))*(r)))+(((3086080)*((pow(M,3))*(pow(r,2))))+(((88851264)*((pow(M,2))*(pow(r,3))))+(((274061382)*((M)*(pow(r,4))))+((201488035)*(pow(r,5)))))))))))+(((3)*((pow(a,18))*((pow(r,5))*(((864256)*(pow(M,5)))+(((-9405440)*((pow(M,4))*(r)))+(((96912640)*((pow(M,3))*(pow(r,2))))+(((1719012800)*((pow(M,2))*(pow(r,3))))+(((3424686650)*((M)*(pow(r,4))))+((1673282765)*(pow(r,5)))))))))))+(((60)*((pow(a,12))*((pow(r,10))*(((-6144)*(pow(M,6)))+(((71680)*((pow(M,5))*(r)))+(((-647040)*((pow(M,4))*(pow(r,2))))+(((7262080)*((pow(M,3))*(pow(r,3))))+(((164470188)*((pow(M,2))*(pow(r,4))))+(((422894584)*((M)*(pow(r,5))))+((267435189)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((-827392)*(pow(M,6)))+(((7888896)*((pow(M,5))*(r)))+(((-57438720)*((pow(M,4))*(pow(r,2))))+(((524372480)*((pow(M,3))*(pow(r,3))))+(((9330483600)*((pow(M,2))*(pow(r,4))))+(((19336000320)*((M)*(pow(r,5))))+((9997277465)*(pow(r,6)))))))))))+((4)*((pow(a,14))*((pow(r,7))*(((32768)*(pow(M,7)))+(((-299008)*((pow(M,6))*(r)))+(((2199552)*((pow(M,5))*(pow(r,2))))+(((-15669760)*((pow(M,4))*(pow(r,3))))+(((148851680)*((pow(M,3))*(pow(r,4))))+(((2883128520)*((pow(M,2))*(pow(r,5))))+(((6508958330)*((M)*(pow(r,6))))+((3666576305)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),10))*((((323)*(pow(r,11)))+(((15)*((pow(a,10))*(((2)*(M))+(r))))+(((17)*((pow(a,2))*((pow(r,8))*(((94)*(M))+((67)*(r))))))+(((5)*((pow(a,8))*((r)*(((112)*(pow(M,2)))+(((136)*((M)*(r)))+((43)*(pow(r,2))))))))+(((2)*((pow(a,4))*((pow(r,5))*(((1288)*(pow(M,2)))+(((1908)*((M)*(r)))+((747)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((672)*(pow(M,3)))+(((1568)*((pow(M,2))*(r)))+(((1434)*((M)*(pow(r,2))))+((439)*(pow(r,3))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}

void compute_coeffs_614(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[614] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.00004882812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("2.915475947422650235437076438772791538260699167442985977225003372433905030998356313832620163226517699"))*((pow(a,-19))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-10))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((pow(a,4))+(((5)*(pow(r,4)))+((2)*((pow(a,2))*((r)*(((4)*(M))+((3)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((114688)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((255255)*((pow(a,2))*((pow(r,25))*(((206)*(M))+((695)*(r))))))+(((7)*((pow(a,26))*((r)*(((1052134)*(M))+((755443)*(r))))))+(((6006)*((pow(a,4))*((pow(r,22))*(((8508)*(pow(M,2)))+(((96552)*((M)*(r)))+((165667)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((1793192)*(pow(M,2)))+(((6001728)*((M)*(r)))+((3224903)*(pow(r,2))))))))+(((2574)*((pow(a,6))*((pow(r,19))*(((2400)*(pow(M,3)))+(((194920)*((pow(M,2))*(r)))+(((1131698)*((M)*(pow(r,2))))+((1320061)*(pow(r,3)))))))))+(((70)*((pow(a,22))*((pow(r,3))*(((186336)*(pow(M,3)))+(((5659080)*((pow(M,2))*(r)))+(((13001370)*((M)*(pow(r,2))))+((6336865)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((-12800)*(pow(M,4)))+(((371200)*((pow(M,3))*(r)))+(((15477720)*((pow(M,2))*(pow(r,2))))+(((61573120)*((M)*(pow(r,3))))+((55100059)*(pow(r,4))))))))))+(((10)*((pow(a,20))*((pow(r,4))*(((-578304)*(pow(M,4)))+(((9278208)*((pow(M,3))*(r)))+(((186197940)*((pow(M,2))*(pow(r,2))))+(((378635800)*((M)*(pow(r,3))))+((180690325)*(pow(r,4))))))))))+(((65)*((pow(a,10))*((pow(r,13))*(((12288)*(pow(M,5)))+(((-199680)*((pow(M,4))*(r)))+(((3086080)*((pow(M,3))*(pow(r,2))))+(((88851264)*((pow(M,2))*(pow(r,3))))+(((274061382)*((M)*(pow(r,4))))+((201488035)*(pow(r,5)))))))))))+(((3)*((pow(a,18))*((pow(r,5))*(((864256)*(pow(M,5)))+(((-9405440)*((pow(M,4))*(r)))+(((96912640)*((pow(M,3))*(pow(r,2))))+(((1719012800)*((pow(M,2))*(pow(r,3))))+(((3424686650)*((M)*(pow(r,4))))+((1673282765)*(pow(r,5)))))))))))+(((60)*((pow(a,12))*((pow(r,10))*(((-6144)*(pow(M,6)))+(((71680)*((pow(M,5))*(r)))+(((-647040)*((pow(M,4))*(pow(r,2))))+(((7262080)*((pow(M,3))*(pow(r,3))))+(((164470188)*((pow(M,2))*(pow(r,4))))+(((422894584)*((M)*(pow(r,5))))+((267435189)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((-827392)*(pow(M,6)))+(((7888896)*((pow(M,5))*(r)))+(((-57438720)*((pow(M,4))*(pow(r,2))))+(((524372480)*((pow(M,3))*(pow(r,3))))+(((9330483600)*((pow(M,2))*(pow(r,4))))+(((19336000320)*((M)*(pow(r,5))))+((9997277465)*(pow(r,6)))))))))))+((4)*((pow(a,14))*((pow(r,7))*(((32768)*(pow(M,7)))+(((-299008)*((pow(M,6))*(r)))+(((2199552)*((pow(M,5))*(pow(r,2))))+(((-15669760)*((pow(M,4))*(pow(r,3))))+(((148851680)*((pow(M,3))*(pow(r,4))))+(((2883128520)*((pow(M,2))*(pow(r,5))))+(((6508958330)*((M)*(pow(r,6))))+((3666576305)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),10))*((((323)*(pow(r,11)))+(((15)*((pow(a,10))*(((2)*(M))+(r))))+(((17)*((pow(a,2))*((pow(r,8))*(((94)*(M))+((67)*(r))))))+(((5)*((pow(a,8))*((r)*(((112)*(pow(M,2)))+(((136)*((M)*(r)))+((43)*(pow(r,2))))))))+(((2)*((pow(a,4))*((pow(r,5))*(((1288)*(pow(M,2)))+(((1908)*((M)*(r)))+((747)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((672)*(pow(M,3)))+(((1568)*((pow(M,2))*(r)))+(((1434)*((M)*(pow(r,2))))+((439)*(pow(r,3))))))))))))))*(expr[3])))))))))))))))).cast<double>());
}
