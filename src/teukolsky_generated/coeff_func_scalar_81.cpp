
#include "../teukolsky.hpp"

namespace Teukolsky {

void compute_coeffs_scalar_405(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[405] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00009765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-17))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,4)))+(((-3)*((pow(a,2))*((r)*(((2)*(M))+((5)*(r))))))+((2)*((pow(r,2))*(((2)*(pow(M,2)))+(((41)*((M)*(r)))+((-21)*(pow(r,2)))))))))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((114688)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((255255)*((pow(a,2))*((pow(r,25))*(((206)*(M))+((695)*(r))))))+(((7)*((pow(a,26))*((r)*(((1052134)*(M))+((755443)*(r))))))+(((6006)*((pow(a,4))*((pow(r,22))*(((8508)*(pow(M,2)))+(((96552)*((M)*(r)))+((165667)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((1793192)*(pow(M,2)))+(((6001728)*((M)*(r)))+((3224903)*(pow(r,2))))))))+(((2574)*((pow(a,6))*((pow(r,19))*(((2400)*(pow(M,3)))+(((194920)*((pow(M,2))*(r)))+(((1131698)*((M)*(pow(r,2))))+((1320061)*(pow(r,3)))))))))+(((70)*((pow(a,22))*((pow(r,3))*(((186336)*(pow(M,3)))+(((5659080)*((pow(M,2))*(r)))+(((13001370)*((M)*(pow(r,2))))+((6336865)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((-12800)*(pow(M,4)))+(((371200)*((pow(M,3))*(r)))+(((15477720)*((pow(M,2))*(pow(r,2))))+(((61573120)*((M)*(pow(r,3))))+((55100059)*(pow(r,4))))))))))+(((10)*((pow(a,20))*((pow(r,4))*(((-578304)*(pow(M,4)))+(((9278208)*((pow(M,3))*(r)))+(((186197940)*((pow(M,2))*(pow(r,2))))+(((378635800)*((M)*(pow(r,3))))+((180690325)*(pow(r,4))))))))))+(((65)*((pow(a,10))*((pow(r,13))*(((12288)*(pow(M,5)))+(((-199680)*((pow(M,4))*(r)))+(((3086080)*((pow(M,3))*(pow(r,2))))+(((88851264)*((pow(M,2))*(pow(r,3))))+(((274061382)*((M)*(pow(r,4))))+((201488035)*(pow(r,5)))))))))))+(((3)*((pow(a,18))*((pow(r,5))*(((864256)*(pow(M,5)))+(((-9405440)*((pow(M,4))*(r)))+(((96912640)*((pow(M,3))*(pow(r,2))))+(((1719012800)*((pow(M,2))*(pow(r,3))))+(((3424686650)*((M)*(pow(r,4))))+((1673282765)*(pow(r,5)))))))))))+(((60)*((pow(a,12))*((pow(r,10))*(((-6144)*(pow(M,6)))+(((71680)*((pow(M,5))*(r)))+(((-647040)*((pow(M,4))*(pow(r,2))))+(((7262080)*((pow(M,3))*(pow(r,3))))+(((164470188)*((pow(M,2))*(pow(r,4))))+(((422894584)*((M)*(pow(r,5))))+((267435189)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((-827392)*(pow(M,6)))+(((7888896)*((pow(M,5))*(r)))+(((-57438720)*((pow(M,4))*(pow(r,2))))+(((524372480)*((pow(M,3))*(pow(r,3))))+(((9330483600)*((pow(M,2))*(pow(r,4))))+(((19336000320)*((M)*(pow(r,5))))+((9997277465)*(pow(r,6)))))))))))+((4)*((pow(a,14))*((pow(r,7))*(((32768)*(pow(M,7)))+(((-299008)*((pow(M,6))*(r)))+(((2199552)*((pow(M,5))*(pow(r,2))))+(((-15669760)*((pow(M,4))*(pow(r,3))))+(((148851680)*((pow(M,3))*(pow(r,4))))+(((2883128520)*((pow(M,2))*(pow(r,5))))+(((6508958330)*((M)*(pow(r,6))))+((3666576305)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),10))*((((323)*(pow(r,11)))+(((15)*((pow(a,10))*(((2)*(M))+(r))))+(((17)*((pow(a,2))*((pow(r,8))*(((94)*(M))+((67)*(r))))))+(((5)*((pow(a,8))*((r)*(((112)*(pow(M,2)))+(((136)*((M)*(r)))+((43)*(pow(r,2))))))))+(((2)*((pow(a,4))*((pow(r,5))*(((1288)*(pow(M,2)))+(((1908)*((M)*(r)))+((747)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((672)*(pow(M,3)))+(((1568)*((pow(M,2))*(r)))+(((1434)*((M)*(pow(r,2))))+((439)*(pow(r,3))))))))))))))*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_scalar_406(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[406] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.0001953125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-15))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-8))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((a)*((((114688)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((255255)*((pow(a,2))*((pow(r,25))*(((206)*(M))+((695)*(r))))))+(((7)*((pow(a,26))*((r)*(((1052134)*(M))+((755443)*(r))))))+(((6006)*((pow(a,4))*((pow(r,22))*(((8508)*(pow(M,2)))+(((96552)*((M)*(r)))+((165667)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((1793192)*(pow(M,2)))+(((6001728)*((M)*(r)))+((3224903)*(pow(r,2))))))))+(((2574)*((pow(a,6))*((pow(r,19))*(((2400)*(pow(M,3)))+(((194920)*((pow(M,2))*(r)))+(((1131698)*((M)*(pow(r,2))))+((1320061)*(pow(r,3)))))))))+(((70)*((pow(a,22))*((pow(r,3))*(((186336)*(pow(M,3)))+(((5659080)*((pow(M,2))*(r)))+(((13001370)*((M)*(pow(r,2))))+((6336865)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((-12800)*(pow(M,4)))+(((371200)*((pow(M,3))*(r)))+(((15477720)*((pow(M,2))*(pow(r,2))))+(((61573120)*((M)*(pow(r,3))))+((55100059)*(pow(r,4))))))))))+(((10)*((pow(a,20))*((pow(r,4))*(((-578304)*(pow(M,4)))+(((9278208)*((pow(M,3))*(r)))+(((186197940)*((pow(M,2))*(pow(r,2))))+(((378635800)*((M)*(pow(r,3))))+((180690325)*(pow(r,4))))))))))+(((65)*((pow(a,10))*((pow(r,13))*(((12288)*(pow(M,5)))+(((-199680)*((pow(M,4))*(r)))+(((3086080)*((pow(M,3))*(pow(r,2))))+(((88851264)*((pow(M,2))*(pow(r,3))))+(((274061382)*((M)*(pow(r,4))))+((201488035)*(pow(r,5)))))))))))+(((3)*((pow(a,18))*((pow(r,5))*(((864256)*(pow(M,5)))+(((-9405440)*((pow(M,4))*(r)))+(((96912640)*((pow(M,3))*(pow(r,2))))+(((1719012800)*((pow(M,2))*(pow(r,3))))+(((3424686650)*((M)*(pow(r,4))))+((1673282765)*(pow(r,5)))))))))))+(((60)*((pow(a,12))*((pow(r,10))*(((-6144)*(pow(M,6)))+(((71680)*((pow(M,5))*(r)))+(((-647040)*((pow(M,4))*(pow(r,2))))+(((7262080)*((pow(M,3))*(pow(r,3))))+(((164470188)*((pow(M,2))*(pow(r,4))))+(((422894584)*((M)*(pow(r,5))))+((267435189)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((-827392)*(pow(M,6)))+(((7888896)*((pow(M,5))*(r)))+(((-57438720)*((pow(M,4))*(pow(r,2))))+(((524372480)*((pow(M,3))*(pow(r,3))))+(((9330483600)*((pow(M,2))*(pow(r,4))))+(((19336000320)*((M)*(pow(r,5))))+((9997277465)*(pow(r,6)))))))))))+((4)*((pow(a,14))*((pow(r,7))*(((32768)*(pow(M,7)))+(((-299008)*((pow(M,6))*(r)))+(((2199552)*((pow(M,5))*(pow(r,2))))+(((-15669760)*((pow(M,4))*(pow(r,3))))+(((148851680)*((pow(M,3))*(pow(r,4))))+(((2883128520)*((pow(M,2))*(pow(r,5))))+(((6508958330)*((M)*(pow(r,6))))+((3666576305)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2])))))+((-45045)*((r)*((pow((pow(a,2))+(pow(r,2)),10))*((((323)*(pow(r,11)))+(((15)*((pow(a,10))*(((2)*(M))+(r))))+(((17)*((pow(a,2))*((pow(r,8))*(((94)*(M))+((67)*(r))))))+(((5)*((pow(a,8))*((r)*(((112)*(pow(M,2)))+(((136)*((M)*(r)))+((43)*(pow(r,2))))))))+(((2)*((pow(a,4))*((pow(r,5))*(((1288)*(pow(M,2)))+(((1908)*((M)*(r)))+((747)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((672)*(pow(M,3)))+(((1568)*((pow(M,2))*(r)))+(((1434)*((M)*(pow(r,2))))+((439)*(pow(r,3))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_407(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[407] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.00009765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-17))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((114688)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((255255)*((pow(a,2))*((pow(r,25))*(((206)*(M))+((695)*(r))))))+(((7)*((pow(a,26))*((r)*(((1052134)*(M))+((755443)*(r))))))+(((6006)*((pow(a,4))*((pow(r,22))*(((8508)*(pow(M,2)))+(((96552)*((M)*(r)))+((165667)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((1793192)*(pow(M,2)))+(((6001728)*((M)*(r)))+((3224903)*(pow(r,2))))))))+(((2574)*((pow(a,6))*((pow(r,19))*(((2400)*(pow(M,3)))+(((194920)*((pow(M,2))*(r)))+(((1131698)*((M)*(pow(r,2))))+((1320061)*(pow(r,3)))))))))+(((70)*((pow(a,22))*((pow(r,3))*(((186336)*(pow(M,3)))+(((5659080)*((pow(M,2))*(r)))+(((13001370)*((M)*(pow(r,2))))+((6336865)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((-12800)*(pow(M,4)))+(((371200)*((pow(M,3))*(r)))+(((15477720)*((pow(M,2))*(pow(r,2))))+(((61573120)*((M)*(pow(r,3))))+((55100059)*(pow(r,4))))))))))+(((10)*((pow(a,20))*((pow(r,4))*(((-578304)*(pow(M,4)))+(((9278208)*((pow(M,3))*(r)))+(((186197940)*((pow(M,2))*(pow(r,2))))+(((378635800)*((M)*(pow(r,3))))+((180690325)*(pow(r,4))))))))))+(((65)*((pow(a,10))*((pow(r,13))*(((12288)*(pow(M,5)))+(((-199680)*((pow(M,4))*(r)))+(((3086080)*((pow(M,3))*(pow(r,2))))+(((88851264)*((pow(M,2))*(pow(r,3))))+(((274061382)*((M)*(pow(r,4))))+((201488035)*(pow(r,5)))))))))))+(((3)*((pow(a,18))*((pow(r,5))*(((864256)*(pow(M,5)))+(((-9405440)*((pow(M,4))*(r)))+(((96912640)*((pow(M,3))*(pow(r,2))))+(((1719012800)*((pow(M,2))*(pow(r,3))))+(((3424686650)*((M)*(pow(r,4))))+((1673282765)*(pow(r,5)))))))))))+(((60)*((pow(a,12))*((pow(r,10))*(((-6144)*(pow(M,6)))+(((71680)*((pow(M,5))*(r)))+(((-647040)*((pow(M,4))*(pow(r,2))))+(((7262080)*((pow(M,3))*(pow(r,3))))+(((164470188)*((pow(M,2))*(pow(r,4))))+(((422894584)*((M)*(pow(r,5))))+((267435189)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((-827392)*(pow(M,6)))+(((7888896)*((pow(M,5))*(r)))+(((-57438720)*((pow(M,4))*(pow(r,2))))+(((524372480)*((pow(M,3))*(pow(r,3))))+(((9330483600)*((pow(M,2))*(pow(r,4))))+(((19336000320)*((M)*(pow(r,5))))+((9997277465)*(pow(r,6)))))))))))+((4)*((pow(a,14))*((pow(r,7))*(((32768)*(pow(M,7)))+(((-299008)*((pow(M,6))*(r)))+(((2199552)*((pow(M,5))*(pow(r,2))))+(((-15669760)*((pow(M,4))*(pow(r,3))))+(((148851680)*((pow(M,3))*(pow(r,4))))+(((2883128520)*((pow(M,2))*(pow(r,5))))+(((6508958330)*((M)*(pow(r,6))))+((3666576305)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),10))*((((323)*(pow(r,11)))+(((15)*((pow(a,10))*(((2)*(M))+(r))))+(((17)*((pow(a,2))*((pow(r,8))*(((94)*(M))+((67)*(r))))))+(((5)*((pow(a,8))*((r)*(((112)*(pow(M,2)))+(((136)*((M)*(r)))+((43)*(pow(r,2))))))))+(((2)*((pow(a,4))*((pow(r,5))*(((1288)*(pow(M,2)))+(((1908)*((M)*(r)))+((747)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((672)*(pow(M,3)))+(((1568)*((pow(M,2))*(r)))+(((1434)*((M)*(pow(r,2))))+((439)*(pow(r,3))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_408(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[408] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.001953125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-16))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-9))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((expr[0])*((expr[1])*((expr[2])*(((-1)*((a)*((((114688)*(pow(a,28)))+(((14549535)*(pow(r,28)))+(((255255)*((pow(a,2))*((pow(r,25))*(((206)*(M))+((695)*(r))))))+(((7)*((pow(a,26))*((r)*(((1052134)*(M))+((755443)*(r))))))+(((6006)*((pow(a,4))*((pow(r,22))*(((8508)*(pow(M,2)))+(((96552)*((M)*(r)))+((165667)*(pow(r,2))))))))+(((21)*((pow(a,24))*((pow(r,2))*(((1793192)*(pow(M,2)))+(((6001728)*((M)*(r)))+((3224903)*(pow(r,2))))))))+(((2574)*((pow(a,6))*((pow(r,19))*(((2400)*(pow(M,3)))+(((194920)*((pow(M,2))*(r)))+(((1131698)*((M)*(pow(r,2))))+((1320061)*(pow(r,3)))))))))+(((70)*((pow(a,22))*((pow(r,3))*(((186336)*(pow(M,3)))+(((5659080)*((pow(M,2))*(r)))+(((13001370)*((M)*(pow(r,2))))+((6336865)*(pow(r,3)))))))))+(((143)*((pow(a,8))*((pow(r,16))*(((-12800)*(pow(M,4)))+(((371200)*((pow(M,3))*(r)))+(((15477720)*((pow(M,2))*(pow(r,2))))+(((61573120)*((M)*(pow(r,3))))+((55100059)*(pow(r,4))))))))))+(((10)*((pow(a,20))*((pow(r,4))*(((-578304)*(pow(M,4)))+(((9278208)*((pow(M,3))*(r)))+(((186197940)*((pow(M,2))*(pow(r,2))))+(((378635800)*((M)*(pow(r,3))))+((180690325)*(pow(r,4))))))))))+(((65)*((pow(a,10))*((pow(r,13))*(((12288)*(pow(M,5)))+(((-199680)*((pow(M,4))*(r)))+(((3086080)*((pow(M,3))*(pow(r,2))))+(((88851264)*((pow(M,2))*(pow(r,3))))+(((274061382)*((M)*(pow(r,4))))+((201488035)*(pow(r,5)))))))))))+(((3)*((pow(a,18))*((pow(r,5))*(((864256)*(pow(M,5)))+(((-9405440)*((pow(M,4))*(r)))+(((96912640)*((pow(M,3))*(pow(r,2))))+(((1719012800)*((pow(M,2))*(pow(r,3))))+(((3424686650)*((M)*(pow(r,4))))+((1673282765)*(pow(r,5)))))))))))+(((60)*((pow(a,12))*((pow(r,10))*(((-6144)*(pow(M,6)))+(((71680)*((pow(M,5))*(r)))+(((-647040)*((pow(M,4))*(pow(r,2))))+(((7262080)*((pow(M,3))*(pow(r,3))))+(((164470188)*((pow(M,2))*(pow(r,4))))+(((422894584)*((M)*(pow(r,5))))+((267435189)*(pow(r,6))))))))))))+(((pow(a,16))*((pow(r,6))*(((-827392)*(pow(M,6)))+(((7888896)*((pow(M,5))*(r)))+(((-57438720)*((pow(M,4))*(pow(r,2))))+(((524372480)*((pow(M,3))*(pow(r,3))))+(((9330483600)*((pow(M,2))*(pow(r,4))))+(((19336000320)*((M)*(pow(r,5))))+((9997277465)*(pow(r,6)))))))))))+((4)*((pow(a,14))*((pow(r,7))*(((32768)*(pow(M,7)))+(((-299008)*((pow(M,6))*(r)))+(((2199552)*((pow(M,5))*(pow(r,2))))+(((-15669760)*((pow(M,4))*(pow(r,3))))+(((148851680)*((pow(M,3))*(pow(r,4))))+(((2883128520)*((pow(M,2))*(pow(r,5))))+(((6508958330)*((M)*(pow(r,6))))+((3666576305)*(pow(r,7)))))))))))))))))))))))))))*((expr[0])*((expr[1])*(expr[2]))))))+((45045)*((r)*((pow((pow(a,2))+(pow(r,2)),10))*((((323)*(pow(r,11)))+(((15)*((pow(a,10))*(((2)*(M))+(r))))+(((17)*((pow(a,2))*((pow(r,8))*(((94)*(M))+((67)*(r))))))+(((5)*((pow(a,8))*((r)*(((112)*(pow(M,2)))+(((136)*((M)*(r)))+((43)*(pow(r,2))))))))+(((2)*((pow(a,4))*((pow(r,5))*(((1288)*(pow(M,2)))+(((1908)*((M)*(r)))+((747)*(pow(r,2))))))))+((2)*((pow(a,6))*((pow(r,2))*(((672)*(pow(M,3)))+(((1568)*((pow(M,2))*(r)))+(((1434)*((M)*(pow(r,2))))+((439)*(pow(r,3))))))))))))))*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_scalar_409(const HighPrecisionScalar a, const HighPrecisionScalar M, const HighPrecisionVector &r, const std::vector<HighPrecisionVector> &expr, std::vector<ComplexVector> &coeffs) {
coeffs[409] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.007812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.612451549659709930473322646060754226226879261121714677587318477852774990205137640592030853343446129"))*((pow(a,-11))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,4))+(((-3)*((pow(a,2))*((r)*((M)+((4)*(r))))))+((pow(r,2))*(((2)*(pow(M,2)))+(((41)*((M)*(r)))+((-21)*(pow(r,2))))))))*(((a)*((r)*(((3465)*((pow(r,20))*(((-2)*(M))+(r))))+(((2245)*((pow(a,20))*(((2)*(M))+(r))))+(((210)*((pow(a,2))*((pow(r,17))*(((-82)*(pow(M,2)))+(((-248)*((M)*(r)))+((161)*(pow(r,2))))))))+(((10)*((pow(a,18))*((r)*(((-194)*(pow(M,2)))+(((4296)*((M)*(r)))+((2421)*(pow(r,2))))))))+(((-21)*((pow(a,4))*((pow(r,14))*(((224)*(pow(M,3)))+(((6224)*((pow(M,2))*(r)))+(((7638)*((M)*(pow(r,2))))+((-7053)*(pow(r,3)))))))))+(((pow(a,16))*((pow(r,2))*(((-19936)*(pow(M,3)))+(((-45424)*((pow(M,2))*(r)))+(((169638)*((M)*(pow(r,2))))+((116133)*(pow(r,3))))))))+(((24)*((pow(a,6))*((pow(r,11))*(((104)*(pow(M,4)))+(((-1384)*((pow(M,3))*(r)))+(((-17876)*((pow(M,2))*(pow(r,2))))+(((-10048)*((M)*(pow(r,3))))+((15977)*(pow(r,4))))))))))+(((8)*((pow(a,14))*((pow(r,3))*(((1912)*(pow(M,4)))+(((-11128)*((pow(M,3))*(r)))+(((-30088)*((pow(M,2))*(pow(r,2))))+(((44624)*((M)*(pow(r,3))))+((40891)*(pow(r,4))))))))))+(((-2)*((pow(a,8))*((pow(r,8))*(((1024)*(pow(M,5)))+(((-7552)*((pow(M,4))*(r)))+(((50320)*((pow(M,3))*(pow(r,2))))+(((395560)*((pow(M,2))*(pow(r,3))))+(((58490)*((M)*(pow(r,4))))+((-324665)*(pow(r,5)))))))))))+(((2)*((pow(a,12))*((pow(r,4))*(((-4096)*(pow(M,5)))+(((20352)*((pow(M,4))*(r)))+(((-83280)*((pow(M,3))*(pow(r,2))))+(((-304600)*((pow(M,2))*(pow(r,3))))+(((206130)*((M)*(pow(r,4))))+((300165)*(pow(r,5)))))))))))+((4)*((pow(a,10))*((pow(r,5))*(((512)*(pow(M,6)))+(((-2560)*((pow(M,5))*(r)))+(((9504)*((pow(M,4))*(pow(r,2))))+(((-42400)*((pow(M,3))*(pow(r,3))))+(((-221890)*((pow(M,2))*(pow(r,4))))+(((48840)*((M)*(pow(r,5))))+((187755)*(pow(r,6))))))))))))))))))))))))+((-315)*((pow((pow(a,2))+(pow(r,2)),8))*(((pow(a,4))+(((11)*(pow(r,4)))+((4)*((pow(a,2))*((r)*(((5)*(M))+((3)*(r))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

}
