
#include "../teukolsky_scalar.hpp"
#include <map>

typedef TeukolskyScalarPDE::HighPrecisionScalar HighPrecisionScalar;


void compute_coeffs_350(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[350] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("-0.3437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((pow(a,-10))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,8))+(((21)*(pow(r,8)))+(((56)*((pow(a,2))*((pow(r,5))*((M)+(r)))))+(((8)*((pow(a,6))*((r)*(((3)*(M))+((2)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(pow(((4)*(M))+((5)*(r)),2)))))))))*(((a)*((r)*(((315)*((((2)*(M))+((-1)*(r)))*(pow(r,12))))+(((-113)*((pow(a,12))*(((2)*(M))+(r))))+(((420)*((pow(a,2))*((pow(r,9))*(((5)*(pow(M,2)))+(((4)*((M)*(r)))+((-4)*(pow(r,2))))))))+(((-4)*((pow(a,10))*((r)*(((81)*(pow(M,2)))+(((420)*((M)*(r)))+((218)*(pow(r,2))))))))+(((pow(a,4))*((pow(r,6))*(((1744)*(pow(M,3)))+(((5784)*((pow(M,2))*(r)))+(((258)*((M)*(pow(r,2))))+((-3683)*(pow(r,3))))))))+(((3)*((pow(a,8))*((pow(r,2))*(((496)*(pow(M,3)))+(((312)*((pow(M,2))*(r)))+(((-1298)*((M)*(pow(r,2))))+((-891)*(pow(r,3)))))))))+((8)*((pow(a,6))*((pow(r,3))*(((16)*(pow(M,4)))+(((404)*((pow(M,3))*(r)))+(((618)*((pow(M,2))*(pow(r,2))))+(((-404)*((M)*(pow(r,3))))+((-529)*(pow(r,4))))))))))))))))))+((15)*((pow((pow(a,2))+(pow(r,2)),2))*(((pow(a,8))+(((21)*(pow(r,8)))+(((56)*((pow(a,2))*((pow(r,5))*((M)+(r)))))+(((8)*((pow(a,6))*((r)*(((3)*(M))+((2)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(pow(((4)*(M))+((5)*(r)),2)))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3])))))))))))))).cast<double>());
}

void compute_coeffs_351(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[351] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.005859375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.253566341056017437200912615345187080125125261079214798703956518540394949459900897382241879581243679"))*((pow(a,-13))*((pow(r,-3))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*((((2)*(pow(a,12)))+(((pow(a,10))*((r)*(((42)*(M))+((5)*(r)))))+(((42)*((pow(r,10))*(((2)*(pow(M,2)))+(((29)*((M)*(r)))+((-15)*(pow(r,2)))))))+(((-2)*((pow(a,8))*((pow(r,2))*(((38)*(pow(M,2)))+(((263)*((M)*(r)))+((181)*(pow(r,2))))))))+(((7)*((pow(a,2))*((pow(r,7))*(((32)*(pow(M,3)))+(((496)*((pow(M,2))*(r)))+(((206)*((M)*(pow(r,2))))+((-321)*(pow(r,3)))))))))+(((-2)*((pow(a,6))*((pow(r,3))*(((48)*(pow(M,3)))+(((-56)*((pow(M,2))*(r)))+(((1070)*((M)*(pow(r,2))))+((859)*(pow(r,3)))))))))+((2)*((pow(a,4))*((pow(r,4))*(((64)*(pow(M,4)))+(((1088)*((pow(M,3))*(r)))+(((1772)*((pow(M,2))*(pow(r,2))))+(((-674)*((M)*(pow(r,3))))+((-1485)*(pow(r,4))))))))))))))))*(((a)*((r)*(((-15015)*((((2)*(M))+((-1)*(r)))*(pow(r,16))))+(((1873)*((pow(a,16))*(((2)*(M))+(r))))+(((770)*((pow(a,2))*((pow(r,13))*(((-170)*(pow(M,2)))+(((-142)*((M)*(r)))+((133)*(pow(r,2))))))))+(((2)*((pow(a,14))*((r)*(((13562)*(pow(M,2)))+(((28546)*((M)*(r)))+((11819)*(pow(r,2))))))))+(((-14)*((pow(a,4))*((pow(r,10))*(((12776)*(pow(M,3)))+(((36936)*((pow(M,2))*(r)))+(((4192)*((M)*(pow(r,2))))+((-21507)*(pow(r,3)))))))))+(((2)*((pow(a,12))*((pow(r,2))*(((-16984)*(pow(M,3)))+(((55896)*((pow(M,2))*(r)))+(((134640)*((M)*(pow(r,2))))+((58715)*(pow(r,3)))))))))+(((2)*((pow(a,6))*((pow(r,7))*(((-37824)*(pow(M,4)))+(((-282080)*((pow(M,3))*(r)))+(((-367746)*((pow(M,2))*(pow(r,2))))+(((150078)*((M)*(pow(r,3))))+((248369)*(pow(r,4))))))))))+(((-4)*((pow(a,8))*((pow(r,4))*(((640)*(pow(M,5)))+(((36224)*((pow(M,4))*(r)))+(((156424)*((pow(M,3))*(pow(r,2))))+(((96432)*((pow(M,2))*(pow(r,3))))+(((-163875)*((M)*(pow(r,4))))+((-125130)*(pow(r,5)))))))))))+((pow(a,10))*(((-69248)*((pow(M,4))*(pow(r,3))))+(((-274368)*((pow(M,3))*(pow(r,4))))+(((48228)*((pow(M,2))*(pow(r,5))))+(((591900)*((M)*(pow(r,6))))+((313150)*(pow(r,7))))))))))))))))))+((-35)*((pow((pow(a,2))+(pow(r,2)),2))*((((5)*(pow(a,12)))+(((429)*(pow(r,12)))+(((30)*((pow(a,10))*((r)*(((8)*(M))+((5)*(r))))))+(((198)*((pow(a,2))*((pow(r,9))*(((8)*(M))+((9)*(r))))))+(((15)*((pow(a,8))*((pow(r,2))*(((64)*(pow(M,2)))+(((128)*((M)*(r)))+((61)*(pow(r,2))))))))+(((9)*((pow(a,4))*((pow(r,6))*(((192)*(pow(M,2)))+(((512)*((M)*(r)))+((323)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((672)*((pow(M,2))*(r)))+(((1176)*((M)*(pow(r,2))))+((581)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_352(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[352] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("0.01171875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.253566341056017437200912615345187080125125261079214798703956518540394949459900897382241879581243679"))*((pow(a,-11))*((pow(r,-2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-6))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,8))+(((21)*(pow(r,8)))+(((56)*((pow(a,2))*((pow(r,5))*((M)+(r)))))+(((8)*((pow(a,6))*((r)*(((3)*(M))+((2)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(pow(((4)*(M))+((5)*(r)),2)))))))))*(((a)*((r)*(((-15015)*((((2)*(M))+((-1)*(r)))*(pow(r,16))))+(((1873)*((pow(a,16))*(((2)*(M))+(r))))+(((770)*((pow(a,2))*((pow(r,13))*(((-170)*(pow(M,2)))+(((-142)*((M)*(r)))+((133)*(pow(r,2))))))))+(((2)*((pow(a,14))*((r)*(((13562)*(pow(M,2)))+(((28546)*((M)*(r)))+((11819)*(pow(r,2))))))))+(((-14)*((pow(a,4))*((pow(r,10))*(((12776)*(pow(M,3)))+(((36936)*((pow(M,2))*(r)))+(((4192)*((M)*(pow(r,2))))+((-21507)*(pow(r,3)))))))))+(((2)*((pow(a,12))*((pow(r,2))*(((-16984)*(pow(M,3)))+(((55896)*((pow(M,2))*(r)))+(((134640)*((M)*(pow(r,2))))+((58715)*(pow(r,3)))))))))+(((2)*((pow(a,6))*((pow(r,7))*(((-37824)*(pow(M,4)))+(((-282080)*((pow(M,3))*(r)))+(((-367746)*((pow(M,2))*(pow(r,2))))+(((150078)*((M)*(pow(r,3))))+((248369)*(pow(r,4))))))))))+(((-4)*((pow(a,8))*((pow(r,4))*(((640)*(pow(M,5)))+(((36224)*((pow(M,4))*(r)))+(((156424)*((pow(M,3))*(pow(r,2))))+(((96432)*((pow(M,2))*(pow(r,3))))+(((-163875)*((M)*(pow(r,4))))+((-125130)*(pow(r,5)))))))))))+((pow(a,10))*(((-69248)*((pow(M,4))*(pow(r,3))))+(((-274368)*((pow(M,3))*(pow(r,4))))+(((48228)*((pow(M,2))*(pow(r,5))))+(((591900)*((M)*(pow(r,6))))+((313150)*(pow(r,7))))))))))))))))))+((-35)*((pow((pow(a,2))+(pow(r,2)),2))*((((5)*(pow(a,12)))+(((429)*(pow(r,12)))+(((30)*((pow(a,10))*((r)*(((8)*(M))+((5)*(r))))))+(((198)*((pow(a,2))*((pow(r,9))*(((8)*(M))+((9)*(r))))))+(((15)*((pow(a,8))*((pow(r,2))*(((64)*(pow(M,2)))+(((128)*((M)*(r)))+((61)*(pow(r,2))))))))+(((9)*((pow(a,4))*((pow(r,6))*(((192)*(pow(M,2)))+(((512)*((M)*(r)))+((323)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((672)*((pow(M,2))*(r)))+(((1176)*((M)*(pow(r,2))))+((581)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_353(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[353] = std::complex<double>(1.0,0.0)*(((HighPrecisionScalar("-0.005859375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.253566341056017437200912615345187080125125261079214798703956518540394949459900897382241879581243679"))*((pow(a,-13))*((pow((pow(a,2))+(pow(r,2)),2))*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,4))+((pow(a,2))*((r)*(((2)*(M))+(r)))),-1))*(((pow(a,8))+(((21)*(pow(r,8)))+(((56)*((pow(a,2))*((pow(r,5))*((M)+(r)))))+(((8)*((pow(a,6))*((r)*(((3)*(M))+((2)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(pow(((4)*(M))+((5)*(r)),2)))))))))*(((a)*((r)*(((-15015)*((((2)*(M))+((-1)*(r)))*(pow(r,16))))+(((1873)*((pow(a,16))*(((2)*(M))+(r))))+(((770)*((pow(a,2))*((pow(r,13))*(((-170)*(pow(M,2)))+(((-142)*((M)*(r)))+((133)*(pow(r,2))))))))+(((2)*((pow(a,14))*((r)*(((13562)*(pow(M,2)))+(((28546)*((M)*(r)))+((11819)*(pow(r,2))))))))+(((-14)*((pow(a,4))*((pow(r,10))*(((12776)*(pow(M,3)))+(((36936)*((pow(M,2))*(r)))+(((4192)*((M)*(pow(r,2))))+((-21507)*(pow(r,3)))))))))+(((2)*((pow(a,12))*((pow(r,2))*(((-16984)*(pow(M,3)))+(((55896)*((pow(M,2))*(r)))+(((134640)*((M)*(pow(r,2))))+((58715)*(pow(r,3)))))))))+(((2)*((pow(a,6))*((pow(r,7))*(((-37824)*(pow(M,4)))+(((-282080)*((pow(M,3))*(r)))+(((-367746)*((pow(M,2))*(pow(r,2))))+(((150078)*((M)*(pow(r,3))))+((248369)*(pow(r,4))))))))))+(((-4)*((pow(a,8))*((pow(r,4))*(((640)*(pow(M,5)))+(((36224)*((pow(M,4))*(r)))+(((156424)*((pow(M,3))*(pow(r,2))))+(((96432)*((pow(M,2))*(pow(r,3))))+(((-163875)*((M)*(pow(r,4))))+((-125130)*(pow(r,5)))))))))))+((pow(a,10))*(((-69248)*((pow(M,4))*(pow(r,3))))+(((-274368)*((pow(M,3))*(pow(r,4))))+(((48228)*((pow(M,2))*(pow(r,5))))+(((591900)*((M)*(pow(r,6))))+((313150)*(pow(r,7))))))))))))))))))+((-35)*((pow((pow(a,2))+(pow(r,2)),2))*((((5)*(pow(a,12)))+(((429)*(pow(r,12)))+(((30)*((pow(a,10))*((r)*(((8)*(M))+((5)*(r))))))+(((198)*((pow(a,2))*((pow(r,9))*(((8)*(M))+((9)*(r))))))+(((15)*((pow(a,8))*((pow(r,2))*(((64)*(pow(M,2)))+(((128)*((M)*(r)))+((61)*(pow(r,2))))))))+(((9)*((pow(a,4))*((pow(r,6))*(((192)*(pow(M,2)))+(((512)*((M)*(r)))+((323)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((672)*((pow(M,2))*(r)))+(((1176)*((M)*(pow(r,2))))+((581)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}

void compute_coeffs_354(const TeukolskyScalarPDE::HighPrecisionScalar a, const TeukolskyScalarPDE::HighPrecisionScalar M, const TeukolskyScalarPDE::HighPrecisionVector &r, const std::vector<TeukolskyScalarPDE::HighPrecisionVector> &expr, std::vector<TeukolskyScalarPDE::ComplexVector> &coeffs) {
coeffs[354] = std::complex<double>(0.0,1.0)*(((HighPrecisionScalar("0.02343750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))*((HighPrecisionScalar("1.253566341056017437200912615345187080125125261079214798703956518540394949459900897382241879581243679"))*((pow(a,-12))*((M)*((pow((pow(a,2))+((r)*(((-2)*(M))+(r))),-7))*((pow((pow(r,3))+((pow(a,2))*(((2)*(M))+(r))),-1))*(((pow(a,8))+(((21)*(pow(r,8)))+(((56)*((pow(a,2))*((pow(r,5))*((M)+(r)))))+(((8)*((pow(a,6))*((r)*(((3)*(M))+((2)*(r))))))+((2)*((pow(a,4))*((pow(r,2))*(pow(((4)*(M))+((5)*(r)),2)))))))))*(((-1)*((a)*((r)*(((-15015)*((((2)*(M))+((-1)*(r)))*(pow(r,16))))+(((1873)*((pow(a,16))*(((2)*(M))+(r))))+(((770)*((pow(a,2))*((pow(r,13))*(((-170)*(pow(M,2)))+(((-142)*((M)*(r)))+((133)*(pow(r,2))))))))+(((2)*((pow(a,14))*((r)*(((13562)*(pow(M,2)))+(((28546)*((M)*(r)))+((11819)*(pow(r,2))))))))+(((-14)*((pow(a,4))*((pow(r,10))*(((12776)*(pow(M,3)))+(((36936)*((pow(M,2))*(r)))+(((4192)*((M)*(pow(r,2))))+((-21507)*(pow(r,3)))))))))+(((2)*((pow(a,12))*((pow(r,2))*(((-16984)*(pow(M,3)))+(((55896)*((pow(M,2))*(r)))+(((134640)*((M)*(pow(r,2))))+((58715)*(pow(r,3)))))))))+(((2)*((pow(a,6))*((pow(r,7))*(((-37824)*(pow(M,4)))+(((-282080)*((pow(M,3))*(r)))+(((-367746)*((pow(M,2))*(pow(r,2))))+(((150078)*((M)*(pow(r,3))))+((248369)*(pow(r,4))))))))))+(((-4)*((pow(a,8))*((pow(r,4))*(((640)*(pow(M,5)))+(((36224)*((pow(M,4))*(r)))+(((156424)*((pow(M,3))*(pow(r,2))))+(((96432)*((pow(M,2))*(pow(r,3))))+(((-163875)*((M)*(pow(r,4))))+((-125130)*(pow(r,5)))))))))))+((pow(a,10))*(((-69248)*((pow(M,4))*(pow(r,3))))+(((-274368)*((pow(M,3))*(pow(r,4))))+(((48228)*((pow(M,2))*(pow(r,5))))+(((591900)*((M)*(pow(r,6))))+((313150)*(pow(r,7)))))))))))))))))))+((35)*((pow((pow(a,2))+(pow(r,2)),2))*((((5)*(pow(a,12)))+(((429)*(pow(r,12)))+(((30)*((pow(a,10))*((r)*(((8)*(M))+((5)*(r))))))+(((198)*((pow(a,2))*((pow(r,9))*(((8)*(M))+((9)*(r))))))+(((15)*((pow(a,8))*((pow(r,2))*(((64)*(pow(M,2)))+(((128)*((M)*(r)))+((61)*(pow(r,2))))))))+(((9)*((pow(a,4))*((pow(r,6))*(((192)*(pow(M,2)))+(((512)*((M)*(r)))+((323)*(pow(r,2))))))))+((4)*((pow(a,6))*((pow(r,3))*(((128)*(pow(M,3)))+(((672)*((pow(M,2))*(r)))+(((1176)*((M)*(pow(r,2))))+((581)*(pow(r,3)))))))))))))))*((expr[0])*((expr[1])*((expr[2])*(expr[3]))))))))))))))).cast<double>());
}
