
namespace CUDAKernel {


__global__
void drdr_complex_double_kernel(thrust::complex<double> * __restrict__ out, const thrust::complex<double> * __restrict__ in, const int grid_size, const double inv_h_sqr)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i >= 2 && i <= grid_size-3) {
    out[i] = (inv_h_sqr)*(((-0.083333333333333333333)*(in[(-2)+(i)]))+(((1.3333333333333333333)*(in[(-1)+(i)]))+(((-2.5000000000000000000)*(in[i]))+(((1.3333333333333333333)*(in[(1)+(i)]))+((-0.083333333333333333333)*(in[(2)+(i)]))))));
  } else if(i == 0) {
    out[i] = (inv_h_sqr)*(((2.9166666666666666667)*(in[0]))+(((-8.6666666666666666667)*(in[1]))+(((9.5000000000000000000)*(in[2]))+(((-4.6666666666666666667)*(in[3]))+((0.91666666666666666667)*(in[4]))))));
  } else if(i == 1) {
    out[i] = (inv_h_sqr)*(((0.91666666666666666667)*(in[0]))+(((-1.6666666666666666667)*(in[1]))+(((0.50000000000000000000)*(in[2]))+(((0.33333333333333333333)*(in[3]))+((-0.083333333333333333333)*(in[4]))))));
  } else if(i == grid_size-2) {
    out[i] = (inv_h_sqr)*(((-0.083333333333333333333)*(in[(-5)+(grid_size)]))+(((0.33333333333333333333)*(in[(-4)+(grid_size)]))+(((0.50000000000000000000)*(in[(-3)+(grid_size)]))+(((-1.6666666666666666667)*(in[(-2)+(grid_size)]))+((0.91666666666666666667)*(in[(-1)+(grid_size)]))))));
  } else if(i == grid_size-1) {
    out[i] = (inv_h_sqr)*(((0.91666666666666666667)*(in[(-5)+(grid_size)]))+(((-4.6666666666666666667)*(in[(-4)+(grid_size)]))+(((9.5000000000000000000)*(in[(-3)+(grid_size)]))+(((-8.6666666666666666667)*(in[(-2)+(grid_size)]))+((2.9166666666666666667)*(in[(-1)+(grid_size)]))))));
  }
}

__global__
void dr_complex_double_kernel(thrust::complex<double> * __restrict__ out, const thrust::complex<double> * __restrict__ in, const int grid_size, const double inv_h)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i >= 2 && i <= grid_size-3) {
    out[i] = (inv_h)*(((0.083333333333333333333)*(in[(-2)+(i)]))+(((-0.66666666666666666667)*(in[(-1)+(i)]))+(((0.66666666666666666667)*(in[(1)+(i)]))+((-0.083333333333333333333)*(in[(2)+(i)])))));
  } else if(i == 0) {
    out[i] = (inv_h)*(((-2.0833333333333333333)*(in[0]))+(((4.0000000000000000000)*(in[1]))+(((-3.0000000000000000000)*(in[2]))+(((1.3333333333333333333)*(in[3]))+((-0.25000000000000000000)*(in[4]))))));
  } else if(i == 1) {
    out[i] = (inv_h)*(((-0.25000000000000000000)*(in[0]))+(((-0.83333333333333333333)*(in[1]))+(((1.5000000000000000000)*(in[2]))+(((-0.50000000000000000000)*(in[3]))+((0.083333333333333333333)*(in[4]))))));
  } else if(i == grid_size-2) {
    out[i] = (inv_h)*(((-0.083333333333333333333)*(in[(-5)+(grid_size)]))+(((0.50000000000000000000)*(in[(-4)+(grid_size)]))+(((-1.5000000000000000000)*(in[(-3)+(grid_size)]))+(((0.83333333333333333333)*(in[(-2)+(grid_size)]))+((0.25000000000000000000)*(in[(-1)+(grid_size)]))))));
  } else if(i == grid_size-1) {
    out[i] = (inv_h)*(((0.25000000000000000000)*(in[(-5)+(grid_size)]))+(((-1.3333333333333333333)*(in[(-4)+(grid_size)]))+(((3.0000000000000000000)*(in[(-3)+(grid_size)]))+(((-4.0000000000000000000)*(in[(-2)+(grid_size)]))+((2.0833333333333333333)*(in[(-1)+(grid_size)]))))));
  }
}

__global__
void assign_lhs_2terms_complex_double_kernel_0(thrust::complex<double> * __restrict__ lhs_ptr, const int grid_size)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i < grid_size){
    lhs_ptr[i] = 0;
  }
}

__global__
void assign_lhs_2terms_complex_double_kernel_1(thrust::complex<double> * __restrict__ lhs_ptr, const thrust::complex<double> * __restrict__ term1_ptr_0, const thrust::complex<double> * __restrict__ term2_ptr_0, const int grid_size)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i < grid_size){
    lhs_ptr[i] = - term1_ptr_0[i] * term2_ptr_0[i];
  }
}

__global__
void assign_lhs_2terms_complex_double_kernel_2(thrust::complex<double> * __restrict__ lhs_ptr, const thrust::complex<double> * __restrict__ term1_ptr_0, const thrust::complex<double> * __restrict__ term2_ptr_0, const thrust::complex<double> * __restrict__ term1_ptr_1, const thrust::complex<double> * __restrict__ term2_ptr_1, const int grid_size)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i < grid_size){
    lhs_ptr[i] = - term1_ptr_0[i] * term2_ptr_0[i] - term1_ptr_1[i] * term2_ptr_1[i];
  }
}

__global__
void assign_lhs_2terms_complex_double_kernel_3(thrust::complex<double> * __restrict__ lhs_ptr, const thrust::complex<double> * __restrict__ term1_ptr_0, const thrust::complex<double> * __restrict__ term2_ptr_0, const thrust::complex<double> * __restrict__ term1_ptr_1, const thrust::complex<double> * __restrict__ term2_ptr_1, const thrust::complex<double> * __restrict__ term1_ptr_2, const thrust::complex<double> * __restrict__ term2_ptr_2, const int grid_size)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i < grid_size){
    lhs_ptr[i] = - term1_ptr_0[i] * term2_ptr_0[i] - term1_ptr_1[i] * term2_ptr_1[i] - term1_ptr_2[i] * term2_ptr_2[i];
  }
}

__global__
void assign_lhs_2terms_complex_double_kernel_4(thrust::complex<double> * __restrict__ lhs_ptr, const thrust::complex<double> * __restrict__ term1_ptr_0, const thrust::complex<double> * __restrict__ term2_ptr_0, const thrust::complex<double> * __restrict__ term1_ptr_1, const thrust::complex<double> * __restrict__ term2_ptr_1, const thrust::complex<double> * __restrict__ term1_ptr_2, const thrust::complex<double> * __restrict__ term2_ptr_2, const thrust::complex<double> * __restrict__ term1_ptr_3, const thrust::complex<double> * __restrict__ term2_ptr_3, const int grid_size)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i < grid_size){
    lhs_ptr[i] = - term1_ptr_0[i] * term2_ptr_0[i] - term1_ptr_1[i] * term2_ptr_1[i] - term1_ptr_2[i] * term2_ptr_2[i] - term1_ptr_3[i] * term2_ptr_3[i];
  }
}

__global__
void assign_lhs_2terms_complex_double_kernel_5(thrust::complex<double> * __restrict__ lhs_ptr, const thrust::complex<double> * __restrict__ term1_ptr_0, const thrust::complex<double> * __restrict__ term2_ptr_0, const thrust::complex<double> * __restrict__ term1_ptr_1, const thrust::complex<double> * __restrict__ term2_ptr_1, const thrust::complex<double> * __restrict__ term1_ptr_2, const thrust::complex<double> * __restrict__ term2_ptr_2, const thrust::complex<double> * __restrict__ term1_ptr_3, const thrust::complex<double> * __restrict__ term2_ptr_3, const thrust::complex<double> * __restrict__ term1_ptr_4, const thrust::complex<double> * __restrict__ term2_ptr_4, const int grid_size)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i < grid_size){
    lhs_ptr[i] = - term1_ptr_0[i] * term2_ptr_0[i] - term1_ptr_1[i] * term2_ptr_1[i] - term1_ptr_2[i] * term2_ptr_2[i] - term1_ptr_3[i] * term2_ptr_3[i] - term1_ptr_4[i] * term2_ptr_4[i];
  }
}

__global__
void assign_lhs_2terms_complex_double_kernel_6(thrust::complex<double> * __restrict__ lhs_ptr, const thrust::complex<double> * __restrict__ term1_ptr_0, const thrust::complex<double> * __restrict__ term2_ptr_0, const thrust::complex<double> * __restrict__ term1_ptr_1, const thrust::complex<double> * __restrict__ term2_ptr_1, const thrust::complex<double> * __restrict__ term1_ptr_2, const thrust::complex<double> * __restrict__ term2_ptr_2, const thrust::complex<double> * __restrict__ term1_ptr_3, const thrust::complex<double> * __restrict__ term2_ptr_3, const thrust::complex<double> * __restrict__ term1_ptr_4, const thrust::complex<double> * __restrict__ term2_ptr_4, const thrust::complex<double> * __restrict__ term1_ptr_5, const thrust::complex<double> * __restrict__ term2_ptr_5, const int grid_size)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i < grid_size){
    lhs_ptr[i] = - term1_ptr_0[i] * term2_ptr_0[i] - term1_ptr_1[i] * term2_ptr_1[i] - term1_ptr_2[i] * term2_ptr_2[i] - term1_ptr_3[i] * term2_ptr_3[i] - term1_ptr_4[i] * term2_ptr_4[i] - term1_ptr_5[i] * term2_ptr_5[i];
  }
}

__global__
void assign_lhs_2terms_complex_double_kernel_7(thrust::complex<double> * __restrict__ lhs_ptr, const thrust::complex<double> * __restrict__ term1_ptr_0, const thrust::complex<double> * __restrict__ term2_ptr_0, const thrust::complex<double> * __restrict__ term1_ptr_1, const thrust::complex<double> * __restrict__ term2_ptr_1, const thrust::complex<double> * __restrict__ term1_ptr_2, const thrust::complex<double> * __restrict__ term2_ptr_2, const thrust::complex<double> * __restrict__ term1_ptr_3, const thrust::complex<double> * __restrict__ term2_ptr_3, const thrust::complex<double> * __restrict__ term1_ptr_4, const thrust::complex<double> * __restrict__ term2_ptr_4, const thrust::complex<double> * __restrict__ term1_ptr_5, const thrust::complex<double> * __restrict__ term2_ptr_5, const thrust::complex<double> * __restrict__ term1_ptr_6, const thrust::complex<double> * __restrict__ term2_ptr_6, const int grid_size)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i < grid_size){
    lhs_ptr[i] = - term1_ptr_0[i] * term2_ptr_0[i] - term1_ptr_1[i] * term2_ptr_1[i] - term1_ptr_2[i] * term2_ptr_2[i] - term1_ptr_3[i] * term2_ptr_3[i] - term1_ptr_4[i] * term2_ptr_4[i] - term1_ptr_5[i] * term2_ptr_5[i] - term1_ptr_6[i] * term2_ptr_6[i];
  }
}

__global__
void assign_lhs_2terms_complex_double_kernel_8(thrust::complex<double> * __restrict__ lhs_ptr, const thrust::complex<double> * __restrict__ term1_ptr_0, const thrust::complex<double> * __restrict__ term2_ptr_0, const thrust::complex<double> * __restrict__ term1_ptr_1, const thrust::complex<double> * __restrict__ term2_ptr_1, const thrust::complex<double> * __restrict__ term1_ptr_2, const thrust::complex<double> * __restrict__ term2_ptr_2, const thrust::complex<double> * __restrict__ term1_ptr_3, const thrust::complex<double> * __restrict__ term2_ptr_3, const thrust::complex<double> * __restrict__ term1_ptr_4, const thrust::complex<double> * __restrict__ term2_ptr_4, const thrust::complex<double> * __restrict__ term1_ptr_5, const thrust::complex<double> * __restrict__ term2_ptr_5, const thrust::complex<double> * __restrict__ term1_ptr_6, const thrust::complex<double> * __restrict__ term2_ptr_6, const thrust::complex<double> * __restrict__ term1_ptr_7, const thrust::complex<double> * __restrict__ term2_ptr_7, const int grid_size)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i < grid_size){
    lhs_ptr[i] = - term1_ptr_0[i] * term2_ptr_0[i] - term1_ptr_1[i] * term2_ptr_1[i] - term1_ptr_2[i] * term2_ptr_2[i] - term1_ptr_3[i] * term2_ptr_3[i] - term1_ptr_4[i] * term2_ptr_4[i] - term1_ptr_5[i] * term2_ptr_5[i] - term1_ptr_6[i] * term2_ptr_6[i] - term1_ptr_7[i] * term2_ptr_7[i];
  }
}

__global__
void assign_lhs_2terms_complex_double_kernel_9(thrust::complex<double> * __restrict__ lhs_ptr, const thrust::complex<double> * __restrict__ term1_ptr_0, const thrust::complex<double> * __restrict__ term2_ptr_0, const thrust::complex<double> * __restrict__ term1_ptr_1, const thrust::complex<double> * __restrict__ term2_ptr_1, const thrust::complex<double> * __restrict__ term1_ptr_2, const thrust::complex<double> * __restrict__ term2_ptr_2, const thrust::complex<double> * __restrict__ term1_ptr_3, const thrust::complex<double> * __restrict__ term2_ptr_3, const thrust::complex<double> * __restrict__ term1_ptr_4, const thrust::complex<double> * __restrict__ term2_ptr_4, const thrust::complex<double> * __restrict__ term1_ptr_5, const thrust::complex<double> * __restrict__ term2_ptr_5, const thrust::complex<double> * __restrict__ term1_ptr_6, const thrust::complex<double> * __restrict__ term2_ptr_6, const thrust::complex<double> * __restrict__ term1_ptr_7, const thrust::complex<double> * __restrict__ term2_ptr_7, const thrust::complex<double> * __restrict__ term1_ptr_8, const thrust::complex<double> * __restrict__ term2_ptr_8, const int grid_size)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i < grid_size){
    lhs_ptr[i] = - term1_ptr_0[i] * term2_ptr_0[i] - term1_ptr_1[i] * term2_ptr_1[i] - term1_ptr_2[i] * term2_ptr_2[i] - term1_ptr_3[i] * term2_ptr_3[i] - term1_ptr_4[i] * term2_ptr_4[i] - term1_ptr_5[i] * term2_ptr_5[i] - term1_ptr_6[i] * term2_ptr_6[i] - term1_ptr_7[i] * term2_ptr_7[i] - term1_ptr_8[i] * term2_ptr_8[i];
  }
}

__global__
void assign_lhs_2terms_complex_double_kernel_10(thrust::complex<double> * __restrict__ lhs_ptr, const thrust::complex<double> * __restrict__ term1_ptr_0, const thrust::complex<double> * __restrict__ term2_ptr_0, const thrust::complex<double> * __restrict__ term1_ptr_1, const thrust::complex<double> * __restrict__ term2_ptr_1, const thrust::complex<double> * __restrict__ term1_ptr_2, const thrust::complex<double> * __restrict__ term2_ptr_2, const thrust::complex<double> * __restrict__ term1_ptr_3, const thrust::complex<double> * __restrict__ term2_ptr_3, const thrust::complex<double> * __restrict__ term1_ptr_4, const thrust::complex<double> * __restrict__ term2_ptr_4, const thrust::complex<double> * __restrict__ term1_ptr_5, const thrust::complex<double> * __restrict__ term2_ptr_5, const thrust::complex<double> * __restrict__ term1_ptr_6, const thrust::complex<double> * __restrict__ term2_ptr_6, const thrust::complex<double> * __restrict__ term1_ptr_7, const thrust::complex<double> * __restrict__ term2_ptr_7, const thrust::complex<double> * __restrict__ term1_ptr_8, const thrust::complex<double> * __restrict__ term2_ptr_8, const thrust::complex<double> * __restrict__ term1_ptr_9, const thrust::complex<double> * __restrict__ term2_ptr_9, const int grid_size)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i < grid_size){
    lhs_ptr[i] = - term1_ptr_0[i] * term2_ptr_0[i] - term1_ptr_1[i] * term2_ptr_1[i] - term1_ptr_2[i] * term2_ptr_2[i] - term1_ptr_3[i] * term2_ptr_3[i] - term1_ptr_4[i] * term2_ptr_4[i] - term1_ptr_5[i] * term2_ptr_5[i] - term1_ptr_6[i] * term2_ptr_6[i] - term1_ptr_7[i] * term2_ptr_7[i] - term1_ptr_8[i] * term2_ptr_8[i] - term1_ptr_9[i] * term2_ptr_9[i];
  }
}

__global__
void assign_lhs_2terms_complex_double_kernel_11(thrust::complex<double> * __restrict__ lhs_ptr, const thrust::complex<double> * __restrict__ term1_ptr_0, const thrust::complex<double> * __restrict__ term2_ptr_0, const thrust::complex<double> * __restrict__ term1_ptr_1, const thrust::complex<double> * __restrict__ term2_ptr_1, const thrust::complex<double> * __restrict__ term1_ptr_2, const thrust::complex<double> * __restrict__ term2_ptr_2, const thrust::complex<double> * __restrict__ term1_ptr_3, const thrust::complex<double> * __restrict__ term2_ptr_3, const thrust::complex<double> * __restrict__ term1_ptr_4, const thrust::complex<double> * __restrict__ term2_ptr_4, const thrust::complex<double> * __restrict__ term1_ptr_5, const thrust::complex<double> * __restrict__ term2_ptr_5, const thrust::complex<double> * __restrict__ term1_ptr_6, const thrust::complex<double> * __restrict__ term2_ptr_6, const thrust::complex<double> * __restrict__ term1_ptr_7, const thrust::complex<double> * __restrict__ term2_ptr_7, const thrust::complex<double> * __restrict__ term1_ptr_8, const thrust::complex<double> * __restrict__ term2_ptr_8, const thrust::complex<double> * __restrict__ term1_ptr_9, const thrust::complex<double> * __restrict__ term2_ptr_9, const thrust::complex<double> * __restrict__ term1_ptr_10, const thrust::complex<double> * __restrict__ term2_ptr_10, const int grid_size)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i < grid_size){
    lhs_ptr[i] = - term1_ptr_0[i] * term2_ptr_0[i] - term1_ptr_1[i] * term2_ptr_1[i] - term1_ptr_2[i] * term2_ptr_2[i] - term1_ptr_3[i] * term2_ptr_3[i] - term1_ptr_4[i] * term2_ptr_4[i] - term1_ptr_5[i] * term2_ptr_5[i] - term1_ptr_6[i] * term2_ptr_6[i] - term1_ptr_7[i] * term2_ptr_7[i] - term1_ptr_8[i] * term2_ptr_8[i] - term1_ptr_9[i] * term2_ptr_9[i] - term1_ptr_10[i] * term2_ptr_10[i];
  }
}

__global__
void assign_lhs_2terms_complex_double_kernel_12(thrust::complex<double> * __restrict__ lhs_ptr, const thrust::complex<double> * __restrict__ term1_ptr_0, const thrust::complex<double> * __restrict__ term2_ptr_0, const thrust::complex<double> * __restrict__ term1_ptr_1, const thrust::complex<double> * __restrict__ term2_ptr_1, const thrust::complex<double> * __restrict__ term1_ptr_2, const thrust::complex<double> * __restrict__ term2_ptr_2, const thrust::complex<double> * __restrict__ term1_ptr_3, const thrust::complex<double> * __restrict__ term2_ptr_3, const thrust::complex<double> * __restrict__ term1_ptr_4, const thrust::complex<double> * __restrict__ term2_ptr_4, const thrust::complex<double> * __restrict__ term1_ptr_5, const thrust::complex<double> * __restrict__ term2_ptr_5, const thrust::complex<double> * __restrict__ term1_ptr_6, const thrust::complex<double> * __restrict__ term2_ptr_6, const thrust::complex<double> * __restrict__ term1_ptr_7, const thrust::complex<double> * __restrict__ term2_ptr_7, const thrust::complex<double> * __restrict__ term1_ptr_8, const thrust::complex<double> * __restrict__ term2_ptr_8, const thrust::complex<double> * __restrict__ term1_ptr_9, const thrust::complex<double> * __restrict__ term2_ptr_9, const thrust::complex<double> * __restrict__ term1_ptr_10, const thrust::complex<double> * __restrict__ term2_ptr_10, const thrust::complex<double> * __restrict__ term1_ptr_11, const thrust::complex<double> * __restrict__ term2_ptr_11, const int grid_size)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i < grid_size){
    lhs_ptr[i] = - term1_ptr_0[i] * term2_ptr_0[i] - term1_ptr_1[i] * term2_ptr_1[i] - term1_ptr_2[i] * term2_ptr_2[i] - term1_ptr_3[i] * term2_ptr_3[i] - term1_ptr_4[i] * term2_ptr_4[i] - term1_ptr_5[i] * term2_ptr_5[i] - term1_ptr_6[i] * term2_ptr_6[i] - term1_ptr_7[i] * term2_ptr_7[i] - term1_ptr_8[i] * term2_ptr_8[i] - term1_ptr_9[i] * term2_ptr_9[i] - term1_ptr_10[i] * term2_ptr_10[i] - term1_ptr_11[i] * term2_ptr_11[i];
  }
}

__global__
void assign_lhs_2terms_complex_double_kernel_13(thrust::complex<double> * __restrict__ lhs_ptr, const thrust::complex<double> * __restrict__ term1_ptr_0, const thrust::complex<double> * __restrict__ term2_ptr_0, const thrust::complex<double> * __restrict__ term1_ptr_1, const thrust::complex<double> * __restrict__ term2_ptr_1, const thrust::complex<double> * __restrict__ term1_ptr_2, const thrust::complex<double> * __restrict__ term2_ptr_2, const thrust::complex<double> * __restrict__ term1_ptr_3, const thrust::complex<double> * __restrict__ term2_ptr_3, const thrust::complex<double> * __restrict__ term1_ptr_4, const thrust::complex<double> * __restrict__ term2_ptr_4, const thrust::complex<double> * __restrict__ term1_ptr_5, const thrust::complex<double> * __restrict__ term2_ptr_5, const thrust::complex<double> * __restrict__ term1_ptr_6, const thrust::complex<double> * __restrict__ term2_ptr_6, const thrust::complex<double> * __restrict__ term1_ptr_7, const thrust::complex<double> * __restrict__ term2_ptr_7, const thrust::complex<double> * __restrict__ term1_ptr_8, const thrust::complex<double> * __restrict__ term2_ptr_8, const thrust::complex<double> * __restrict__ term1_ptr_9, const thrust::complex<double> * __restrict__ term2_ptr_9, const thrust::complex<double> * __restrict__ term1_ptr_10, const thrust::complex<double> * __restrict__ term2_ptr_10, const thrust::complex<double> * __restrict__ term1_ptr_11, const thrust::complex<double> * __restrict__ term2_ptr_11, const thrust::complex<double> * __restrict__ term1_ptr_12, const thrust::complex<double> * __restrict__ term2_ptr_12, const int grid_size)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i < grid_size){
    lhs_ptr[i] = - term1_ptr_0[i] * term2_ptr_0[i] - term1_ptr_1[i] * term2_ptr_1[i] - term1_ptr_2[i] * term2_ptr_2[i] - term1_ptr_3[i] * term2_ptr_3[i] - term1_ptr_4[i] * term2_ptr_4[i] - term1_ptr_5[i] * term2_ptr_5[i] - term1_ptr_6[i] * term2_ptr_6[i] - term1_ptr_7[i] * term2_ptr_7[i] - term1_ptr_8[i] * term2_ptr_8[i] - term1_ptr_9[i] * term2_ptr_9[i] - term1_ptr_10[i] * term2_ptr_10[i] - term1_ptr_11[i] * term2_ptr_11[i] - term1_ptr_12[i] * term2_ptr_12[i];
  }
}

__global__
void assign_lhs_2terms_complex_double_kernel_14(thrust::complex<double> * __restrict__ lhs_ptr, const thrust::complex<double> * __restrict__ term1_ptr_0, const thrust::complex<double> * __restrict__ term2_ptr_0, const thrust::complex<double> * __restrict__ term1_ptr_1, const thrust::complex<double> * __restrict__ term2_ptr_1, const thrust::complex<double> * __restrict__ term1_ptr_2, const thrust::complex<double> * __restrict__ term2_ptr_2, const thrust::complex<double> * __restrict__ term1_ptr_3, const thrust::complex<double> * __restrict__ term2_ptr_3, const thrust::complex<double> * __restrict__ term1_ptr_4, const thrust::complex<double> * __restrict__ term2_ptr_4, const thrust::complex<double> * __restrict__ term1_ptr_5, const thrust::complex<double> * __restrict__ term2_ptr_5, const thrust::complex<double> * __restrict__ term1_ptr_6, const thrust::complex<double> * __restrict__ term2_ptr_6, const thrust::complex<double> * __restrict__ term1_ptr_7, const thrust::complex<double> * __restrict__ term2_ptr_7, const thrust::complex<double> * __restrict__ term1_ptr_8, const thrust::complex<double> * __restrict__ term2_ptr_8, const thrust::complex<double> * __restrict__ term1_ptr_9, const thrust::complex<double> * __restrict__ term2_ptr_9, const thrust::complex<double> * __restrict__ term1_ptr_10, const thrust::complex<double> * __restrict__ term2_ptr_10, const thrust::complex<double> * __restrict__ term1_ptr_11, const thrust::complex<double> * __restrict__ term2_ptr_11, const thrust::complex<double> * __restrict__ term1_ptr_12, const thrust::complex<double> * __restrict__ term2_ptr_12, const thrust::complex<double> * __restrict__ term1_ptr_13, const thrust::complex<double> * __restrict__ term2_ptr_13, const int grid_size)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i < grid_size){
    lhs_ptr[i] = - term1_ptr_0[i] * term2_ptr_0[i] - term1_ptr_1[i] * term2_ptr_1[i] - term1_ptr_2[i] * term2_ptr_2[i] - term1_ptr_3[i] * term2_ptr_3[i] - term1_ptr_4[i] * term2_ptr_4[i] - term1_ptr_5[i] * term2_ptr_5[i] - term1_ptr_6[i] * term2_ptr_6[i] - term1_ptr_7[i] * term2_ptr_7[i] - term1_ptr_8[i] * term2_ptr_8[i] - term1_ptr_9[i] * term2_ptr_9[i] - term1_ptr_10[i] * term2_ptr_10[i] - term1_ptr_11[i] * term2_ptr_11[i] - term1_ptr_12[i] * term2_ptr_12[i] - term1_ptr_13[i] * term2_ptr_13[i];
  }
}

__global__
void assign_lhs_2terms_complex_double_kernel_15(thrust::complex<double> * __restrict__ lhs_ptr, const thrust::complex<double> * __restrict__ term1_ptr_0, const thrust::complex<double> * __restrict__ term2_ptr_0, const thrust::complex<double> * __restrict__ term1_ptr_1, const thrust::complex<double> * __restrict__ term2_ptr_1, const thrust::complex<double> * __restrict__ term1_ptr_2, const thrust::complex<double> * __restrict__ term2_ptr_2, const thrust::complex<double> * __restrict__ term1_ptr_3, const thrust::complex<double> * __restrict__ term2_ptr_3, const thrust::complex<double> * __restrict__ term1_ptr_4, const thrust::complex<double> * __restrict__ term2_ptr_4, const thrust::complex<double> * __restrict__ term1_ptr_5, const thrust::complex<double> * __restrict__ term2_ptr_5, const thrust::complex<double> * __restrict__ term1_ptr_6, const thrust::complex<double> * __restrict__ term2_ptr_6, const thrust::complex<double> * __restrict__ term1_ptr_7, const thrust::complex<double> * __restrict__ term2_ptr_7, const thrust::complex<double> * __restrict__ term1_ptr_8, const thrust::complex<double> * __restrict__ term2_ptr_8, const thrust::complex<double> * __restrict__ term1_ptr_9, const thrust::complex<double> * __restrict__ term2_ptr_9, const thrust::complex<double> * __restrict__ term1_ptr_10, const thrust::complex<double> * __restrict__ term2_ptr_10, const thrust::complex<double> * __restrict__ term1_ptr_11, const thrust::complex<double> * __restrict__ term2_ptr_11, const thrust::complex<double> * __restrict__ term1_ptr_12, const thrust::complex<double> * __restrict__ term2_ptr_12, const thrust::complex<double> * __restrict__ term1_ptr_13, const thrust::complex<double> * __restrict__ term2_ptr_13, const thrust::complex<double> * __restrict__ term1_ptr_14, const thrust::complex<double> * __restrict__ term2_ptr_14, const int grid_size)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i < grid_size){
    lhs_ptr[i] = - term1_ptr_0[i] * term2_ptr_0[i] - term1_ptr_1[i] * term2_ptr_1[i] - term1_ptr_2[i] * term2_ptr_2[i] - term1_ptr_3[i] * term2_ptr_3[i] - term1_ptr_4[i] * term2_ptr_4[i] - term1_ptr_5[i] * term2_ptr_5[i] - term1_ptr_6[i] * term2_ptr_6[i] - term1_ptr_7[i] * term2_ptr_7[i] - term1_ptr_8[i] * term2_ptr_8[i] - term1_ptr_9[i] * term2_ptr_9[i] - term1_ptr_10[i] * term2_ptr_10[i] - term1_ptr_11[i] * term2_ptr_11[i] - term1_ptr_12[i] * term2_ptr_12[i] - term1_ptr_13[i] * term2_ptr_13[i] - term1_ptr_14[i] * term2_ptr_14[i];
  }
}

__global__
void assign_lhs_2terms_complex_double_kernel_16(thrust::complex<double> * __restrict__ lhs_ptr, const thrust::complex<double> * __restrict__ term1_ptr_0, const thrust::complex<double> * __restrict__ term2_ptr_0, const thrust::complex<double> * __restrict__ term1_ptr_1, const thrust::complex<double> * __restrict__ term2_ptr_1, const thrust::complex<double> * __restrict__ term1_ptr_2, const thrust::complex<double> * __restrict__ term2_ptr_2, const thrust::complex<double> * __restrict__ term1_ptr_3, const thrust::complex<double> * __restrict__ term2_ptr_3, const thrust::complex<double> * __restrict__ term1_ptr_4, const thrust::complex<double> * __restrict__ term2_ptr_4, const thrust::complex<double> * __restrict__ term1_ptr_5, const thrust::complex<double> * __restrict__ term2_ptr_5, const thrust::complex<double> * __restrict__ term1_ptr_6, const thrust::complex<double> * __restrict__ term2_ptr_6, const thrust::complex<double> * __restrict__ term1_ptr_7, const thrust::complex<double> * __restrict__ term2_ptr_7, const thrust::complex<double> * __restrict__ term1_ptr_8, const thrust::complex<double> * __restrict__ term2_ptr_8, const thrust::complex<double> * __restrict__ term1_ptr_9, const thrust::complex<double> * __restrict__ term2_ptr_9, const thrust::complex<double> * __restrict__ term1_ptr_10, const thrust::complex<double> * __restrict__ term2_ptr_10, const thrust::complex<double> * __restrict__ term1_ptr_11, const thrust::complex<double> * __restrict__ term2_ptr_11, const thrust::complex<double> * __restrict__ term1_ptr_12, const thrust::complex<double> * __restrict__ term2_ptr_12, const thrust::complex<double> * __restrict__ term1_ptr_13, const thrust::complex<double> * __restrict__ term2_ptr_13, const thrust::complex<double> * __restrict__ term1_ptr_14, const thrust::complex<double> * __restrict__ term2_ptr_14, const thrust::complex<double> * __restrict__ term1_ptr_15, const thrust::complex<double> * __restrict__ term2_ptr_15, const int grid_size)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i < grid_size){
    lhs_ptr[i] = - term1_ptr_0[i] * term2_ptr_0[i] - term1_ptr_1[i] * term2_ptr_1[i] - term1_ptr_2[i] * term2_ptr_2[i] - term1_ptr_3[i] * term2_ptr_3[i] - term1_ptr_4[i] * term2_ptr_4[i] - term1_ptr_5[i] * term2_ptr_5[i] - term1_ptr_6[i] * term2_ptr_6[i] - term1_ptr_7[i] * term2_ptr_7[i] - term1_ptr_8[i] * term2_ptr_8[i] - term1_ptr_9[i] * term2_ptr_9[i] - term1_ptr_10[i] * term2_ptr_10[i] - term1_ptr_11[i] * term2_ptr_11[i] - term1_ptr_12[i] * term2_ptr_12[i] - term1_ptr_13[i] * term2_ptr_13[i] - term1_ptr_14[i] * term2_ptr_14[i] - term1_ptr_15[i] * term2_ptr_15[i];
  }
}

__global__
void assign_lhs_2terms_complex_double_kernel_17(thrust::complex<double> * __restrict__ lhs_ptr, const thrust::complex<double> * __restrict__ term1_ptr_0, const thrust::complex<double> * __restrict__ term2_ptr_0, const thrust::complex<double> * __restrict__ term1_ptr_1, const thrust::complex<double> * __restrict__ term2_ptr_1, const thrust::complex<double> * __restrict__ term1_ptr_2, const thrust::complex<double> * __restrict__ term2_ptr_2, const thrust::complex<double> * __restrict__ term1_ptr_3, const thrust::complex<double> * __restrict__ term2_ptr_3, const thrust::complex<double> * __restrict__ term1_ptr_4, const thrust::complex<double> * __restrict__ term2_ptr_4, const thrust::complex<double> * __restrict__ term1_ptr_5, const thrust::complex<double> * __restrict__ term2_ptr_5, const thrust::complex<double> * __restrict__ term1_ptr_6, const thrust::complex<double> * __restrict__ term2_ptr_6, const thrust::complex<double> * __restrict__ term1_ptr_7, const thrust::complex<double> * __restrict__ term2_ptr_7, const thrust::complex<double> * __restrict__ term1_ptr_8, const thrust::complex<double> * __restrict__ term2_ptr_8, const thrust::complex<double> * __restrict__ term1_ptr_9, const thrust::complex<double> * __restrict__ term2_ptr_9, const thrust::complex<double> * __restrict__ term1_ptr_10, const thrust::complex<double> * __restrict__ term2_ptr_10, const thrust::complex<double> * __restrict__ term1_ptr_11, const thrust::complex<double> * __restrict__ term2_ptr_11, const thrust::complex<double> * __restrict__ term1_ptr_12, const thrust::complex<double> * __restrict__ term2_ptr_12, const thrust::complex<double> * __restrict__ term1_ptr_13, const thrust::complex<double> * __restrict__ term2_ptr_13, const thrust::complex<double> * __restrict__ term1_ptr_14, const thrust::complex<double> * __restrict__ term2_ptr_14, const thrust::complex<double> * __restrict__ term1_ptr_15, const thrust::complex<double> * __restrict__ term2_ptr_15, const thrust::complex<double> * __restrict__ term1_ptr_16, const thrust::complex<double> * __restrict__ term2_ptr_16, const int grid_size)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i < grid_size){
    lhs_ptr[i] = - term1_ptr_0[i] * term2_ptr_0[i] - term1_ptr_1[i] * term2_ptr_1[i] - term1_ptr_2[i] * term2_ptr_2[i] - term1_ptr_3[i] * term2_ptr_3[i] - term1_ptr_4[i] * term2_ptr_4[i] - term1_ptr_5[i] * term2_ptr_5[i] - term1_ptr_6[i] * term2_ptr_6[i] - term1_ptr_7[i] * term2_ptr_7[i] - term1_ptr_8[i] * term2_ptr_8[i] - term1_ptr_9[i] * term2_ptr_9[i] - term1_ptr_10[i] * term2_ptr_10[i] - term1_ptr_11[i] * term2_ptr_11[i] - term1_ptr_12[i] * term2_ptr_12[i] - term1_ptr_13[i] * term2_ptr_13[i] - term1_ptr_14[i] * term2_ptr_14[i] - term1_ptr_15[i] * term2_ptr_15[i] - term1_ptr_16[i] * term2_ptr_16[i];
  }
}

__global__
void assign_lhs_2terms_complex_double_kernel_18(thrust::complex<double> * __restrict__ lhs_ptr, const thrust::complex<double> * __restrict__ term1_ptr_0, const thrust::complex<double> * __restrict__ term2_ptr_0, const thrust::complex<double> * __restrict__ term1_ptr_1, const thrust::complex<double> * __restrict__ term2_ptr_1, const thrust::complex<double> * __restrict__ term1_ptr_2, const thrust::complex<double> * __restrict__ term2_ptr_2, const thrust::complex<double> * __restrict__ term1_ptr_3, const thrust::complex<double> * __restrict__ term2_ptr_3, const thrust::complex<double> * __restrict__ term1_ptr_4, const thrust::complex<double> * __restrict__ term2_ptr_4, const thrust::complex<double> * __restrict__ term1_ptr_5, const thrust::complex<double> * __restrict__ term2_ptr_5, const thrust::complex<double> * __restrict__ term1_ptr_6, const thrust::complex<double> * __restrict__ term2_ptr_6, const thrust::complex<double> * __restrict__ term1_ptr_7, const thrust::complex<double> * __restrict__ term2_ptr_7, const thrust::complex<double> * __restrict__ term1_ptr_8, const thrust::complex<double> * __restrict__ term2_ptr_8, const thrust::complex<double> * __restrict__ term1_ptr_9, const thrust::complex<double> * __restrict__ term2_ptr_9, const thrust::complex<double> * __restrict__ term1_ptr_10, const thrust::complex<double> * __restrict__ term2_ptr_10, const thrust::complex<double> * __restrict__ term1_ptr_11, const thrust::complex<double> * __restrict__ term2_ptr_11, const thrust::complex<double> * __restrict__ term1_ptr_12, const thrust::complex<double> * __restrict__ term2_ptr_12, const thrust::complex<double> * __restrict__ term1_ptr_13, const thrust::complex<double> * __restrict__ term2_ptr_13, const thrust::complex<double> * __restrict__ term1_ptr_14, const thrust::complex<double> * __restrict__ term2_ptr_14, const thrust::complex<double> * __restrict__ term1_ptr_15, const thrust::complex<double> * __restrict__ term2_ptr_15, const thrust::complex<double> * __restrict__ term1_ptr_16, const thrust::complex<double> * __restrict__ term2_ptr_16, const thrust::complex<double> * __restrict__ term1_ptr_17, const thrust::complex<double> * __restrict__ term2_ptr_17, const int grid_size)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i < grid_size){
    lhs_ptr[i] = - term1_ptr_0[i] * term2_ptr_0[i] - term1_ptr_1[i] * term2_ptr_1[i] - term1_ptr_2[i] * term2_ptr_2[i] - term1_ptr_3[i] * term2_ptr_3[i] - term1_ptr_4[i] * term2_ptr_4[i] - term1_ptr_5[i] * term2_ptr_5[i] - term1_ptr_6[i] * term2_ptr_6[i] - term1_ptr_7[i] * term2_ptr_7[i] - term1_ptr_8[i] * term2_ptr_8[i] - term1_ptr_9[i] * term2_ptr_9[i] - term1_ptr_10[i] * term2_ptr_10[i] - term1_ptr_11[i] * term2_ptr_11[i] - term1_ptr_12[i] * term2_ptr_12[i] - term1_ptr_13[i] * term2_ptr_13[i] - term1_ptr_14[i] * term2_ptr_14[i] - term1_ptr_15[i] * term2_ptr_15[i] - term1_ptr_16[i] * term2_ptr_16[i] - term1_ptr_17[i] * term2_ptr_17[i];
  }
}

__global__
void assign_lhs_2terms_complex_double_kernel_19(thrust::complex<double> * __restrict__ lhs_ptr, const thrust::complex<double> * __restrict__ term1_ptr_0, const thrust::complex<double> * __restrict__ term2_ptr_0, const thrust::complex<double> * __restrict__ term1_ptr_1, const thrust::complex<double> * __restrict__ term2_ptr_1, const thrust::complex<double> * __restrict__ term1_ptr_2, const thrust::complex<double> * __restrict__ term2_ptr_2, const thrust::complex<double> * __restrict__ term1_ptr_3, const thrust::complex<double> * __restrict__ term2_ptr_3, const thrust::complex<double> * __restrict__ term1_ptr_4, const thrust::complex<double> * __restrict__ term2_ptr_4, const thrust::complex<double> * __restrict__ term1_ptr_5, const thrust::complex<double> * __restrict__ term2_ptr_5, const thrust::complex<double> * __restrict__ term1_ptr_6, const thrust::complex<double> * __restrict__ term2_ptr_6, const thrust::complex<double> * __restrict__ term1_ptr_7, const thrust::complex<double> * __restrict__ term2_ptr_7, const thrust::complex<double> * __restrict__ term1_ptr_8, const thrust::complex<double> * __restrict__ term2_ptr_8, const thrust::complex<double> * __restrict__ term1_ptr_9, const thrust::complex<double> * __restrict__ term2_ptr_9, const thrust::complex<double> * __restrict__ term1_ptr_10, const thrust::complex<double> * __restrict__ term2_ptr_10, const thrust::complex<double> * __restrict__ term1_ptr_11, const thrust::complex<double> * __restrict__ term2_ptr_11, const thrust::complex<double> * __restrict__ term1_ptr_12, const thrust::complex<double> * __restrict__ term2_ptr_12, const thrust::complex<double> * __restrict__ term1_ptr_13, const thrust::complex<double> * __restrict__ term2_ptr_13, const thrust::complex<double> * __restrict__ term1_ptr_14, const thrust::complex<double> * __restrict__ term2_ptr_14, const thrust::complex<double> * __restrict__ term1_ptr_15, const thrust::complex<double> * __restrict__ term2_ptr_15, const thrust::complex<double> * __restrict__ term1_ptr_16, const thrust::complex<double> * __restrict__ term2_ptr_16, const thrust::complex<double> * __restrict__ term1_ptr_17, const thrust::complex<double> * __restrict__ term2_ptr_17, const thrust::complex<double> * __restrict__ term1_ptr_18, const thrust::complex<double> * __restrict__ term2_ptr_18, const int grid_size)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i < grid_size){
    lhs_ptr[i] = - term1_ptr_0[i] * term2_ptr_0[i] - term1_ptr_1[i] * term2_ptr_1[i] - term1_ptr_2[i] * term2_ptr_2[i] - term1_ptr_3[i] * term2_ptr_3[i] - term1_ptr_4[i] * term2_ptr_4[i] - term1_ptr_5[i] * term2_ptr_5[i] - term1_ptr_6[i] * term2_ptr_6[i] - term1_ptr_7[i] * term2_ptr_7[i] - term1_ptr_8[i] * term2_ptr_8[i] - term1_ptr_9[i] * term2_ptr_9[i] - term1_ptr_10[i] * term2_ptr_10[i] - term1_ptr_11[i] * term2_ptr_11[i] - term1_ptr_12[i] * term2_ptr_12[i] - term1_ptr_13[i] * term2_ptr_13[i] - term1_ptr_14[i] * term2_ptr_14[i] - term1_ptr_15[i] * term2_ptr_15[i] - term1_ptr_16[i] * term2_ptr_16[i] - term1_ptr_17[i] * term2_ptr_17[i] - term1_ptr_18[i] * term2_ptr_18[i];
  }
}

__global__
void assign_lhs_2terms_complex_double_kernel_20(thrust::complex<double> * __restrict__ lhs_ptr, const thrust::complex<double> * __restrict__ term1_ptr_0, const thrust::complex<double> * __restrict__ term2_ptr_0, const thrust::complex<double> * __restrict__ term1_ptr_1, const thrust::complex<double> * __restrict__ term2_ptr_1, const thrust::complex<double> * __restrict__ term1_ptr_2, const thrust::complex<double> * __restrict__ term2_ptr_2, const thrust::complex<double> * __restrict__ term1_ptr_3, const thrust::complex<double> * __restrict__ term2_ptr_3, const thrust::complex<double> * __restrict__ term1_ptr_4, const thrust::complex<double> * __restrict__ term2_ptr_4, const thrust::complex<double> * __restrict__ term1_ptr_5, const thrust::complex<double> * __restrict__ term2_ptr_5, const thrust::complex<double> * __restrict__ term1_ptr_6, const thrust::complex<double> * __restrict__ term2_ptr_6, const thrust::complex<double> * __restrict__ term1_ptr_7, const thrust::complex<double> * __restrict__ term2_ptr_7, const thrust::complex<double> * __restrict__ term1_ptr_8, const thrust::complex<double> * __restrict__ term2_ptr_8, const thrust::complex<double> * __restrict__ term1_ptr_9, const thrust::complex<double> * __restrict__ term2_ptr_9, const thrust::complex<double> * __restrict__ term1_ptr_10, const thrust::complex<double> * __restrict__ term2_ptr_10, const thrust::complex<double> * __restrict__ term1_ptr_11, const thrust::complex<double> * __restrict__ term2_ptr_11, const thrust::complex<double> * __restrict__ term1_ptr_12, const thrust::complex<double> * __restrict__ term2_ptr_12, const thrust::complex<double> * __restrict__ term1_ptr_13, const thrust::complex<double> * __restrict__ term2_ptr_13, const thrust::complex<double> * __restrict__ term1_ptr_14, const thrust::complex<double> * __restrict__ term2_ptr_14, const thrust::complex<double> * __restrict__ term1_ptr_15, const thrust::complex<double> * __restrict__ term2_ptr_15, const thrust::complex<double> * __restrict__ term1_ptr_16, const thrust::complex<double> * __restrict__ term2_ptr_16, const thrust::complex<double> * __restrict__ term1_ptr_17, const thrust::complex<double> * __restrict__ term2_ptr_17, const thrust::complex<double> * __restrict__ term1_ptr_18, const thrust::complex<double> * __restrict__ term2_ptr_18, const thrust::complex<double> * __restrict__ term1_ptr_19, const thrust::complex<double> * __restrict__ term2_ptr_19, const int grid_size)
{
  int i = blockIdx.x * blockDim.x + threadIdx.x;
  if(i < grid_size){
    lhs_ptr[i] = - term1_ptr_0[i] * term2_ptr_0[i] - term1_ptr_1[i] * term2_ptr_1[i] - term1_ptr_2[i] * term2_ptr_2[i] - term1_ptr_3[i] * term2_ptr_3[i] - term1_ptr_4[i] * term2_ptr_4[i] - term1_ptr_5[i] * term2_ptr_5[i] - term1_ptr_6[i] * term2_ptr_6[i] - term1_ptr_7[i] * term2_ptr_7[i] - term1_ptr_8[i] * term2_ptr_8[i] - term1_ptr_9[i] * term2_ptr_9[i] - term1_ptr_10[i] * term2_ptr_10[i] - term1_ptr_11[i] * term2_ptr_11[i] - term1_ptr_12[i] * term2_ptr_12[i] - term1_ptr_13[i] * term2_ptr_13[i] - term1_ptr_14[i] * term2_ptr_14[i] - term1_ptr_15[i] * term2_ptr_15[i] - term1_ptr_16[i] * term2_ptr_16[i] - term1_ptr_17[i] * term2_ptr_17[i] - term1_ptr_18[i] * term2_ptr_18[i] - term1_ptr_19[i] * term2_ptr_19[i];
  }
}

const std::vector<FunctionPointer> assign_lhs_2terms_complex_double_kernels = {reinterpret_cast<void *>(assign_lhs_2terms_complex_double_kernel_0), reinterpret_cast<void *>(assign_lhs_2terms_complex_double_kernel_1), reinterpret_cast<void *>(assign_lhs_2terms_complex_double_kernel_2), reinterpret_cast<void *>(assign_lhs_2terms_complex_double_kernel_3), reinterpret_cast<void *>(assign_lhs_2terms_complex_double_kernel_4), reinterpret_cast<void *>(assign_lhs_2terms_complex_double_kernel_5), reinterpret_cast<void *>(assign_lhs_2terms_complex_double_kernel_6), reinterpret_cast<void *>(assign_lhs_2terms_complex_double_kernel_7), reinterpret_cast<void *>(assign_lhs_2terms_complex_double_kernel_8), reinterpret_cast<void *>(assign_lhs_2terms_complex_double_kernel_9), reinterpret_cast<void *>(assign_lhs_2terms_complex_double_kernel_10), reinterpret_cast<void *>(assign_lhs_2terms_complex_double_kernel_11), reinterpret_cast<void *>(assign_lhs_2terms_complex_double_kernel_12), reinterpret_cast<void *>(assign_lhs_2terms_complex_double_kernel_13), reinterpret_cast<void *>(assign_lhs_2terms_complex_double_kernel_14), reinterpret_cast<void *>(assign_lhs_2terms_complex_double_kernel_15), reinterpret_cast<void *>(assign_lhs_2terms_complex_double_kernel_16), reinterpret_cast<void *>(assign_lhs_2terms_complex_double_kernel_17), reinterpret_cast<void *>(assign_lhs_2terms_complex_double_kernel_18), reinterpret_cast<void *>(assign_lhs_2terms_complex_double_kernel_19), reinterpret_cast<void *>(assign_lhs_2terms_complex_double_kernel_20)};


}
